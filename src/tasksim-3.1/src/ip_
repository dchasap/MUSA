Makefile.am:2:export AM_CPPFLAGS = $(global_cppflags) -I$(abs_top_builddir)/include -I$(abs_srcdir) -I$(abs_builddir)
Makefile.am:4:  export AM_CPPFLAGS += -I@nanox_install_path@/include/nanox -I@nanox_install_path@/include -I@nanox_src_path@/src/apis/c -I@nanox_src_path@/src/support -I@nanox_src_path@/src/core -I@nanox_src_path@/src/arch/smp -I@nanox_src_path@/src/arch/unix-os -I@nanox_src_path@/src/arch/cluster -I@nanox_src_path@/src
Makefile.am:5:  export AM_CXXFLAGS += -include "new_decl.hpp"
Makefile.am:8:  export AM_CPPFLAGS += -I@dramsim_src_path@
Makefile.am:11:  export AM_CPPFLAGS += -I@ramulator_src_path@
core/Makefile.am:3:noinst_LTLIBRARIES = libnextsim-stats.la \
core/Makefile.am:4:                     libnextsim-engine.la \
core/Makefile.am:5:                     libnextsim-cpu.la \
core/Makefile.am:6:                     libnextsim-logic-memory.la \
core/Makefile.am:7:                     libnextsim-utils.la
core/Makefile.am:18:libnextsim_engine_la_LIBADD = libnextsim-stats.la
core/Makefile.am:38:libnextsim_utils_la_LIBADD = -lz
core/Makefile.am:52:utils_tsmpi_libtsmpi_la_CFLAGS=-D_GNU_SOURCE -D_TS_PATH=\"$(prefix)\" -fPIC -I$(mpi_install_path)/include
core/Makefile.am:53:utils_tsmpi_libtsmpi_la_LDFLAGS=-lz -fPIC -L$(mpi_lib_path) -lmpi -ldl
core/Makefile.am:62:lib_LTLIBRARIES += libompss-drtrace.la
core/Makefile.am:65:							@DR_CPPFLAGS@ -I@PTLSIM_DIR@ \
core/Makefile.am:66:							-I$(nanox_src_path)/src/core \
core/Makefile.am:67:							-I$(nanox_src_path)/src/support
core/Makefile.am:68:libompss_drtrace_la_CXXFLAGS = $(AM_CXXFLAGS) @DR_CFLAGS@ @DR_CPPFLAGS@ @PTLSIM_CXXFLAGS@ -fexceptions
core/Makefile.am:69:libompss_drtrace_la_LDFLAGS = @DR_LDFLAGS@ -Wl,--no-undefined
core/Makefile.am:70:libompss_drtrace_la_LIBADD = @DR_LIBRARIES@ -lz libnextsim-utils.la
core/Makefile.am:86:clean_drtrace_LDADD  = libnextsim-utils.la
core/Makefile.am:98:ompss_mpi_merge_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" $(AM_CPPFLAGS)
core/Makefile.am:99:ompss_mpi_merge_LDADD = libnextsim-utils.la
core/Makefile.am:102:ompss_mpi_perf_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" $(AM_CPPFLAGS)
core/Makefile.am:103:ompss_mpi_perf_LDADD = libnextsim-utils.la
core/Makefile.am:105:ompss_mpi_mem_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.am:106:ompss_mpi_mem_LDFLAGS = -L$(mpi_lib_path) -lmpi -lmpi_cxx $(AM_LDFLAGS)
core/Makefile.am:107:ompss_mpi_mem_LDADD = libnextsim-utils.la
core/Makefile.am:110:ompss_mpi_dr_mem_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.am:112:ompss_mpi_dr_mem_LDADD = libnextsim-utils.la
core/Makefile.am:116:ompss_mpi_merge_mw_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -DENABLE_MPI -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.am:118:ompss_mpi_merge_mw_LDADD = libnextsim-utils.la
core/Makefile.am:121:mpi_trace_sve_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.am:123:mpi_trace_sve_LDADD = libnextsim-utils.la
core/Makefile.am:127:mpi_merge_sve_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.am:129:mpi_merge_sve_LDADD = libnextsim-utils.la
core/Makefile.am:135:ompss_LDADD  = libnextsim-utils.la
core/Makefile.am:138:ompss_dr_LDADD  = libnextsim-utils.la
core/Makefile.am:142:instr_breakdown_LDADD = libnextsim-utils.la
core/Makefile.am:146:instr_breakdown_musa_LDADD = libnextsim-utils.la
core/Makefile.am:149:wd_info_LDADD = libnextsim-utils.la
core/Makefile.am:152:task_data_LDADD = libnextsim-utils.la
core/Makefile.am:155:ipc_histogram_LDADD = libnextsim-utils.la
core/Makefile.am:158:mem_analyzer_LDADD = libnextsim-utils.la
core/Makefile.am:161:trace_to_csvtdg_LDADD = libnextsim-utils.la
core/Makefile.am:164:paraver_intermediate_to_txt_LDADD  = libnextsim-utils.la
core/Makefile.am:167:trace_compare_LDADD = libnextsim-utils.la
core/Makefile.am:170:trace_compare_new_LDADD = libnextsim-utils.la
core/Makefile.am:173:trace_compare_info_LDADD = libnextsim-utils.la
core/Makefile.am:177:trace_convert_LDADD = libnextsim-utils.la
core/Makefile.am:180:merge_sve_memtrace_LDADD = libnextsim-utils.la
core/Makefile.am:183:trace_sve_LDADD = libnextsim-utils.la
core/Makefile.am:187:dr_nonanos_LDADD = libnextsim-utils.la
core/Makefile.am:191:merge_ompss_dr_traces_LDADD = libnextsim-utils.la
core/Makefile.am:194:                 tools/power_consumption/tasksim-mcpat.py \
core/Makefile.am:195:                 tools/power_consumption/Paraver/mcpat-paraver.sh \
core/Makefile.am:205:                 tools/power_consumption/templates/mcpat-input.xml
core/stats/VulnerabilityStat.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityStat.h:60:        address_mask_(~((1ULL << num_bits_ignored) - 1)),
core/stats/VulnerabilityStat.h:61:        stat_mask_(~(stat_granularity - 1)),
core/stats/VulnerabilityStat.h:66:                           << "no per-data-structure classification available";
core/stats/VulnerabilityStat.h:74:        assert(stat_granularity && stat_granularity == 1ULL << (ffs(stat_granularity) - 1));
core/stats/VulnerabilityStat.h:99:#include "VulnerabilityStat-impl.h"
core/stats/VulnerabilityHistogram-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityHistogram-impl.h:45:    for (size_t i = 0; i < this->range_map_.size(); i++) {
core/stats/VulnerabilityHistogram-impl.h:47:        data_initializer_[std::pair<unsigned,unsigned>(i, bins_ - 1)] = 0;
core/stats/VulnerabilityHistogram-impl.h:49:    worth_writing_.resize(this->range_map_.size(), false);
core/stats/VulnerabilityHistogram-impl.h:59:        exit(-1);
core/stats/VulnerabilityHistogram-impl.h:65:    Stat::out_ << this->name_ << ":" << this->class_ << ":" << this->id_ << std::endl;
core/stats/VulnerabilityHistogram-impl.h:68:    Stat::out_ << "addr_grain:" << (~this->address_mask_)+1 << ":map_size:" << map_size_
core/stats/VulnerabilityHistogram-impl.h:69:               << ":stat_period:" << this->stat_period_ << ":end_stats:" << this->end_time_ << std::endl;
core/stats/VulnerabilityHistogram-impl.h:73:    for (size_t i = 0; i < this->range_map_.size(); i++) {
core/stats/VulnerabilityHistogram-impl.h:75:            data_out << this->range_map_.name_at(i) << " ";
core/stats/VulnerabilityHistogram-impl.h:84:    for (size_t name_index = 0; name_index < this->range_map_.size(); name_index++) {
core/stats/VulnerabilityHistogram-impl.h:91:            data_out << " " << t * this->stat_period_;
core/stats/VulnerabilityHistogram-impl.h:93:        data_out << " " << this->end_time_ << std::endl;
core/stats/VulnerabilityHistogram-impl.h:105:                    data_out << " " << value->second;
core/stats/VulnerabilityHistogram-impl.h:121:    unsigned category = std::min(bins_ - 1, static_cast<unsigned>(safe_duration * bins_ / total_duration));
core/stats/VulnerabilityHistogram-impl.h:122:    data_[period - 1][std::pair<unsigned,unsigned>(range_index,category)] += 1;
core/stats/VulnerabilityHistogram-impl.h:130:    if (this->stat_period_ == 0) return;
core/stats/VulnerabilityHistogram-impl.h:133:    last_period = (A.last + this->stat_period_ - 1) / this->stat_period_;
core/stats/VulnerabilityHistogram-impl.h:134:    last_time   = (A.last + this->stat_period_ - 1) - (A.last + this->stat_period_ - 1) % this->stat_period_;
core/stats/VulnerabilityHistogram-impl.h:138:    for (engine::cycles_t p = last_period, t = last_time; t < time; p++, t += this->stat_period_) {
core/stats/VulnerabilityHistogram-impl.h:144:            A.safe += t - A.last;
core/stats/VulnerabilityHistogram-impl.h:147:        aggregate(data_type, p, A.safe, this->stat_period_);
core/stats/VulnerabilityHistogram-impl.h:157:    // NB : A will be zero initialized if 'address & this->address_mask_' is not in map
core/stats/VulnerabilityHistogram-impl.h:158:    engine::addr_t address = req.get_tag() & this->address_mask_;
core/stats/VulnerabilityHistogram-impl.h:159:    int range_index = this->range_map_.get_range_index(address);
core/stats/VulnerabilityHistogram-impl.h:171:        A.safe += time - A.last;
core/stats/VulnerabilityHistogram-impl.h:180:    this->end_time_ = time;
core/stats/VulnerabilityHistogram-impl.h:183:    if (this->stat_period_ == 0) {
core/stats/VulnerabilityHistogram-impl.h:185:            int range_index = this->range_map_.get_range_index(it->first);
core/stats/VulnerabilityHistogram-impl.h:188:            it->second.safe += (time - it->second.last);
core/stats/VulnerabilityHistogram-impl.h:189:            aggregate(range_index, 1, it->second.safe, time);
core/stats/VulnerabilityHistogram-impl.h:196:        end_period   = (time + this->stat_period_ - 1) / this->stat_period_,
core/stats/VulnerabilityHistogram-impl.h:197:        end_duration = (time + this->stat_period_ - 1) % this->stat_period_ + 1;
core/stats/VulnerabilityHistogram-impl.h:200:            int range_index = this->range_map_.get_range_index(it->first);
core/stats/VulnerabilityHistogram-impl.h:203:            last_period = (it->second.last + this->stat_period_ - 1) / this->stat_period_;
core/stats/VulnerabilityHistogram-impl.h:204:            last_time   = (it->second.last + this->stat_period_ - 1) - (it->second.last + this->stat_period_ - 1) % this->stat_period_;
core/stats/VulnerabilityHistogram-impl.h:206:            assert(last_period * this->stat_period_ == last_time);
core/stats/VulnerabilityHistogram-impl.h:209:                it->second.safe += (time - it->second.last);
core/stats/VulnerabilityHistogram-impl.h:210:                aggregate(range_index, last_period, it->second.safe, end_duration);
core/stats/VulnerabilityHistogram-impl.h:213:                it->second.safe += (last_time - it->second.last);
core/stats/VulnerabilityHistogram-impl.h:214:                aggregate(range_index, last_period, it->second.safe, this->stat_period_);
core/stats/VulnerabilityHistogram-impl.h:216:                    aggregate(range_index, p, this->stat_period_, this->stat_period_);
core/stats/TimeAverage-impl.h:61:        local_accum_ += (value) * (time - last_cycle_);
core/stats/TimeAverage-impl.h:62:        total_accum_ += (value) * (time - last_cycle_);
core/stats/TimeAverage-impl.h:81:        double ret = local_accum_ / (last_cycle_ - last_polling_cycle_);
core/stats/Stat.h:63:#include "Stat-impl.h"
core/stats/VulnerabilityHistogram.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityHistogram.h:39:    // time -> range, values -> occurences
core/stats/VulnerabilityHistogram.h:65:#include "VulnerabilityHistogram-impl.h"
core/stats/Average.h:59:#include "Average-impl.h"
core/stats/CounterMap.h:97:#include "CounterMap-impl.h"
core/stats/AverageMap.h:65:#include "AverageMap-impl.h"
core/stats/VulnerabilityTime.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityTime.h:51:    // time -> stat address -> stats
core/stats/VulnerabilityTime.h:74:#include "VulnerabilityTime-impl.h"
core/stats/VulnerabilityStat-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/Histogram.h:61:#include "Histogram-impl.h"
core/stats/Counter.h:59:#include "Counter-impl.h"
core/stats/CounterMap-impl.h:146:        if (names_.find(it->first) != names_.end()) {
core/stats/CounterMap-impl.h:147:            Stat::out_ << names_.at(it->first) << ":" << it->second;
core/stats/CounterMap-impl.h:149:            Stat::out_ << it->first << ":" << it->second;
core/stats/CounterMap-impl.h:177:            Stat::out_ << ":" << this->name_ << "_" << names_.at(key) << ":"
core/stats/CounterMap-impl.h:178:                       << this->class_ << ":" << this->id_ << std::endl;
core/stats/CounterMap-impl.h:180:            Stat::out_ << ":" << this->name_ << "_" << key << ":"
core/stats/CounterMap-impl.h:181:                       << this->class_ << ":" << this->id_ << std::endl;
core/stats/CounterMap-impl.h:197:    Stat::out_ << ":" << this->name_ << "_ANY" << ":"
core/stats/CounterMap-impl.h:198:               << this->class_ << ":" << this->id_ << std::endl;
core/stats/CounterMap-impl.h:199:    this->print_ = false;
core/stats/cycle.h:2: * Copyright (c) 2003, 2007-8 Matteo Frigo
core/stats/cycle.h:3: * Copyright (c) 2003, 2007-8 Massachusetts Institute of Technology
core/stats/cycle.h:27:/* machine-dependent cycle counters code. Needs to be inlined. */
core/stats/cycle.h:40:   which returns a double-precision variable in arbitrary units.  You
core/stats/cycle.h:44:   (In order to use some of the OS-dependent timer routines like
core/stats/cycle.h:56:   dnl ---------------------------------------------------------------------
core/stats/cycle.h:68:   dnl Cray UNICOS _rtc() (real-time clock) intrinsic
core/stats/cycle.h:76:   dnl ---------------------------------------------------------------------
core/stats/cycle.h:96:     return (double)t1 - (double)t0;					  \
core/stats/cycle.h:99:/*----------------------------------------------------------------*/
core/stats/cycle.h:111:/*----------------------------------------------------------------*/
core/stats/cycle.h:112:/* AIX v. 4+ routines to read the real-time clock or time-base register */
core/stats/cycle.h:127:     return (((double)t1.tb_high - (double)t0.tb_high) * 1.0e9 + 
core/stats/cycle.h:128:	     ((double)t1.tb_low - (double)t0.tb_low));
core/stats/cycle.h:134:/*----------------------------------------------------------------*/
core/stats/cycle.h:159:/* MacOS/Mach (Darwin) time-base register interface (unlike UpTime,
core/stats/cycle.h:169:/*----------------------------------------------------------------*/
core/stats/cycle.h:191:/* Visual C++ -- thanks to Morten Nissov for his help with this */
core/stats/cycle.h:211:     return (double)t1.QuadPart - (double)t0.QuadPart;
core/stats/cycle.h:218:/*----------------------------------------------------------------*/
core/stats/cycle.h:220: * X86-64 cycle counter
core/stats/cycle.h:238:   NOTE: this code will fail to link unless you use the -Masmkeyword compiler
core/stats/cycle.h:262:/*----------------------------------------------------------------*/
core/stats/cycle.h:339:/*----------------------------------------------------------------*/
core/stats/cycle.h:341: * PA-RISC cycle counter 
core/stats/cycle.h:370:/*----------------------------------------------------------------*/
core/stats/cycle.h:386:/*----------------------------------------------------------------*/
core/stats/cycle.h:389: * The 32-bit cycle counter on alpha overflows pretty quickly, 
core/stats/cycle.h:406:/*----------------------------------------------------------------*/
core/stats/cycle.h:422:/*----------------------------------------------------------------*/
core/stats/cycle.h:438:/*----------------------------------------------------------------*/
core/stats/cycle.h:452:     return ((double)t1.tv_sec - (double)t0.tv_sec) * 1.0E9 +
core/stats/cycle.h:453:	  ((double)t1.tv_nsec - (double)t0.tv_nsec);
core/stats/cycle.h:458:/*----------------------------------------------------------------*/
core/stats/cycle.h:474:/*----------------------------------------------------------------*/
core/stats/cycle.h:502:    if (addr == (uint64_t *)-1) {
core/stats/VulnerabilityTime-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityTime-impl.h:53:        exit(-1);
core/stats/VulnerabilityTime-impl.h:58:    Stat::out_ << this->name_ << ":" << this->class_ << ":" << this->id_ << std::endl;
core/stats/VulnerabilityTime-impl.h:61:    Stat::out_ << "addr_grain:" << (~this->address_mask_)+1 << ":map_size:" << map_size_ << ":stat_period:" << this->stat_period_
core/stats/VulnerabilityTime-impl.h:62:               << ":end_stats:" << this->end_time_ << std::endl;
core/stats/VulnerabilityTime-impl.h:69:            int range_index = this->range_map_.get_range_index(address_avg_pair.first);
core/stats/VulnerabilityTime-impl.h:71:                range_index = this->range_map_.get_range_index(address_avg_pair.first + ~this->stat_mask_);
core/stats/VulnerabilityTime-impl.h:72:                assert(static_cast<size_t>(range_index) < this->range_map_.size());
core/stats/VulnerabilityTime-impl.h:84:        data_out << this->range_map_.name_at(range_size_pair.first);
core/stats/VulnerabilityTime-impl.h:86:            data_out << " " << n * this->stat_period_;
core/stats/VulnerabilityTime-impl.h:88:        data_out << " " << this->end_time_ << '\n';
core/stats/VulnerabilityTime-impl.h:98:                    data_out << ' ' << value->second.mean[0];
core/stats/VulnerabilityTime-impl.h:100:                        data_out << ',' << value->second.mean[i];
core/stats/VulnerabilityTime-impl.h:117:    average_t &avg = data_[period][address & this->stat_mask_];
core/stats/VulnerabilityTime-impl.h:120:        avg.mean[i] += (ratios[i] - avg.mean[i]) / avg.nterms;
core/stats/VulnerabilityTime-impl.h:129:    if (this->stat_period_ == 0) return;
core/stats/VulnerabilityTime-impl.h:132:        cur_period_ = time / this->stat_period_;
core/stats/VulnerabilityTime-impl.h:133:        start_period_ = cur_period_ - time % this->stat_period_;
core/stats/VulnerabilityTime-impl.h:134:        end_period_ = start_period_ + this->stat_period_;
core/stats/VulnerabilityTime-impl.h:138:        engine::cycles_t period = A.last / this->stat_period_;
core/stats/VulnerabilityTime-impl.h:139:        engine::cycles_t inside = A.last % this->stat_period_;
core/stats/VulnerabilityTime-impl.h:143:            A.duration[safe_reason] += this->stat_period_ - inside;
core/stats/VulnerabilityTime-impl.h:146:        const double stat_period = this->stat_period_;
core/stats/VulnerabilityTime-impl.h:171:    // NB : A will be zero initialized if 'address & this->address_mask_' is not in map
core/stats/VulnerabilityTime-impl.h:172:    engine::addr_t address = req.get_tag() & this->address_mask_;
core/stats/VulnerabilityTime-impl.h:174:    if (this->range_map_.get_range_index(address) < 0) {
core/stats/VulnerabilityTime-impl.h:193:        A.duration[safe_reason] += time - A.last;
core/stats/VulnerabilityTime-impl.h:202:    this->end_time_ = time;
core/stats/VulnerabilityTime-impl.h:205:    const double last_duration = this->stat_period_ > 0 ? (time % this->stat_period_) : time;
core/stats/VulnerabilityTime-impl.h:206:    const engine::cycles_t last_period = this->stat_period_ > 0 ? time / this->stat_period_ : 0;
core/stats/VulnerabilityTime-impl.h:209:        periodic_output(it->first, it->second, time, true, END_PROGRAM);
core/stats/VulnerabilityTime-impl.h:214:                ratios[i] = it->second.duration[i] / last_duration;
core/stats/VulnerabilityTime-impl.h:216:            ratios[END_PROGRAM] = (it->second.duration[END_PROGRAM] + (time - it->second.last)) / last_duration;
core/stats/VulnerabilityTime-impl.h:217:            aggregate(it->first, last_period, ratios);
core/stats/Stat-impl.h:77:        sim->register_stat(*this);
core/stats/Histogram-impl.h:54:    double bin_size = (upper_bound_ - lower_bound_) / num_bins_;
core/stats/Histogram-impl.h:61:    this->print_ = false;
core/stats/Histogram-impl.h:79:    T range = upper_bound_ - lower_bound_;
core/stats/Histogram-impl.h:80:    T diff = value - lower_bound_;
core/stats/TimeStatistics.h:86:#include "TimeStatistics-impl.h"
core/stats/VulnerabilityAccessCount-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityAccessCount-impl.h:55:        exit(-1);
core/stats/VulnerabilityAccessCount-impl.h:61:    Stat::out_ << this->name_ << ":" << this->class_ << ":" << this->id_ << std::endl;
core/stats/VulnerabilityAccessCount-impl.h:64:    Stat::out_ << "addr_grain:" << (~this->address_mask_)+1 << ":map_size:" << map_size_
core/stats/VulnerabilityAccessCount-impl.h:65:               << ":stat_period:" << this->stat_period_ << ":end_stats:" << this->end_time_ << std::endl;
core/stats/VulnerabilityAccessCount-impl.h:72:            int range_index = this->range_map_.get_range_index(address_avg_pair.first);
core/stats/VulnerabilityAccessCount-impl.h:74:                range_index = this->range_map_.get_range_index(address_avg_pair.first + ~this->stat_mask_);
core/stats/VulnerabilityAccessCount-impl.h:75:                assert(static_cast<size_t>(range_index) < this->range_map_.size());
core/stats/VulnerabilityAccessCount-impl.h:87:        data_out << this->range_map_.name_at(range_size_pair.first);
core/stats/VulnerabilityAccessCount-impl.h:89:            data_out << " " << n * this->stat_period_;
core/stats/VulnerabilityAccessCount-impl.h:91:        data_out << " " << this->end_time_ << '\n';
core/stats/VulnerabilityAccessCount-impl.h:101:                    data_out << ' ' << value->second.loads << ',' << value->second.stores;
core/stats/VulnerabilityAccessCount-impl.h:118:    accesses_t &acc = data_[period][address & this->stat_mask_];
core/stats/VulnerabilityAccessCount-impl.h:126:    if (this->stat_period_ == 0) return;
core/stats/VulnerabilityAccessCount-impl.h:129:        cur_period_ = time / this->stat_period_;
core/stats/VulnerabilityAccessCount-impl.h:130:        start_period_ = cur_period_ - time % this->stat_period_;
core/stats/VulnerabilityAccessCount-impl.h:131:        end_period_ = start_period_ + this->stat_period_;
core/stats/VulnerabilityAccessCount-impl.h:135:        aggregate(address, A.last / this->stat_period_, A.read, A.write);
core/stats/VulnerabilityAccessCount-impl.h:142:    // NB : A will be zero initialized if 'address & this->address_mask_' is not in map
core/stats/VulnerabilityAccessCount-impl.h:143:    engine::addr_t address = req.get_tag() & this->address_mask_;
core/stats/VulnerabilityAccessCount-impl.h:144:    int range_index = this->range_map_.get_range_index(address);
core/stats/VulnerabilityAccessCount-impl.h:167:    this->end_time_ = time;
core/stats/VulnerabilityAccessCount-impl.h:170:    const engine::cycles_t div = this->stat_period_ ? this->stat_period_ : (time + 1);
core/stats/VulnerabilityAccessCount-impl.h:172:        assert (this->range_map_.get_range_index(address_stats_pair.first) >= 0);
core/stats/VulnerabilityAccessCount.h:2: * Copyright - Barcelona Supercomputing Center.
core/stats/VulnerabilityAccessCount.h:39:    // time -> stat address -> average value
core/stats/VulnerabilityAccessCount.h:63:#include "VulnerabilityAccessCount-impl.h"
core/stats/TimeStatistics-impl.h:51:    return static_cast<Keeper*>(this)->phaseIn(region);
core/stats/TimeStatistics-impl.h:58:    return static_cast<Keeper*>(this)->phaseOut(region);
core/stats/TimeStatistics-impl.h:101:    ticks duration = current_time - initial_time - region_stack_.top().nested_duration_;
core/stats/TimeStatistics-impl.h:106:        region_stack_.top().nested_duration_ += current_time - initial_time;
core/stats/TimeAverage.h:61:#include "TimeAverage-impl.h"
core/engine/Module-impl.h:85:    if ((delay != 0) && (this->get_execute_next_cycle())) {
core/engine/Module-impl.h:86:        this->set_execute_next_cycle(false);
core/engine/Simulator.cpp:57:        (*i)->extrapolate(from, to);
core/engine/Simulator.cpp:94:        if (module_vector_[mod_id]->reset() == false) continue;
core/engine/Simulator.cpp:95:        module_vector_[mod_id]->set_module_activity(0);
core/engine/Simulator.cpp:116:                list_iterator != list_end and list_iterator->first == current_cycle_; ++list_iterator) {
core/engine/Simulator.cpp:117:            assert(list_iterator->second < module_vector_.size());
core/engine/Simulator.cpp:118:            sim::stats::Time_Stats.phaseIn(get_code_region(module_vector_[list_iterator->second]->module_type_));
core/engine/Simulator.cpp:119:            module_vector_[list_iterator->second]->start();
core/engine/Simulator.cpp:120:            sim::stats::Time_Stats.phaseOut(get_code_region(module_vector_[list_iterator->second]->module_type_));
core/engine/Simulator.cpp:128:            if (list_begin == list_end or list_begin->first != current_cycle_) {
core/engine/Simulator.cpp:132:            mod_id = list_begin->second;
core/engine/Simulator.cpp:133:            sim::stats::Time_Stats.phaseIn(get_code_region(module_vector_[mod_id]->module_type_));
core/engine/Simulator.cpp:134:            module_vector_[mod_id]->end();
core/engine/Simulator.cpp:135:            sim::stats::Time_Stats.phaseOut(get_code_region(module_vector_[mod_id]->module_type_));
core/engine/Simulator.cpp:136:            if (module_vector_[mod_id]->get_next_activity() == current_cycle_)
core/engine/Simulator.cpp:137:                module_vector_[mod_id]->set_module_activity(engine::NEVER);
core/engine/Simulator.cpp:154:            module_vector_[list_elem.second]->print_status();
core/engine/Simulator.cpp:170:            bool mod_active = module_vector_[mod_id]->cpu_activity_poll();
core/engine/Simulator.cpp:182:                module_vector_[list_elem.second]->print_status();
core/engine/Simulator.cpp:186:                list_elem->print_status();
core/engine/Simulator.cpp:188:            exit(-1);
core/engine/Simulator.cpp:199:            module_vector_[mod_id]->print_hardware_counters(next_hardware_sampling_);
core/engine/Simulator.cpp:208:                module_vector_[mod_id]->print_hardware_counters(next_hardware_sampling_);
core/engine/Simulator.h:183:#include "Simulator-impl.h"
core/engine/Module.h:47:    /** If a module is waken during end half-cycle it needs
core/engine/Module.h:67:     * (used only when a module is waken up during end half-cycle
core/engine/Module.h:136:    /** Returns wether the module has executed instructions/phases (false for non-cpus). */
core/engine/Module.h:146:#include "Module-impl.h"
core/engine/Config.cpp:83:            label = line.substr(begin + 1, end - begin - 1);
core/engine/Config.cpp:90:            key = line.substr(begin, end - begin);
core/engine/Config.cpp:98:                exit(-1);
core/engine/Config.cpp:106:                    value = line.substr(begin, end - begin);
core/engine/Config.cpp:109:                    current->second[key].push_back(value);
core/engine/Config.cpp:124:        exit(-1);
core/engine/Config.cpp:128:    key_map_t &target = this->labels_["Global"];
core/engine/Config.cpp:130:    for (k = subtree->second.begin(); k != subtree->second.end(); k++) {
core/engine/Config.cpp:131:        target.insert(key_map_t::value_type(k->first, k->second));
core/engine/Config.cpp:143:        exit(-1);
core/engine/Config.cpp:147:    key_map_t &target = this->labels_["Global"];
core/engine/Config.cpp:149:    for (k = subtree->second.begin(); k != subtree->second.end(); k++) {
core/engine/Config.cpp:151:        t.push_back(k->second[index]);
core/engine/Config.cpp:152:        target.insert(key_map_t::value_type(k->first, t));
core/engine/Config-impl.h:62:        exit(-1);
core/engine/Config-impl.h:64:    key_map_t::const_iterator i = keys->second.find(key);
core/engine/Config-impl.h:65:    if (i == keys->second.end()) {
core/engine/Config-impl.h:69:        exit(-1);
core/engine/Config-impl.h:73:    for (v = i->second.begin(); v != i->second.end(); v++) {
core/engine/Config-impl.h:120:        exit(-1);
core/engine/Config-impl.h:122:    key_map_t::const_iterator i = keys->second.find(key);
core/engine/Config-impl.h:123:    if (i == keys->second.end()) {
core/engine/Config-impl.h:127:        exit(-1);
core/engine/Config-impl.h:129:    std::stringstream ss(i->second[0]);
core/engine/Config-impl.h:147:        exit(-1);
core/engine/Config-impl.h:187:    key_map_t &target = this->labels_[label];
core/engine/Config-impl.h:190:        i->second.push_back(ss.str());
core/engine/Config-impl.h:205:    key_map_t &target = this->labels_[label];
core/engine/Config-impl.h:224:        exit(-1);
core/engine/Config-impl.h:226:    key_map_t::const_iterator i = keys->second.find(key);
core/engine/Config-impl.h:228:    return (i != keys->second.end());
core/engine/EventBuffer-impl.h:90:    return buffer_size_ - buffer_.size();
core/engine/OutPort.h:39:/** \brief A write-only port
core/engine/OutPort.h:114:#include "OutPort-impl.h"
core/engine/InPort-impl.h:57:    return not peer_->is_empty();
core/engine/InPort-impl.h:65:    if (peer_->is_empty()) {
core/engine/InPort-impl.h:68:    value = peer_->get();
core/engine/InPort-impl.h:70:    peer_->consume();
core/engine/InPort-impl.h:71:    if (peer_->wake_up_on_read_ == true) {
core/engine/InPort-impl.h:72:        peer_->owner_.get_simulator().wake_up_module(peer_->owner_);
core/engine/InPort-impl.h:83:    if (peer_->is_empty()) {
core/engine/InPort-impl.h:86:    container.emplace_back(args..., std::move(peer_->get()));
core/engine/InPort-impl.h:88:    peer_->consume();
core/engine/InPort-impl.h:89:    if (peer_->wake_up_on_read_ == true) {
core/engine/InPort-impl.h:90:        peer_->owner_.get_simulator().wake_up_module(peer_->owner_);
core/engine/Simulator-impl.h:43:    return module_vector_.size() - 1;
core/engine/Simulator-impl.h:81:        if (i->first < target_cycle) continue;
core/engine/Simulator-impl.h:98:        if (i->second == mod_id) {
core/engine/Simulator-impl.h:110:    return stat_vector_.size() - 1;
core/engine/OutPort-impl.h:87:    value_.back().touch(this->owner_.get_simulator());
core/engine/OutPort-impl.h:88:    owner_.get_simulator().wake_up_module(peer_->owner_);
core/engine/OutPort-impl.h:123:    return peer_->owner_;
core/engine/Config.h:98:#include "Config-impl.h"
core/engine/DModule.h:51:#include "DModule-impl.h"
core/engine/types.h:39:const cycles_t NEVER = -1;
core/engine/types.h:142:        return module_type_index.find(module_name)->second;
core/engine/InPort.h:86:#include "InPort-impl.h"
core/engine/IModule.h:52:#include "IModule-impl.h"
core/engine/EventBuffer.h:72:#include "EventBuffer-impl.h"
core/tools/mpi_merge_sve.cpp:98:        exit(-1);
core/tools/mpi_merge_sve.cpp:117:        nx_args_string += " --instrument-default=all --disable-ut --smp-workers=1 --throttle-upper=9999999 --instrumentation=nextsim";
core/tools/mpi_merge_sve.cpp:136:        exit(-1);
core/tools/mpi_merge_sve.cpp:139:        exit(-1);
core/tools/mpi_merge_sve.cpp:146:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/mpi_merge_sve.cpp:151:        if (strcmp(argv[i], "--") == 0) {
core/tools/mpi_merge_sve.cpp:155:    return -1;
core/tools/mpi_merge_sve.cpp:175:    while ((res = ::getopt(argc, argv, "nkv:f:e:p:")) != -1) {
core/tools/mpi_merge_sve.cpp:194:    if (double_dash_pos == -1) {
core/tools/mpi_merge_sve.cpp:196:        exit(-1);
core/tools/mpi_merge_sve.cpp:200:        exit(-1);
core/tools/mpi_merge_sve.cpp:204:        exit(-1);
core/tools/mpi_merge_sve.cpp:209:        exit(-1);
core/tools/mpi_merge_sve.cpp:252:    std::string sve_log("sve-memtrace." + benchmark_name + "." + std::to_string(pid) + ".log");
core/tools/mpi_merge_sve.cpp:253:    std::vector<std::string> merge_command({merge_tool, "-i", initial_trace, "-o", final_trace, "-l", sve_log});
core/tools/mpi_merge_sve.cpp:255:        merge_command.push_back("-n");
core/tools/wd_info.cpp:52:    std::cerr << "Usage: " << command << " [options] -i trace_file_prefix" << std::endl
core/tools/wd_info.cpp:57:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/wd_info.cpp:83:    while ((res = ::getopt(argc, argv, "w:i:")) != -1) {
core/tools/ompss_util.h:76:#include "core/tools/ompss_util-impl.h"
core/tools/ipc_histogram.cpp:64:            values[static_cast<unsigned>((val - low) * static_cast<double>(buckets) / (upp - low))]++;
core/tools/ipc_histogram.cpp:70:            std::cout << "[" << std::setprecision(1) << (low+b*(upp-low)/buckets)
core/tools/ipc_histogram.cpp:71:                      << ":" << std::setprecision(1) << (low+(b+1)*(upp-low)/buckets);
core/tools/ipc_histogram.cpp:97:    std::cerr << "Usage: " << command << " [options] -i trace_file_prefix" << std::endl
core/tools/ipc_histogram.cpp:102:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/ipc_histogram.cpp:119:    while ((res = ::getopt(argc, argv, "dc:i:f:")) != -1) {
core/tools/trace_sve.cpp:93:        exit(-1);
core/tools/trace_sve.cpp:112:        nx_args_string += " --instrument-default=all --disable-ut --smp-workers=1 --throttle-upper=9999999 --instrumentation=nextsim";
core/tools/trace_sve.cpp:132:        exit(-1);
core/tools/trace_sve.cpp:135:        exit(-1);
core/tools/trace_sve.cpp:142:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/trace_sve.cpp:147:        if (strcmp(argv[i], "--") == 0) {
core/tools/trace_sve.cpp:151:    return -1;
core/tools/trace_sve.cpp:162:    while ((res = ::getopt(argc, argv, "nv:")) != -1) {
core/tools/trace_sve.cpp:175:    if (double_dash_pos == -1) {
core/tools/trace_sve.cpp:177:        exit(-1);
core/tools/trace_sve.cpp:183:        exit(-1);
core/tools/trace_sve.cpp:188:    std::string client_flag("-client");
core/tools/trace_sve.cpp:191:        exit(-1);
core/tools/trace_sve.cpp:194:    std::string ts_tool(tasksim_home + "/lib/libompss-drtrace.so");
core/tools/trace_sve.cpp:212:        ts_tool_args = std::string("-n -o " + initial_trace);
core/tools/trace_sve.cpp:214:        ts_tool_args = std::string("-i " + nanos_trace + " -o " + initial_trace);
core/tools/trace_sve.cpp:216:    std::vector<std::string> dr_args({"-unsafe_build_ldstex", "-max_bb_instrs", "32", "-max_trace_bbs", "4"});
core/tools/trace_sve.cpp:226:        execute_ompss(argc - double_dash_pos - 1, &argv[double_dash_pos+1], nanos_trace.c_str());
core/tools/trace_sve.cpp:235:    nx_args_string += " --disable-ut --smp-workers=1 --throttle-upper=9999999";
core/tools/trace_sve.cpp:243:    std::string log_file("sve-memtrace." + benchmark_name + "." + std::to_string(pid) + ".log");
core/tools/trace_sve.cpp:244:    std::vector<std::string> merge_command({merge_tool, "-i", initial_trace, "-o", final_trace, "-l", log_file});
core/tools/trace_sve.cpp:246:        merge_command.push_back("-n");
core/tools/memory_transfer.h:93:#include "memory_transfer-impl.h"
core/tools/memfilter.cpp:127:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/memfilter.cpp:145:    while((c = ::getopt(argc, argv,"s:i:o:")) != -1) {
core/tools/ompss_mpi_pin_mem.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/tools/ompss_mpi_pin_mem.cpp:52:  #include "core/utils/tsmpi/libtsmpi_extern-impl.h"
core/tools/ompss_mpi_pin_mem.cpp:78:    std::string env3(std::string("NX_ARGS=--smp-workers=1 --throttle-upper=9999999 \nLD_PRELOAD=") + phase_wrapper);
core/tools/ompss_mpi_pin_mem.cpp:80:    const char *t_flag = "-t";
core/tools/ompss_mpi_pin_mem.cpp:81:    const char *i_flag = "-i";
core/tools/ompss_mpi_pin_mem.cpp:82:    const char *o_flag = "-o";
core/tools/ompss_mpi_pin_mem.cpp:83:    const char *dash_flag = "--";
core/tools/ompss_mpi_pin_mem.cpp:88:        exit(-1);
core/tools/ompss_mpi_pin_mem.cpp:133:        alloc_and_copy(array_of_argv[i], 3, tmp_filenames[i].c_str());  //  < -- input
core/tools/ompss_mpi_pin_mem.cpp:135:        alloc_and_copy(array_of_argv[i], 5, tmp_s_out.c_str());         //  < -- output
core/tools/ompss_mpi_pin_mem.cpp:143:        array_of_argv[i][arg_elems[i] - 1] = nullptr;
core/tools/ompss_mpi_pin_mem.cpp:163:        std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_pin_mem.cpp:165:        for (int j = 0 ; j < (arg_elems[i] - 1); j++){
core/tools/ompss_mpi_pin_mem.cpp:177:    std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_pin_mem.cpp:212:    // need to obtain parameter -np and procs
core/tools/ompss_mpi_pin_mem.cpp:220:    if (strcmp(argv[1],"-np") != 0) {
core/tools/ompss_mpi_pin_mem.cpp:221:        std::cout << "2nd and 3rd Argument must define -np and #processes" << std::endl;
core/tools/ompss_mpi_pin_mem.cpp:222:        exit(-1);
core/tools/ompss_mpi_pin_mem.cpp:228:        exit(-1);
core/tools/ompss_mpi_pin_mem.cpp:242:                  << "[OMPSS MPI MEM] MASTER IS GOING TO SPAWN --- Rank "
core/tools/ompss_mpi_pin_mem.cpp:254:            exit(-1);
core/tools/ompss_mpi_pin_mem.cpp:284:            exit (-1);
core/tools/ompss_mpi_pin_mem.cpp:288:        execute_pin_mpi(argc - 3, &argv[3], tmp_filenames, out_filenames);
core/tools/ompss_mpi_pin_mem.cpp:292:        printf("[OMPSS MPI MEM] IDLE - Rank %d/%d at your command (PID: %d PPID: %d) [%d/%d]\n",
core/tools/trace_convert.cpp:61:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/trace_convert.cpp:223:        std::cerr << "Input-Output Internal nor recognized." << std::endl;
core/tools/trace_convert.cpp:275:    while ((c = ::getopt(argc, argv, "i:o:f:g:")) != -1) {
core/tools/instr_breakdown_utils.cpp:104:            for (int i = 0; i < (vector_register_length/128)-1; i++) {
core/tools/instr_breakdown_utils.cpp:128:    if (wd == -1) {
core/tools/instr_breakdown_utils.cpp:134:        if (sim::trace::opname.find(it->first) != sim::trace::opname.end()) {
core/tools/instr_breakdown_utils.cpp:135:            std::cout << "  " << sim::trace::opname.at(it->first) << " " << it->second << std::endl;
core/tools/instr_breakdown_utils.cpp:137:            std::cout << "  " << static_cast<unsigned>(it->first) << " " << it->second << std::endl;
core/tools/instr_breakdown_utils.cpp:145:    std::cerr << "Usage: " << command << " [options] -i trace_file_prefix" << std::endl
core/tools/instr_breakdown_utils.cpp:150:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/mpi_trace_sve.cpp:96:        exit(-1);
core/tools/mpi_trace_sve.cpp:115:        nx_args_string += " --instrument-default=all --disable-ut --smp-workers=1 --throttle-upper=9999999 --instrumentation=nextsim";
core/tools/mpi_trace_sve.cpp:134:        exit(-1);
core/tools/mpi_trace_sve.cpp:137:        exit(-1);
core/tools/mpi_trace_sve.cpp:144:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/mpi_trace_sve.cpp:149:        if (strcmp(argv[i], "--") == 0) {
core/tools/mpi_trace_sve.cpp:153:    return -1;
core/tools/mpi_trace_sve.cpp:173:    while ((res = ::getopt(argc, argv, "nv:f:")) != -1) {
core/tools/mpi_trace_sve.cpp:188:    if (double_dash_pos == -1) {
core/tools/mpi_trace_sve.cpp:190:        exit(-1);
core/tools/mpi_trace_sve.cpp:196:        exit(-1);
core/tools/mpi_trace_sve.cpp:201:    std::string client_flag("-client");
core/tools/mpi_trace_sve.cpp:204:        exit(-1);
core/tools/mpi_trace_sve.cpp:207:    std::string ts_tool(tasksim_home + "/lib/libompss-drtrace.so");
core/tools/mpi_trace_sve.cpp:247:        ts_tool_args = std::string("-n -o " + initial_trace);
core/tools/mpi_trace_sve.cpp:249:        ts_tool_args = std::string("-i " + nanos_trace + " -o " + initial_trace);
core/tools/mpi_trace_sve.cpp:251:    // std::vector<std::string> dr_args({"-unsafe_build_ldstex", "-max_bb_instrs", "32", "-max_trace_bbs", "4"});
core/tools/mpi_trace_sve.cpp:253:    std::vector<std::string> command({drrun,  "-max_bb_instrs", "32", "-max_trace_bbs", " 4",
core/tools/mpi_trace_sve.cpp:254:            "-unsafe_build_ldstex", client_flag, armie_tool, "0", "\"\"", client_flag, ts_tool, "1", ts_tool_args});
core/tools/mpi_trace_sve.cpp:265:    nx_args_string += " --disable-ut --smp-workers=1 --throttle-upper=9999999";
core/tools/mpi_trace_sve.cpp:274:    std::string log_file("sve-memtrace." + benchmark_name + "." + std::to_string(pid) + ".log");
core/tools/mpi_trace_sve.cpp:275:    std::vector<std::string> merge_command({merge_tool, "-i", initial_trace, "-o", final_trace, "-l", log_file});
core/tools/mpi_trace_sve.cpp:278:        merge_command.push_back("-n");
core/tools/trace_conversion_config.cpp:50:        return internal_dictionary_.find(value)->second;
core/tools/trace_conversion_config.cpp:55:            std::cerr << it->first << std::endl;
core/tools/trace_conversion_config.cpp:65:        std::cout << "returning " << stream_dictionary_.find(value)->second << std::endl;
core/tools/trace_conversion_config.cpp:66:        return stream_dictionary_.find(value)->second;
core/tools/trace_conversion_config.cpp:71:            std::cerr << it->first << std::endl;
core/tools/trace_conversion_config.cpp:80:        return filetype_dictionary_.find(value)->second;
core/tools/trace_conversion_config.cpp:85:            std::cerr << it->first << std::endl;
core/tools/trace_conversion_config.cpp:95:    if (split == -1 || second_split == -1) {
core/tools/trace_conversion_config.cpp:101:    input_stream_ = stream(config.substr(split+1, second_split - split - 1));
core/tools/trace_conversion_config.cpp:109:    if (split == -1 || second_split == -1) {
core/tools/trace_conversion_config.cpp:115:    output_stream_ = stream(config.substr(split+1, second_split - split - 1));
core/tools/ompss.cpp:52:    std::cout << "Usage: " << argv0 << " [-out trace_name] [-k|-nxtrace trace.streaminfo] program [program args]" << std::endl;
core/tools/ompss.cpp:55:    std::cout << "\t-out trace_name       Sets the output trace's name to trace_name (default is program.ts)." << std::endl;
core/tools/ompss.cpp:56:    std::cout << "\t-k, --keep            Keep the temporary (intermediate) trace files." << std::endl;
core/tools/ompss.cpp:57:    std::cout << "\t-nxtrace in_trace     Use the argument as intermediate trace. Implies -k." << std::endl;
core/tools/ompss.cpp:61:              << "pin.sh and tasksim's libompss-trace.so paths." << std::endl;
core/tools/ompss.cpp:64:    std::cout << "\tPIN_ARGS              : Additional arguments to pin (see pin.sh -help)." << std::endl;
core/tools/ompss.cpp:66:              << "(see pin.sh -t <tool> -help -- command_line)." << std::endl;
core/tools/ompss.cpp:91:        nx_args_string += " --instrument-default=all --smp-workers=1 --throttle-upper=9999999 -instrumentation=nextsim";
core/tools/ompss.cpp:107:        exit(-1);
core/tools/ompss.cpp:110:        exit(-1);
core/tools/ompss.cpp:117:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/ompss.cpp:122:    const char *t_flag = "-t";
core/tools/ompss.cpp:123:    const char *i_flag = "-i";
core/tools/ompss.cpp:124:    const char *o_flag = "-o";
core/tools/ompss.cpp:125:    const char *dash_flag = "--";
core/tools/ompss.cpp:150:        nx_args_string += " --smp-workers=1 --throttle-upper=9999999";
core/tools/ompss.cpp:220:        exit(-1);
core/tools/ompss.cpp:223:        exit(-1);
core/tools/ompss.cpp:239:        usage(argv[0], -1);
core/tools/ompss.cpp:248:    while (++opt < argc - 1) {
core/tools/ompss.cpp:249:        if (std::string("-h").compare(argv[opt]) == 0 || std::string("--help").compare(argv[opt]) == 0) {
core/tools/ompss.cpp:251:        } else if (std::string("-k").compare(argv[opt]) == 0 || std::string("--keep").compare(argv[opt]) == 0) {
core/tools/ompss.cpp:253:        } else if (std::string("-out").compare(argv[opt]) == 0) {
core/tools/ompss.cpp:254:            if (opt+1 < argc-1) {
core/tools/ompss.cpp:257:                usage(argv[0], -1);
core/tools/ompss.cpp:259:        } else if (std::string("-nxtrace").compare(argv[opt]) == 0 && (opt + 1) < argc - 1) {
core/tools/ompss.cpp:261:            if (filename.length() < 512 && filename.compare(filename.length() - 11, 11, ".streaminfo") ==0 &&
core/tools/ompss.cpp:273:    int command_line_c = argc - opt;
core/tools/ompss.cpp:289:            exit(-1);
core/tools/ompss.cpp:308:        exit(-1);
core/tools/ompss.cpp:312:        /* Launch instrumented version to gather run-time traces */
core/tools/ompss.cpp:315:        std::cout << "[OMPSS] Reusing run-time trace given as input instead of generating" << std::endl;
core/tools/trace_compare.cpp:59:        return current_size - 1;
core/tools/trace_compare.cpp:111:    std::cout << "---";
core/tools/trace_compare.cpp:113:      std::cout << "-";
core/tools/trace_compare.cpp:212:      a_c--;
core/tools/trace_compare.cpp:213:      a_i -= last_a;
core/tools/instr_breakdown.cpp:56:    options['x'] = "Break down only the selected WD (requires a WD as a parameter, incompatible with -w).";
core/tools/instr_breakdown.cpp:59:    options['w'] = "Breakdown selected WD and its children (requires a WD as a parameter, incompatible with -x)";
core/tools/instr_breakdown.cpp:67:    while ((res = ::getopt(argc, argv, "pw:x:v:i:")) != -1) {
core/tools/instr_breakdown.cpp:133:    print_stats(-1, counter);
core/tools/trace_compare_info.cpp:79:              << " - Memory accesses" << std::endl
core/tools/trace_compare_info.cpp:80:              << " - Loads" << std::endl
core/tools/trace_compare_info.cpp:81:              << " - Stores" << std::endl
core/tools/trace_compare_info.cpp:82:              << " - Instructions" << std::endl
core/tools/trace_compare_info.cpp:83:              << " - MicroInstructions" << std::endl;
core/tools/trace_to_csvtdg.cpp:88:            // - if all dimensions have size == accessed_length, ok
core/tools/trace_to_csvtdg.cpp:89:            // - if one dimension has size > accessed_length, all deps above must have accessed_length == 1
core/tools/ompss_mpi_dr_mem.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/tools/ompss_mpi_dr_mem.cpp:40:#include "core/utils/tsmpi/libtsmpi_extern-impl.h"
core/tools/ompss_mpi_dr_mem.cpp:78:        exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:83:        exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:104:    std::string env3(std::string("NX_ARGS=--smp-workers=1 --disable-ut --throttle-upper=9999999 \nLD_PRELOAD=")
core/tools/ompss_mpi_dr_mem.cpp:107:    const char *c_flag = "-c";
core/tools/ompss_mpi_dr_mem.cpp:108:    const char *i_flag = "-i";
core/tools/ompss_mpi_dr_mem.cpp:109:    const char *o_flag = "-o";
core/tools/ompss_mpi_dr_mem.cpp:110:    const char *m_flag = "-m";
core/tools/ompss_mpi_dr_mem.cpp:111:    const char *dash_flag = "--";
core/tools/ompss_mpi_dr_mem.cpp:161:        alloc_and_copy(array_of_argv[i], nparams++, tmp_filenames[i].c_str());  //  < -- input
core/tools/ompss_mpi_dr_mem.cpp:163:        alloc_and_copy(array_of_argv[i], nparams++, tmp_out_file.c_str());         //  < -- output
core/tools/ompss_mpi_dr_mem.cpp:173:        if (nparams != (arg_elems[i]-1)) {
core/tools/ompss_mpi_dr_mem.cpp:175:                      << " parameters and I'm supossed to use " << (arg_elems[i]-1) << std::endl;
core/tools/ompss_mpi_dr_mem.cpp:180:        array_of_argv[i][arg_elems[i] - 1] = nullptr;
core/tools/ompss_mpi_dr_mem.cpp:202:        std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_dr_mem.cpp:204:        for (int j = 0; j < (arg_elems[i] - 1); j++) {
core/tools/ompss_mpi_dr_mem.cpp:219:    std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_dr_mem.cpp:280:    // need to obtain parameter -np and procs
core/tools/ompss_mpi_dr_mem.cpp:288:    if (strcmp(argv[1], "-np") != 0) {
core/tools/ompss_mpi_dr_mem.cpp:289:        std::cout << "2nd and 3rd Argument must define -np and #processes" << std::endl;
core/tools/ompss_mpi_dr_mem.cpp:290:        exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:296:        exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:313:                  << "[OMPSS MPI MEM] MASTER IS GOING TO SPAWN --- Rank "
core/tools/ompss_mpi_dr_mem.cpp:325:            exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:344:                int index = std::stoi(v1) - 1;
core/tools/ompss_mpi_dr_mem.cpp:361:            exit(-1);
core/tools/ompss_mpi_dr_mem.cpp:365:        execute_pin_mpi(argc - 3, &argv[3], tmp_filenames, out_filenames);
core/tools/ompss_mpi_dr_mem.cpp:369:        printf("[OMPSS MPI MEM] IDLE - Rank %d/%d at your command (PID: %d PPID: %d) [%d/%d]\n",
core/tools/ompss_mpi_merge.cpp:55:        exit(-1);
core/tools/ompss_mpi_merge.cpp:61:    std::cout << "Start Master-Worker -- Rank [ "<< rank << "]/["<< size << "] -- for Filename [" << benchmark_name << "]" << std::endl;
core/tools/ompss_mpi_merge.cpp:67:        exit(-1);
core/tools/ompss_mpi_merge.cpp:70:    Log::debug() << "---- TMPDIR_OUT_TRACE" << tmpdir;
core/tools/ompss_mpi_merge.cpp:75:        exit(-1);
core/tools/ompss_mpi_merge.cpp:83:        exit(-1);
core/tools/ompss_mpi_merge.cpp:104:        const std::string num_padded(std::string(6 - index.size(), '0') + index);  // rank
core/tools/ompss_mpi_merge.cpp:108:        std::cout << "----------------------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_merge.cpp:120:        std::cout << "----------------------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_perf.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/tools/ompss_mpi_perf.cpp:53:#include "core/utils/tsmpi/libtsmpi_extern-impl.h"
core/tools/ompss_mpi_perf.cpp:92:        nx_args_string += " --instrument-default=all --smp-workers=1 --throttle-upper=99 -instrumentation=nextsim";
core/tools/ompss_mpi_perf.cpp:121:        exit(-1);
core/tools/ompss_mpi_perf.cpp:124:        exit(-1);
core/tools/ompss_mpi_perf.cpp:130:        exit(-1);
core/tools/ompss_mpi_perf.cpp:132:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/ompss_mpi_perf.cpp:169:  strncpy (names.extension, names.local_temporal + (var_size - s_postfix.size()), s_postfix.size());
core/tools/ompss_mpi_perf.cpp:198:  printf("[TOOL] ----------------------------------\n");
core/tools/ompss_mpi_perf.cpp:204:  printf("[TOOL] ----------------------------------\n");
core/tools/ompss_mpi_perf.cpp:223:    // Launch instrumented version to gather run-time traces-
core/tools/ompss_mpi_perf.cpp:225:    // 1.- The interposition library has creeated a relation file
core/tools/ompss_mpi_perf.cpp:228:    // 2.- Every child process instance of nanos creates a temporary
core/tools/ompss_mpi_perf.cpp:234:    execute_ompss(argc - 1, &argv[1], names.remote_temporal);
core/tools/ompss_mpi_mem.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/tools/ompss_mpi_mem.cpp:52:  #include "core/utils/tsmpi/libtsmpi_extern-impl.h"
core/tools/ompss_mpi_mem.cpp:78:    std::string env3=("NX_ARGS=--smp-workers=1 --throttle-upper=9999999 \nLD_PRELOAD=");
core/tools/ompss_mpi_mem.cpp:81:    const char *t_flag = "-t";
core/tools/ompss_mpi_mem.cpp:82:    const char *i_flag = "-i";
core/tools/ompss_mpi_mem.cpp:83:    const char *o_flag = "-o";
core/tools/ompss_mpi_mem.cpp:84:    const char *dash_flag = "--";
core/tools/ompss_mpi_mem.cpp:135:      alloc_and_copy(array_of_argv[i], 3, tmp_in[i]);             //  < -- input
core/tools/ompss_mpi_mem.cpp:137:      alloc_and_copy(array_of_argv[i], 5, tmp_s_out.c_str());     //  < -- output
core/tools/ompss_mpi_mem.cpp:146:      array_of_argv[i][arg_elems[i]-1]=(char *)0;
core/tools/ompss_mpi_mem.cpp:167:       std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_mem.cpp:169:       for (j=0 ; j < (arg_elems[i] - 1)  ; j ++){
core/tools/ompss_mpi_mem.cpp:178:    std::cout << "--------------------------------------------------------" << std::endl;
core/tools/ompss_mpi_mem.cpp:211:    // need to obtain parameter -np  and procs
core/tools/ompss_mpi_mem.cpp:217:    if (strcmp(argv[1],"-np") != 0) {
core/tools/ompss_mpi_mem.cpp:218:        printf("2nd and 3rd Argument must define -np and #processes \n");
core/tools/ompss_mpi_mem.cpp:238:      printf("\n[OMPSS MPI MEM] MASTER IS GOING TO SPAWN --- Rank %d/%d at your command (PID: %d PPID: %d) [%d/%d]\n",
core/tools/ompss_mpi_mem.cpp:262:        exit (-1);
core/tools/ompss_mpi_mem.cpp:298:            index--;
core/tools/ompss_mpi_mem.cpp:311:    execute_pin_mpi(argc - 3, &argv[3], tmp_file_name_array, out_file_name_array,number_of_lines-1);
core/tools/ompss_mpi_mem.cpp:316:    printf("[OMPSS MPI MEM] IDLE - Rank %d/%d at your command (PID: %d PPID: %d) [%d/%d]\n",
core/tools/instr_breakdown_musa.cpp:143:    while ((res = ::getopt(argc, argv, "v:i:")) != -1) {
core/tools/instr_breakdown_musa.cpp:186:    print_stats(-1, counter);
core/tools/merge_sve_memtrace.cpp:119:    if (item.thread_id == -2) {
core/tools/merge_sve_memtrace.cpp:150:            it--;
core/tools/merge_sve_memtrace.cpp:151:            if (it->first < addr and it->first + it->second > addr) {
core/tools/merge_sve_memtrace.cpp:152:                memory_map_[it->first] = std::max((unsigned)(addr - it->first + size), it->second);
core/tools/merge_sve_memtrace.cpp:161:        if (addr + memory_map_[addr] > it->first) {
core/tools/merge_sve_memtrace.cpp:163:            memory_map_[addr] = std::max((unsigned)(it->first + it->second - addr), memory_map_[addr]);
core/tools/merge_sve_memtrace.cpp:248:        if (record.thread_id == -2) {
core/tools/merge_sve_memtrace.cpp:270:        exit(-1);
core/tools/merge_sve_memtrace.cpp:292:        if (record.thread_id == -2) {
core/tools/merge_sve_memtrace.cpp:318:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/merge_sve_memtrace.cpp:370:            int subtrace_id = -1;
core/tools/merge_sve_memtrace.cpp:466:                            << j << " is an SVE non-memory operation.";
core/tools/merge_sve_memtrace.cpp:472:    Log::info() << "From " << total << " instructions " << mem_sve << " are memory-sve and "
core/tools/merge_sve_memtrace.cpp:473:                << nonmem_sve << " are non-memory-sve instructions.";
core/tools/merge_sve_memtrace.cpp:575:                    // We add this macro-op memory accesses (if any):
core/tools/merge_sve_memtrace.cpp:721:    std::cout << "[MERGE] " << sve_nonmem << " SVE non-memory instructions executed." << std::endl;
core/tools/merge_sve_memtrace.cpp:722:    std::cout << "[MERGE] " << num_loads << " non=-SVE loads." << std::endl;
core/tools/merge_sve_memtrace.cpp:723:    std::cout << "[MERGE] " << num_stores << " non-SVE stores." << std::endl;
core/tools/merge_sve_memtrace.cpp:756:    while ((c = ::getopt(argc, argv, "i:o:l:vn")) != static_cast<char>(-1)) {
core/tools/clean_drtrace.cpp:50:    std::cerr << "Usage: " << command << " [options] -i trace_file_prefix" << std::endl
core/tools/clean_drtrace.cpp:55:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/clean_drtrace.cpp:65:    while ((res = ::getopt(argc, argv, "i:")) != -1) {
core/tools/clean_drtrace.cpp:94:              subtrace_id = -1;
core/tools/dr_nonanos.cpp:47:    std::cout << "Usage: " << argv0 << " [-out trace_name] program [program args]" << std::endl;
core/tools/dr_nonanos.cpp:50:    std::cout << "\t-out trace_name       Sets the output trace's name to trace_name (default is program.ts)." << std::endl;
core/tools/dr_nonanos.cpp:54:              << "drrun and tasksim's libompss-drtrace.so paths." << std::endl;
core/tools/dr_nonanos.cpp:57:    std::cout << "\tDR_ARGS               : Additional arguments to DynamoRIO (see drrun --help)." << std::endl;
core/tools/dr_nonanos.cpp:66:    const char *c_flag = "-c";
core/tools/dr_nonanos.cpp:67:    const char *o_flag = "-o";
core/tools/dr_nonanos.cpp:68:    const char *n_flag = "-n";
core/tools/dr_nonanos.cpp:69:    const char *dash_flag = "--";
core/tools/dr_nonanos.cpp:95:        nx_args_string += " --disable-ut --smp-workers=1 --throttle-upper=9999999";
core/tools/dr_nonanos.cpp:104:        dr_args_string += " -max_bb_instrs 512";
core/tools/dr_nonanos.cpp:148:        exit(-1);
core/tools/dr_nonanos.cpp:151:        exit(-1);
core/tools/dr_nonanos.cpp:167:        usage(argv[0], -1);
core/tools/dr_nonanos.cpp:175:    while (++opt < argc - 1) {
core/tools/dr_nonanos.cpp:176:        if (std::string("-h").compare(argv[opt]) == 0 || std::string("--help").compare(argv[opt]) == 0) {
core/tools/dr_nonanos.cpp:178:        } else if (std::string("-out").compare(argv[opt]) == 0) {
core/tools/dr_nonanos.cpp:179:            if (opt + 1 < argc-1) {
core/tools/dr_nonanos.cpp:182:                usage(argv[0], -1);
core/tools/dr_nonanos.cpp:190:    int command_line_c = argc - opt;
core/tools/dr_nonanos.cpp:202:        exit(-1);
core/tools/dr_nonanos.cpp:216:        int subtrace_id = -1;
core/tools/paraver_intermediate_to_txt.cpp:53:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/paraver_intermediate_to_txt.cpp:62:    std::cout << " - Input file: " << cfg.input_name_ << std::endl;
core/tools/paraver_intermediate_to_txt.cpp:63:    std::cout << " - Output file: " << cfg.output_name_ << std::endl;
core/tools/paraver_intermediate_to_txt.cpp:64:    std::cout << " - Binary input?: " << (cfg.binary_ ? "true" : "false") << std::endl;
core/tools/paraver_intermediate_to_txt.cpp:90:    while ((c = ::getopt(argc, argv, "i:o:t")) != -1) {
core/tools/power_consumption/README:4:TaskSim - McPAT
core/tools/power_consumption/README:9:McPAT (Multicore Power, Area, and Timing) is the first integrated power, area, and timing modeling framework for multithreaded and multicore/many-core processors.
core/tools/power_consumption/README:13:./tasksim-mcpat.py --out=McPAT-input_name <TaskSim config file> <TaskSim results file> <Private L2 (0 shared/coherent, 1 private)> <L3 (0 no, 1 yes)>
core/tools/power_consumption/README:15:The template used to generate the input of McPAT can be found at templates/mcpat-input.xml.  
core/tools/power_consumption/README:28:./mcpat -infile $McPAT-input_name -print_level 2 > $power_stats_file
core/tools/power_consumption/README:39:* dcache.caches->local_result.power.readOp.dynamic and dcache.caches->local_result.power.writeOp.dynamic from McPAT/core.cc for the cache DL1 .
core/tools/power_consumption/README:40:* unicache.caches->local_result.power.writeOp.dynamic and unicache.caches->local_result.power.readOp.dynamic from McPAT/sharedcache.cc for the cache L2.
core/tools/power_consumption/README:44:./mcpat-paraver.sh
core/tools/power_consumption/Paraver/cfgs/Total.cfg:466:< NEW DISPLAYING WINDOW Tasksim-Nanos++ Events >
core/tools/power_consumption/Paraver/cfgs/Total.cfg:468:window_name Tasksim-Nanos++ Events
core/tools/power_consumption/Paraver/cfgs/tasksim_nanos.cfg:7:< NEW DISPLAYING WINDOW Tasksim-Nanos++ Events >
core/tools/power_consumption/Paraver/cfgs/tasksim_nanos.cfg:9:window_name Tasksim-Nanos++ Events
core/tools/power_consumption/Paraver/mcpat-paraver.sh:4:~/code/tasksim-mcpat.py --out=mcpat-input.xml test.config results.txt 1 0
core/tools/power_consumption/Paraver/mcpat-paraver.sh:6:~/bin/McPAT/mcpat -infile mcpat-input.xml -print_level 4 > power_stats.txt
core/tools/power_consumption/Paraver/mcpat-paraver.sh:13:L1avgT=$(echo "scale=6;$L1avg*1000"| bc -q | sed 's/^\./0./;s/0*$//;s/\.$//')    #op floats
core/tools/power_consumption/Paraver/mcpat-paraver.sh:14:L2avgT=$(echo "scale=6;$L2avg*1000"| bc -q | sed 's/^\./0./;s/0*$//;s/\.$//')    #op floats
core/tools/power_consumption/Paraver/mcpat-paraver.sh:15:L1writeT=$(echo "scale=6;$L1write*1000"| bc -q | sed 's/^\./0./;s/0*$//;s/\.$//')    #op floats
core/tools/power_consumption/Paraver/mcpat-paraver.sh:16:L2writeT=$(echo "scale=6;$L2write*1000"| bc -q | sed 's/^\./0./;s/0*$//;s/\.$//')    #op floats
core/tools/power_consumption/Paraver/mcpat-paraver.sh:18:sed -i "154s/.*window_factors.*/window_factors $L1avgT $L1writeT/" cfgs/Total.cfg
core/tools/power_consumption/Paraver/mcpat-paraver.sh:19:sed -i "333s/.*window_factors.*/window_factors $L2avgT $L2writeT/" cfgs/Total.cfg
core/tools/power_consumption/templates/mcpat-input.xml:4:	    {% set cpu_freq = 1000  %}       <!-- Frequency of tasksim is 1ghz (1ns) and mcpat needs mhz-->
core/tools/power_consumption/templates/mcpat-input.xml:7:		<!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy -->
core/tools/power_consumption/templates/mcpat-input.xml:27:		<!--McPAT will skip the components if number is set to 0 -->
core/tools/power_consumption/templates/mcpat-input.xml:33:		<param name="number_of_L2s" value="{{ results.configure.ncpus }}"/> <!-- This number means how many L2 clusters in each cluster there can be multiple banks/ports -->
core/tools/power_consumption/templates/mcpat-input.xml:35:		<param name="number_of_L2s" value="1"/> <!-- This number means how many L2 clusters in each cluster there can be multiple banks/ports -->
core/tools/power_consumption/templates/mcpat-input.xml:38:		<param name="Private_L2" value="{{ results.system.privateL2 }}"/><!--1 Private, 0 shared/coherent -->
core/tools/power_consumption/templates/mcpat-input.xml:39:		<param name="number_of_L3s" value="{{ results.system.existsL3 }}"/> <!-- This number means how many L3 clusters -->
core/tools/power_consumption/templates/mcpat-input.xml:41:		<param name="homogeneous_cores" value="0"/><!--1 means homo -->
core/tools/power_consumption/templates/mcpat-input.xml:46:		<param name="homogeneous_ccs" value="1"/><!--cache coherence hardware -->
core/tools/power_consumption/templates/mcpat-input.xml:48:		<param name="core_tech_node" value="45"/><!-- nm -->
core/tools/power_consumption/templates/mcpat-input.xml:49:		<param name="target_core_clockrate" value="{{ cpu_freq }}"/> <!-- MHz -->
core/tools/power_consumption/templates/mcpat-input.xml:50:		<param name="temperature" value="380"/> <!-- Kelvin -->
core/tools/power_consumption/templates/mcpat-input.xml:52:		<param name="interconnect_projection_type" value="0"/><!--0: aggressive wire technology; 1: conservative wire technology -->
core/tools/power_consumption/templates/mcpat-input.xml:53:		<param name="device_type" value="0"/><!--0: HP(High Performance Type); 1: LSTP(Low standby power) 2: LOP (Low Operating Power)  -->
core/tools/power_consumption/templates/mcpat-input.xml:54:		<param name="longer_channel_device" value="1"/><!-- 0 no use; 1 use when possible -->
core/tools/power_consumption/templates/mcpat-input.xml:55:		<param name="power_gating" value="1"/><!-- 0 not enabled; 1 enabled -->
core/tools/power_consumption/templates/mcpat-input.xml:61:		<!-- address width determines the tag_width in Cache, LSQ and buffers in cache controller 
core/tools/power_consumption/templates/mcpat-input.xml:62:			default value is machine_bits, if not set --> 
core/tools/power_consumption/templates/mcpat-input.xml:65:		<stat name="busy_cycles"  value="{{results.system.Finalcyclecount - results.configure.idle_cycles}}"/>
core/tools/power_consumption/templates/mcpat-input.xml:70:		<!-- *********************** cores ******************* -->
core/tools/power_consumption/templates/mcpat-input.xml:72:			<!-- Core property -->
core/tools/power_consumption/templates/mcpat-input.xml:74:			<param name="vdd" value="0"/><!-- 0 means using ITRS default vdd -->
core/tools/power_consumption/templates/mcpat-input.xml:75:			<param name="power_gating_vcc" value="-1"/><!-- "-1" means using default power gating virtual power supply voltage constrained by technology and computed automatically -->
core/tools/power_consumption/templates/mcpat-input.xml:76:			<param name="opt_local" value="0"/> <!-- for cores with unknown timing, set to 0 to force off the opt flag -->
core/tools/power_consumption/templates/mcpat-input.xml:82:			<!-- inorder/OoO; 1 inorder; 0 OOO-->
core/tools/power_consumption/templates/mcpat-input.xml:84:			<!-- number_instruction_fetch_ports(icache ports) is always 1 in single-thread processor,
core/tools/power_consumption/templates/mcpat-input.xml:86:			branch information in consecutive branch instructions in the same fetch group can be read out from BTB once.--> 
core/tools/power_consumption/templates/mcpat-input.xml:88:			<!-- fetch_width determines the size of cachelines of L1 cache block -->
core/tools/power_consumption/templates/mcpat-input.xml:91:			<!-- decode_width determines the number of ports of the 
core/tools/power_consumption/templates/mcpat-input.xml:92:			renaming table (both RAM and CAM) scheme -->
core/tools/power_consumption/templates/mcpat-input.xml:95:			<!-- issue_width determines the number of ports of Issue window and other logic 
core/tools/power_consumption/templates/mcpat-input.xml:96:			as in the complexity effective processors paper; issue_width==dispatch_width -->
core/tools/power_consumption/templates/mcpat-input.xml:98:			<!-- commit_width determines the number of ports of register files -->
core/tools/power_consumption/templates/mcpat-input.xml:101:			<!-- number of branch instructions can be predicted simultaneously-->
core/tools/power_consumption/templates/mcpat-input.xml:102:			<!-- Current version of McPAT does not distinguish int and floating point pipelines 
core/tools/power_consumption/templates/mcpat-input.xml:103:			Theses parameters are reserved for future use.--> 
core/tools/power_consumption/templates/mcpat-input.xml:105:			<!--integer_pipeline and floating_pipelines, if the floating_pipelines is 0, then the pipeline is shared-->
core/tools/power_consumption/templates/mcpat-input.xml:107:			<!-- pipeline depth of int and fp, if pipeline is shared, the second number is the average cycles of fp ops -->
core/tools/power_consumption/templates/mcpat-input.xml:108:			<!-- issue and exe unit-->
core/tools/power_consumption/templates/mcpat-input.xml:110:			<!-- contains an adder, a shifter, and a logical unit -->
core/tools/power_consumption/templates/mcpat-input.xml:112:			<!-- For MUL and Div -->
core/tools/power_consumption/templates/mcpat-input.xml:114:			<!-- buffer between IF and ID stage -->
core/tools/power_consumption/templates/mcpat-input.xml:116:			<!-- buffer between ID and sche/exe stage -->
core/tools/power_consumption/templates/mcpat-input.xml:118:			<param name="instruction_window_scheme" value="0"/><!-- 0 PHYREG based, 1 RSBASED-->
core/tools/power_consumption/templates/mcpat-input.xml:119:			<!-- McPAT support 2 types of OoO cores, RS based and physical reg based-->
core/tools/power_consumption/templates/mcpat-input.xml:122:			<!-- the instruction issue Q as in Alpha 21264; The RS as in Intel P6 -->
core/tools/power_consumption/templates/mcpat-input.xml:124:			<!-- each in-flight instruction has an entry in ROB -->
core/tools/power_consumption/templates/mcpat-input.xml:125:			<!-- registers -->
core/tools/power_consumption/templates/mcpat-input.xml:126:			<param name="archi_Regs_IRF_size" value="16"/><!-- X86-64 has 16GPR -->			
core/tools/power_consumption/templates/mcpat-input.xml:127:			<param name="archi_Regs_FRF_size" value="32"/><!-- MMX + XMM -->
core/tools/power_consumption/templates/mcpat-input.xml:128:			<!--  if OoO processor, phy_reg number is needed for renaming logic, 
core/tools/power_consumption/templates/mcpat-input.xml:129:			renaming logic is for both integer and floating point insts.  -->
core/tools/power_consumption/templates/mcpat-input.xml:132:			<!-- rename logic -->
core/tools/power_consumption/templates/mcpat-input.xml:134:			<!-- can be RAM based(0) or CAM based(1) rename scheme 
core/tools/power_consumption/templates/mcpat-input.xml:135:			RAM-based scheme will have free list, status table;
core/tools/power_consumption/templates/mcpat-input.xml:136:			CAM-based scheme have the valid bit in the data field of the CAM 
core/tools/power_consumption/templates/mcpat-input.xml:137:			both RAM and CAM need RAM-based checkpoint table, checkpoint_depth=# of in_flight instructions;
core/tools/power_consumption/templates/mcpat-input.xml:138:			Detailed RAT Implementation see TR -->
core/tools/power_consumption/templates/mcpat-input.xml:140:			<!-- how many windows in the windowed register file, sun processors;
core/tools/power_consumption/templates/mcpat-input.xml:141:			no register windowing is used when this number is 0 -->
core/tools/power_consumption/templates/mcpat-input.xml:142:			<!-- In OoO cores, loads and stores can be issued whether inorder(Pentium Pro) or (OoO)out-of-order(Alpha),
core/tools/power_consumption/templates/mcpat-input.xml:143:			They will always try to execute out-of-order though. -->
core/tools/power_consumption/templates/mcpat-input.xml:144:			<param name="LSU_order" value="out-of-order"/>
core/tools/power_consumption/templates/mcpat-input.xml:146:			<!-- By default, in-order cores do not have load buffers -->
core/tools/power_consumption/templates/mcpat-input.xml:148:			<!-- number of ports refer to sustain-able concurrent memory accesses --> 
core/tools/power_consumption/templates/mcpat-input.xml:150:			<!-- max_allowed_in_flight_memo_instructions determines the # of ports of load and store buffer
core/tools/power_consumption/templates/mcpat-input.xml:151:			as well as the ports of Dcache which is connected to LSU -->	
core/tools/power_consumption/templates/mcpat-input.xml:152:			<!-- dual-pumped Dcache can be used to save the extra read/write ports -->
core/tools/power_consumption/templates/mcpat-input.xml:154:			<!-- general stats, defines simulation periods;require total, idle, and busy cycles for sanity check  -->
core/tools/power_consumption/templates/mcpat-input.xml:155:			<!-- please note: if target architecture is X86, then all the instructions refer to (fused) micro-ops -->
core/tools/power_consumption/templates/mcpat-input.xml:161:			<stat name="pipeline_duty_cycle" value="1"/><!--<=1, runtime_ipc/peak_ipc; averaged for all cores if homogeneous -->
core/tools/power_consumption/templates/mcpat-input.xml:162:			<!-- the following cycle stats are used for heterogeneous cores only, 
core/tools/power_consumption/templates/mcpat-input.xml:163:				please ignore them if homogeneous cores -->
core/tools/power_consumption/templates/mcpat-input.xml:166:			<stat name="busy_cycles"  value="{{results.system.Finalcyclecount - results.configure.idle_cycles}}"/>
core/tools/power_consumption/templates/mcpat-input.xml:167:			<!-- instruction buffer stats -->
core/tools/power_consumption/templates/mcpat-input.xml:168:			<!-- ROB stats, both RS and Phy based OoOs have ROB
core/tools/power_consumption/templates/mcpat-input.xml:170:			otherwise, McPAT has to guess based on number of committed instructions. -->
core/tools/power_consumption/templates/mcpat-input.xml:172:			<!-- multiple cycle accesses should be counted multiple times, 
core/tools/power_consumption/templates/mcpat-input.xml:174:			to get final accesses. But that needs detailed info for floating point inst mix -->
core/tools/power_consumption/templates/mcpat-input.xml:175:			<!--  currently the performance simulator should 
core/tools/power_consumption/templates/mcpat-input.xml:181:			The same rule applies to all cache access stats too!  -->
core/tools/power_consumption/templates/mcpat-input.xml:182:			<!-- following is AF for max power computation. 
core/tools/power_consumption/templates/mcpat-input.xml:183:				Do not change them, unless you understand them-->
core/tools/power_consumption/templates/mcpat-input.xml:184:			<stat name="IFU_duty_cycle" value="0.25"/>	<!--depends on Icache line size and instruction issue rate -->		
core/tools/power_consumption/templates/mcpat-input.xml:197:				<!-- there is no write requests to itlb although writes happen to it after miss, 
core/tools/power_consumption/templates/mcpat-input.xml:198:				which is actually a replacement -->
core/tools/power_consumption/templates/mcpat-input.xml:200:				<!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy,  -->
core/tools/power_consumption/templates/mcpat-input.xml:201:				<!-- cache_policy;//0 no write or write-though with non-write allocate;1 write-back with write-allocate -->
core/tools/power_consumption/templates/mcpat-input.xml:207:			        <!-- all the buffer related are optional -->
core/tools/power_consumption/templates/mcpat-input.xml:210:				<!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
core/tools/power_consumption/templates/mcpat-input.xml:219:				<param name="BTB_config" value="5120,4,2,1,1,3"/> <!--should be 4096 + 1024 -->
core/tools/power_consumption/templates/mcpat-input.xml:232:				<!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy -->
core/tools/power_consumption/templates/mcpat-input.xml:234:				<!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
core/tools/power_consumption/templates/mcpat-input.xml:236:				<!-- number of r, w, and rw ports -->
core/tools/power_consumption/templates/mcpat-input.xml:238:				<param name="vdd" value="0"/><!-- 0 means using ITRS default vdd -->
core/tools/power_consumption/templates/mcpat-input.xml:239:				<param name="power_gating_vcc" value="-1"/><!-- "-1" means using default power gating virtual power supply voltage constrained by technology and computed automatically -->
core/tools/power_consumption/templates/mcpat-input.xml:255:				<!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy -->
core/tools/power_consumption/templates/mcpat-input.xml:257:				<!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
core/tools/power_consumption/templates/mcpat-input.xml:259:				<!-- number of r, w, and rw ports -->
core/tools/power_consumption/templates/mcpat-input.xml:261:				<param name="vdd" value="0"/><!-- 0 means using ITRS default vdd -->
core/tools/power_consumption/templates/mcpat-input.xml:262:				<param name="power_gating_vcc" value="-1"/><!-- "-1" means using default power gating virtual power supply voltage constrained by technology and computed automatically -->
core/tools/power_consumption/templates/mcpat-input.xml:289:				<!-- the parameters are capacity,block_width, associativity, bank, throughput w.r.t. core clock, latency w.r.t. core clock,output_width, cache policy -->
core/tools/power_consumption/templates/mcpat-input.xml:291:				<!-- cache controller buffer sizes: miss_buffer_size(MSHR),fill_buffer_size,prefetch_buffer_size,wb_buffer_size-->	
core/tools/power_consumption/templates/mcpat-input.xml:293:				<!-- number of r, w, and rw ports -->
core/tools/power_consumption/templates/mcpat-input.xml:295:				<param name="vdd" value="0"/><!-- 0 means using ITRS default vdd -->
core/tools/power_consumption/templates/mcpat-input.xml:296:				<param name="power_gating_vcc" value="-1"/><!-- "-1" means using default power gating virtual power supply voltage constrained by technology and computed automatically -->
core/tools/power_consumption/templates/mcpat-input.xml:306:<!--**********************************************************************-->
core/tools/power_consumption/templates/mcpat-input.xml:312:<!--**********************************************************************-->
core/tools/power_consumption/templates/mcpat-input.xml:315:			<param name="number_units" value="0"/> <!-- unlike PCIe and memory controllers, each Ethernet controller only have one port -->
core/tools/power_consumption/templates/mcpat-input.xml:318:<!--**********************************************************************-->
core/tools/power_consumption/templates/mcpat-input.xml:324:<!--**********************************************************************-->
core/tools/power_consumption/templates/mcpat-input.xml:329:<!--**********************************************************************-->
core/tools/power_consumption/tasksim-mcpat.py:14:TEMPLATE = 'mcpat-input.xml'
core/tools/power_consumption/tasksim-mcpat.py:145:                    line = line.replace(' ', '').replace('\n', '').replace('[', '').replace(']', '').replace('-','')
core/tools/power_consumption/tasksim-mcpat.py:198:    parser.add_option('-o', '--out', type='string',
core/tools/power_consumption/tasksim-mcpat.py:199:        action='store', dest='out', default='mcpat-out.xml',
core/tools/mem_analyzer.cpp:150:    Log::debug2() << "wd " << wd_id << " -> subtrace id " << event.u.phase.subtrace_id;
core/tools/mem_analyzer.cpp:175:        if (check_dimension_range(ndim - 1, dims, start_addr, addr) == true) {
core/tools/mem_analyzer.cpp:226:                        std::cerr << "WARNING: NULL-address mitem " << mitem << ", in WD " << subtrace.wd_id
core/tools/mem_analyzer.cpp:231:                        sim::trace::addr_t dep_addr = reinterpret_cast<sim::trace::addr_t>(it->address);
core/tools/mem_analyzer.cpp:234:                        dep_addr += it->offset;
core/tools/mem_analyzer.cpp:239:                        for (uint16_t s = 0; s < it->dimensions.size(); s++) {
core/tools/mem_analyzer.cpp:240:                            dep_size *= it->dimensions[s].size;
core/tools/mem_analyzer.cpp:241:                            holes += (it->dimensions[s].size - it->dimensions[s].accessed_length);
core/tools/mem_analyzer.cpp:252:                        found = holes == 0 || check_dimension_range(it->dimensions.size() - 1, it->dimensions, dep_addr, addr);
core/tools/mem_analyzer.cpp:254:                        assert(it->flags.input || it->flags.output);  // it must be either input or output or both
core/tools/mem_analyzer.cpp:255:                        wd_count[it->flags.input * IN | it->flags.output * OUT]++;
core/tools/mem_analyzer.cpp:258:                        if (it->flags.concurrent) {
core/tools/mem_analyzer.cpp:259:                            assert(it->flags.input && it->flags.output);
core/tools/mem_analyzer.cpp:261:                        } else if (it->flags.commutative) {
core/tools/mem_analyzer.cpp:262:                            assert(it->flags.input && it->flags.output);
core/tools/mem_analyzer.cpp:268:                        if (stack >= addr and addr > (stack - 8192)) {
core/tools/mem_analyzer.cpp:385:            std::cerr << "on_event of non-existing wd_id " << wd_id << std::endl;
core/tools/mem_analyzer.cpp:388:        return wd_it->second;
core/tools/mem_analyzer.cpp:423:            out_ << "    " << it->first << ':' << it->second << std::endl;
core/tools/mem_analyzer.cpp:477:    const unsigned TOTAL_WDS = reader.get_total_number_of_tasks();  // remove the -1 when the bug is fixed
core/tools/mem_analyzer.cpp:502:                        assert(it->ld_ >= 0 and it->ld_ <=2);
core/tools/mem_analyzer.cpp:503:                        assert(it->st_ >= 0 and it->st_ <=1);
core/tools/mem_analyzer.cpp:504:                        if (it->isValid()) {
core/tools/mem_analyzer.cpp:506:                            for (int i = 0; i < (it->ld_ + it->st_); ++i) {
core/tools/mem_analyzer.cpp:645:    std::cerr << "Usage: " << cmd << " [options] -i trace_file_prefix" << std::endl << "    Options:" << std::endl;
core/tools/mem_analyzer.cpp:649:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/mem_analyzer.cpp:671:    while ((res = ::getopt(argc, argv, "dftmaci:v:w:x:")) != -1) {
core/tools/merge_ompss_dr_traces.cpp:47:    while ((res = ::getopt(argc, argv, "n:d:")) != -1) {
core/tools/trace_compare_new.cpp:72:      std::cout << "Differential stats A: " << this->bbl_ << ":"
core/tools/trace_compare_new.cpp:73:                << this->loads_ << ":" << this->stores_ << ":" << this->micro_
core/tools/trace_compare_new.cpp:94:        this->bbl_ += other.bbl_;
core/tools/trace_compare_new.cpp:95:        this->loads_ += other.loads_;
core/tools/trace_compare_new.cpp:96:        this->stores_ += other.stores_;
core/tools/trace_compare_new.cpp:97:        this->micro_ += other.micro_;
core/tools/trace_compare_new.cpp:119:                std::cout << "A" << (v_a.size()-i);
core/tools/trace_compare_new.cpp:124:                std::cout << "B" << (v_b.size()-i);
core/tools/trace_compare_new.cpp:184:              << " - Basic blocks" << std::endl
core/tools/trace_compare_new.cpp:185:              << " - Loads" << std::endl
core/tools/trace_compare_new.cpp:186:              << " - Stores" << std::endl
core/tools/trace_compare_new.cpp:187:              << " - MicroInstructions" << std::endl;
core/tools/ompss_dr.cpp:53:    std::cout << "Usage: " << argv0 << " [-out trace_name] [-k|-nxtrace trace.streaminfo] program [program args]" << std::endl;
core/tools/ompss_dr.cpp:56:    std::cout << "\t-out trace_name       Sets the output trace's name to trace_name (default is program.ts)." << std::endl;
core/tools/ompss_dr.cpp:57:    std::cout << "\t-k, --keep            Keep the temporary (intermediate) trace files." << std::endl;
core/tools/ompss_dr.cpp:58:    std::cout << "\t-nxtrace in_trace     Use the argument as intermediate trace (as generated with -k)." << std::endl;
core/tools/ompss_dr.cpp:62:              << "drrun and tasksim's libompss-drtrace.so paths." << std::endl;
core/tools/ompss_dr.cpp:65:    std::cout << "\tDR_ARGS               : Additional arguments to DynamoRIO (see drrun --help)." << std::endl;
core/tools/ompss_dr.cpp:91:        nx_args_string += " --instrument-default=all --disable-ut --smp-workers=1 --throttle-upper=9999999 --instrumentation=nextsim";
core/tools/ompss_dr.cpp:111:        exit(-1);
core/tools/ompss_dr.cpp:114:        exit(-1);
core/tools/ompss_dr.cpp:121:    std::cout << "[OMPSS] Run-time trace generated" << std::endl;
core/tools/ompss_dr.cpp:126:    const char *c_flag = "-c";
core/tools/ompss_dr.cpp:127:    const char *i_flag = "-i";
core/tools/ompss_dr.cpp:128:    const char *o_flag = "-o";
core/tools/ompss_dr.cpp:129:    const char *dash_flag = "--";
core/tools/ompss_dr.cpp:155:        nx_args_string += " --disable-ut --smp-workers=1 --throttle-upper=9999999";
core/tools/ompss_dr.cpp:164:        dr_args_string += " -max_bb_instrs 512";
core/tools/ompss_dr.cpp:210:        exit(-1);
core/tools/ompss_dr.cpp:213:        exit(-1);
core/tools/ompss_dr.cpp:229:        usage(argv[0], -1);
core/tools/ompss_dr.cpp:238:    while (++opt < argc - 1) {
core/tools/ompss_dr.cpp:239:        if (std::string("-h").compare(argv[opt]) == 0 || std::string("--help").compare(argv[opt]) == 0) {
core/tools/ompss_dr.cpp:241:        } else if (std::string("-k").compare(argv[opt]) == 0 || std::string("--keep").compare(argv[opt]) == 0) {
core/tools/ompss_dr.cpp:243:        } else if (std::string("-out").compare(argv[opt]) == 0) {
core/tools/ompss_dr.cpp:244:            if (opt+1 < argc-1) {
core/tools/ompss_dr.cpp:247:                usage(argv[0], -1);
core/tools/ompss_dr.cpp:249:        } else if (std::string("-nxtrace").compare(argv[opt]) == 0 && (opt + 1) < argc - 1) {
core/tools/ompss_dr.cpp:251:            if (filename.length() < 512 && filename.compare(filename.length() - 11, 11, ".streaminfo") ==0 &&
core/tools/ompss_dr.cpp:263:    int command_line_c = argc - opt;
core/tools/ompss_dr.cpp:279:            exit(-1);
core/tools/ompss_dr.cpp:297:        exit(-1);
core/tools/ompss_dr.cpp:301:        /* Launch instrumented version to gather run-time traces */
core/tools/ompss_dr.cpp:304:        std::cout << "[OMPSS] Reusing run-time trace given as input instead of generating" << std::endl;
core/tools/ompss_util-impl.h:187:                std::cerr << it->first << " " << it->second << std::endl;
core/tools/ompss_util-impl.h:215:            // could be warning if phases can be sorted out by removing non-traced ones
core/tools/ompss_util-impl.h:224:                std::cerr << " - " << *event_it << std::endl;
core/tools/ompss_util-impl.h:229:                std::cerr << " - " << *event_it << std::endl;
core/tools/ompss_util-impl.h:237:                    std::cerr << " - " << ts_e << std::endl;
core/tools/ompss_util-impl.h:290:                if (it->type_ == sim::trace::ompss::PHASE_EVENT) {
core/tools/ompss_util-impl.h:292:                    it->time_ += event.time_;
core/tools/ompss_util-impl.h:303:        // In both cases: report one phase (with length of both half-phases), add the event afterwards if there is one.
core/tools/ompss_util-impl.h:313:        if (prev_event_split_phase and event.type_ == split_phase->type_ and event.value_ == split_phase->value_) {
core/tools/ompss_util-impl.h:315:            assert(event.wd_id_ == split_phase->wd_id_);
core/tools/ompss_util-impl.h:316:            split_phase->time_ += event.time_;
core/tools/ompss_util-impl.h:319:                last_wd_event->type_ == event.type_ and last_wd_event->value_ == event.value_) {
core/tools/ompss_util-impl.h:321:            last_wd_event->time_ += event.time_;
core/tools/ompss_util-impl.h:333:        // split candidate is one-before-last, *last_wd_event is the event potentially splitting the phase in two.
core/tools/ompss_util-impl.h:337:        if (split_candidate->type_ != sim::trace::ompss::PHASE_EVENT) {
core/tools/ompss_util-impl.h:339:        } else if (last_wd_event->type_ == sim::trace::ompss::CREATE_TASK_EVENT) {
core/tools/ompss_util-impl.h:340:            prev_event_split_phase = (split_candidate->value_ == nanos_phase_map["submit"]);
core/tools/ompss_util-impl.h:341:        } else if (last_wd_event->type_ == sim::trace::ompss::WAIT_ON_EVENT) {
core/tools/ompss_util-impl.h:342:            prev_event_split_phase = (split_candidate->value_ == nanos_phase_map["wait_on"]);
core/tools/ompss_util-impl.h:343:        } else if (last_wd_event->type_ == sim::trace::ompss::WAIT_GROUP_EVENT) {
core/tools/ompss_util-impl.h:344:            prev_event_split_phase = (split_candidate->value_ == nanos_phase_map["wg_wait_completion"]);
core/tools/ompss_util-impl.h:345:        } else if (last_wd_event->type_ == sim::trace::ompss::SET_LOCK) {
core/tools/ompss_util-impl.h:346:            prev_event_split_phase = (split_candidate->value_ == nanos_phase_map["set_lock"]);
core/tools/ompss_util-impl.h:347:        } else if (last_wd_event->type_ == sim::trace::ompss::UNSET_LOCK) {
core/tools/ompss_util-impl.h:348:            prev_event_split_phase = (split_candidate->value_ == nanos_phase_map["unset_lock"]);
core/tools/ompss_util-impl.h:419:            it->second.push(dep.dep_);
core/tools/ompss_util-impl.h:525:                exit(-1);
core/tools/ompss_util-impl.h:534:        // exit(-1);
core/tools/ompss_util.cpp:62:        if (strncmp(ent->d_name, file_prefix.c_str(), file_prefix.size()) != 0) {
core/tools/ompss_util.cpp:65:        const std::string file_name(dir_path + "/" + std::string(ent->d_name));
core/tools/task_data.cpp:50:    std::cerr << "Usage: " << command << " [options] -i trace_file_prefix" << std::endl
core/tools/task_data.cpp:55:        std::cerr << "\t-" << it->first << "\t" << it->second << std::endl;
core/tools/task_data.cpp:65:    while ((res = ::getopt(argc, argv, "i:")) != -1) {
core/trace/dr/BasicDecoder.h:50:/** BasicDecoder defines a set of functions for translating complex instructions to micro-operations */
core/trace/dr/BasicDecoder.h:53:    /** handles how to convert a complex BBL INS to a set of micro-operations
core/trace/dr/BasicDecoder.h:56:    /** queries whether the translation of a complex instruction to micro-ops
core/trace/dr/BasicDecoder.h:60:     * and the translated micro-ops */
core/trace/dr/BasicDecoder.h:78:    /** translates the instructions in a DynamoRIOP BBL basic block to a set of micro-operations
core/trace/dr/BasicDecoder.h:91:#include "BasicDecoder-impl.h"
core/trace/dr/dynamoRIOTool.h:244:            prev_bbl_id_(-1),
core/trace/dr/dynamoRIOTool.h:285:    /** Function called when the instrumentation should be re-enabled (MPI phase exit). */
core/trace/dr/IntelDecoder.h:40:#include "core/trace/ptlsim-decode.h"
core/trace/dr/IntelDecoder.h:53:/** IntelDecoder defines a set of functions for translating complex instructions to micro-operations */
core/trace/dr/IntelDecoder.h:56:    /** converts a TransOp instruction to a set of micro-operations and
core/trace/dr/IntelDecoder.h:59:    /** converts the translated TransOps (from a complex Basic Block), to a set of micro-operations
core/trace/dr/IntelDecoder.h:63:    /** handles how to convert a complex BBL INS to a set of micro-operations
core/trace/dr/IntelDecoder.h:66:    /** queries whether the translation of a complex instruction to micro-ops
core/trace/dr/IntelDecoder.h:70:     * and the translated micro-ops */
core/trace/dr/IntelDecoder.h:76:    /** translates the instructions in a DynamoRIOP BBL basic block to a set of micro-operations
core/trace/dr/IntelDecoder.h:86:#include "IntelDecoder-impl.h"
core/trace/dr/IntelDecoder-impl.h:63:        translated_bbl.ins_.rbegin()->vectorize();
core/trace/dr/IntelDecoder-impl.h:64:        if (translated_bbl.ins_.rbegin()->isLoad()){
core/trace/dr/IntelDecoder-impl.h:65:            translated_bbl.ins_.rbegin()->type_ = op_t::REMOVED_LD;
core/trace/dr/IntelDecoder-impl.h:66:            translated_bbl.ins_.rbegin()->ld_ = 0;
core/trace/dr/IntelDecoder-impl.h:67:        } else if (translated_bbl.ins_.rbegin()->isStore()) {
core/trace/dr/IntelDecoder-impl.h:68:            translated_bbl.ins_.rbegin()->type_ = op_t::REMOVED_ST;
core/trace/dr/IntelDecoder-impl.h:69:            translated_bbl.ins_.rbegin()->st_ = 0;
core/trace/dr/IntelDecoder-impl.h:105:        unsigned lds_lack = x86_minfo.ld_ - ins_minfo.ld_;
core/trace/dr/IntelDecoder-impl.h:111:                    lds_lack--;
core/trace/dr/IntelDecoder-impl.h:122:        unsigned sts_lack = x86_minfo.st_ - ins_minfo.st_;
core/trace/dr/IntelDecoder-impl.h:128:                    sts_lack--;
core/trace/dr/IntelDecoder-impl.h:138:        unsigned lds_excess = ins_minfo.ld_ - x86_minfo.ld_;
core/trace/dr/IntelDecoder-impl.h:142:                    lds_excess -= translated_bbl.ins_[i].ld_;
core/trace/dr/IntelDecoder-impl.h:146:                    translated_bbl.ins_[i].ld_ -= lds_excess;
core/trace/dr/IntelDecoder-impl.h:155:        unsigned sts_excess = ins_minfo.st_ - x86_minfo.st_;
core/trace/dr/IntelDecoder-impl.h:160:                sts_excess--;
core/trace/dr/IntelDecoder-impl.h:168: * Function that converts the translated TransOps (from a complex BBL INS), to a set of micro-operations
core/trace/dr/IntelDecoder-impl.h:170: * If the translation to micro-ops generated a different number of memory accesses compared to the complex
core/trace/dr/IntelDecoder-impl.h:199:     * Assume a ld-op-st instruction
core/trace/dr/IntelDecoder-impl.h:276:        const unsigned size = bbl_size - index;
core/trace/dr/IntelDecoder-impl.h:327:    if (info->num_x86_trans_ != user_insn_count) {
core/trace/dr/IntelDecoder-impl.h:329:                  << "          " << info->num_x86_trans_ << " vs " << user_insn_count << std::endl;
core/trace/dr/IntelDecoder-impl.h:333:    for (auto &ins_info : info->minfo_) {
core/trace/dr/dynamoRIOTool.cpp:91:    symres = drsym_lookup_address(data->full_path, addr - data->start, &sym, DRSYM_DEFAULT_FLAGS);
core/trace/dr/dynamoRIOTool.cpp:205:    if (module_name.find("libompss-drtrace.so") != std::string::npos or
core/trace/dr/dynamoRIOTool.cpp:218:    if (module_name.find("libompss-drtrace.so") != std::string::npos or
core/trace/dr/dynamoRIOTool.cpp:226:    drsym_enumerate_symbols(mod->full_path, enumerate_symbols, NULL, DRSYM_LEAVE_MANGLED);
core/trace/dr/dynamoRIOTool.cpp:231:            // We are looking for the symbol mangled_it->c_str()
core/trace/dr/dynamoRIOTool.cpp:233:            drsym_error_t err = drsym_lookup_symbol(mod->full_path, mangled_it->c_str(), &modoff, DRSYM_LEAVE_MANGLED);
core/trace/dr/dynamoRIOTool.cpp:242:                    ok = drwrap_wrap(mod->start + modoff, static_task_entry, NULL);
core/trace/dr/dynamoRIOTool.cpp:245:                    ok = drwrap_wrap(mod->start + modoff, NULL, static_task_exit);
core/trace/dr/dynamoRIOTool.cpp:248:                    ok = drwrap_wrap(mod->start + modoff, static_task_entry, static_task_exit);
core/trace/dr/dynamoRIOTool.cpp:252:                    instrumented_functions_.insert({(mod->start + modoff), *it});
core/trace/dr/dynamoRIOTool.cpp:255:                    dr_fprintf(STDOUT, "[DRTool] Instrumenting %s.\n", it->c_str());
core/trace/dr/dynamoRIOTool.cpp:257:                    dr_fprintf(STDOUT, "[DRTool ERROR] Could not wrap %s.\n", it->c_str());
core/trace/dr/dynamoRIOTool.cpp:272:        /* in release build, carry on: we'll just miss per-iter refs */
core/trace/dr/dynamoRIOTool.cpp:311:                        it->c_str());
core/trace/dr/dynamoRIOTool.cpp:317:        if (bbl_instrumented_.find(it->second) == bbl_instrumented_.end()) {
core/trace/dr/dynamoRIOTool.cpp:380:    ts_trace_->add_bbl(bbl);
core/trace/dr/dynamoRIOTool.cpp:626:    // 1 - We are in the proper thread for DynamoRIO.
core/trace/dr/dynamoRIOTool.cpp:627:    // 2 - MPI tracing is disabled or we are in a trceable MPI phase.
core/trace/dr/dynamoRIOTool.cpp:628:    // 3 - Program has started.
core/trace/dr/dynamoRIOTool.cpp:629:    // 4 - ROI detection is disabled or we are inside the ROI.
core/trace/dr/dynamoRIOTool.cpp:630:    // 5 - We are inside a task.
core/trace/dr/dynamoRIOTool.cpp:631:    // 6 - We are inside a traceable Nanos++ phase.
core/trace/dr/dynamoRIOTool.cpp:640:    if (trace_mem && prev_bbl_id_ != -1) {
core/trace/dr/dynamoRIOTool.cpp:643:        ts_trace_->add_bbl_trace(task_stack_.top(), sim::trace::bbl_id_t(index));
core/trace/dr/dynamoRIOTool.cpp:660:            ts_trace_->add_mem_trace(task_stack_.top(), mem_t(1));
core/trace/dr/dynamoRIOTool.cpp:662:            pending_mem_--;
core/trace/dr/dynamoRIOTool.cpp:670:        prev_bbl_id_ = -1;
core/trace/dr/dynamoRIOTool.cpp:680:        ts_trace_->add_mem_trace(task_stack_.top(), mem_t(address));
core/trace/dr/dynamoRIOTool.cpp:681:        pending_mem_--;
core/trace/dr/dynamoRIOTool.cpp:704:    buf_ptr = BUF_PTR(data->seg_base);
core/trace/dr/dynamoRIOTool.cpp:706:    for (mem_ref = reinterpret_cast<mem_ref_t*>(data->buf_base); mem_ref < buf_ptr; mem_ref++) {
core/trace/dr/dynamoRIOTool.cpp:707:        tool_.memory_access(reinterpret_cast<size_t>(mem_ref->addr), mem_ref->size, mem_ref->type == REF_TYPE_WRITE);
core/trace/dr/dynamoRIOTool.cpp:709:    BUF_PTR(data->seg_base) = data->buf_base;
core/trace/dr/dynamoRIOTool.cpp:741:    unsigned new_wd_id = wd->getId();
core/trace/dr/dynamoRIOTool.cpp:742:    ts_trace_->add_wd_info(new_wd_id, {});
core/trace/dr/dynamoRIOTool.cpp:743:    app_pc funptr = (app_pc)((nanos::ext::SMPDD&)wd->getActiveDevice()).getWorkFct();
core/trace/dr/dynamoRIOTool.cpp:748:    ts_trace_->add_phase_event(ompss::event_t(master_alias_, ompss::CREATE_TASK_EVENT, new_wd_id));
core/trace/dr/dynamoRIOTool.cpp:765:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::WAIT_GROUP_EVENT));
core/trace/dr/dynamoRIOTool.cpp:780:    ts_trace_->add_wait_on_dependencies(current_wd_, dep_vector);
core/trace/dr/dynamoRIOTool.cpp:792:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::WAIT_ON_EVENT, num_deps_wd_[current_wd_]));
core/trace/dr/dynamoRIOTool.cpp:810:    ts_trace_->add_wd_info(wd->getId(), {dep_vector});
core/trace/dr/dynamoRIOTool.cpp:811:    app_pc funptr = (app_pc)((nanos::ext::SMPDD&)wd->getActiveDevice()).getWorkFct();
core/trace/dr/dynamoRIOTool.cpp:818:            dr_fprintf(STDOUT, "0x%x -> %s.\n", it->first, it->second.c_str());
core/trace/dr/dynamoRIOTool.cpp:828:                dr_symbol_export_iterator_t *it2 = dr_symbol_export_iterator_start(mod->handle);
core/trace/dr/dynamoRIOTool.cpp:831:                    std::cout << std::string(symbol->name) << " 0x" << std::hex << std::setfill('0')
core/trace/dr/dynamoRIOTool.cpp:832:                              << reinterpret_cast<uint64_t>(symbol->addr) << std::dec << std::endl;
core/trace/dr/dynamoRIOTool.cpp:833:                    if (symbol != NULL and symbol->addr == funptr) {
core/trace/dr/dynamoRIOTool.cpp:834:                        std::cout << "Function is named " << std::string(symbol->name) << std::endl;
core/trace/dr/dynamoRIOTool.cpp:843:        exit(-1);
core/trace/dr/dynamoRIOTool.cpp:850:            dr_fprintf(STDOUT, "%d -> %s.\n", it->second, it->first.c_str());
core/trace/dr/dynamoRIOTool.cpp:852:        exit(-1);
core/trace/dr/dynamoRIOTool.cpp:856:    task_name_map_.insert(std::pair<unsigned, int16_t>(wd->getId(), task_type));
core/trace/dr/dynamoRIOTool.cpp:859:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::CREATE_TASK_EVENT, wd->getId()));
core/trace/dr/dynamoRIOTool.cpp:887:    phase_stack_.swap(saved_phases->second);
core/trace/dr/dynamoRIOTool.cpp:902:    if (current_wd_ == wd->getId() and
core/trace/dr/dynamoRIOTool.cpp:908:    if (wd->getId() != current_wd_) {
core/trace/dr/dynamoRIOTool.cpp:909:        inline_parent_[wd->getId()] = current_wd_;
core/trace/dr/dynamoRIOTool.cpp:922:    set_wd(wd->getId());
core/trace/dr/dynamoRIOTool.cpp:926:    nanos::ext::SMPDD& dd = static_cast<nanos::ext::SMPDD&>(wd->getActiveDevice());
core/trace/dr/dynamoRIOTool.cpp:928:        ts_trace_->set_task_stack_ptr(current_wd_, task_name_map_.at(current_wd_), dd.getState());
core/trace/dr/dynamoRIOTool.cpp:930:        // Cross-platform name of stack pointer in machine contexnt dr_mcontext_t
core/trace/dr/dynamoRIOTool.cpp:931:        uint64_t stack_ptr = drwrap_get_mcontext_ex(context, DR_MC_CONTROL)->xsp;
core/trace/dr/dynamoRIOTool.cpp:932:        ts_trace_->set_task_stack_ptr(current_wd_, task_name_map_.at(current_wd_), reinterpret_cast<void*>(stack_ptr));
core/trace/dr/dynamoRIOTool.cpp:939:        phase_stack_.swap(saved_phases->second);
core/trace/dr/dynamoRIOTool.cpp:958:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::SET_LOCK, address));
core/trace/dr/dynamoRIOTool.cpp:965:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::UNSET_LOCK, address));
core/trace/dr/dynamoRIOTool.cpp:977:        dr_flush_region(0,-1);
core/trace/dr/dynamoRIOTool.cpp:990:        dr_flush_region(0,-1);
core/trace/dr/dynamoRIOTool.cpp:1002:        ts_trace_->add_task_name(0, task_names_[0]);
core/trace/dr/dynamoRIOTool.cpp:1011:            exit(-1);
core/trace/dr/dynamoRIOTool.cpp:1016:                ts_trace_->add_task_name(i, task_names_[i]);
core/trace/dr/dynamoRIOTool.cpp:1021:    if (enable_mpi_ && (rank_ != static_cast<unsigned>(-1))) {
core/trace/dr/dynamoRIOTool.cpp:1036:    ts_trace_->add_bbl(ts_bbl);
core/trace/dr/dynamoRIOTool.cpp:1059:            if (it->compare("main") == 0) {
core/trace/dr/dynamoRIOTool.cpp:1062:            dr_fprintf(STDOUT, "[DRTool] Task %d is %s.\n", c, it->c_str());
core/trace/dr/dynamoRIOTool.cpp:1133:            std::string function_name = "nanos_" + it->first;
core/trace/dr/dynamoRIOTool.cpp:1136:                                 std::placeholders::_2, std::placeholders::_3, it->second),
core/trace/dr/dynamoRIOTool.cpp:1138:                                 std::placeholders::_2, std::placeholders::_3, it->second));
core/trace/dr/dynamoRIOTool.cpp:1176:    uint64_t stack_ptr = drwrap_get_mcontext_ex(context, DR_MC_CONTROL)->xsp;
core/trace/dr/dynamoRIOTool.cpp:1177:    ts_trace_->set_task_stack_ptr(current_wd_, 0, reinterpret_cast<void*>(stack_ptr));
core/trace/dr/dynamoRIOTool.cpp:1178:    // ts_trace_->add_wd_info(current_wd_, {});
core/trace/dr/dynamoRIOTool.cpp:1281:    ts_trace_->flush_wd_contents();
core/trace/dr/dynamoRIOTool.cpp:1294:    ts_trace_->add_wd_info(current_wd_, {});
core/trace/dr/dynamoRIOTool.cpp:1295:    ts_trace_->set_task_stack_ptr(current_wd_, 0, reinterpret_cast<void*>(0));
core/trace/dr/dynamoRIOTool.cpp:1306:    std::string suffix = trace_name.substr(trace_name.size() - 9, 6);
core/trace/dr/dynamoRIOTool.cpp:1312:        exit(-1);
core/trace/dr/dynamoRIOTool.cpp:1339:            // dr_flush_region(0,-1);
core/trace/dr/dynamoRIOTool.cpp:1345:            // dr_flush_region(0,-1);
core/trace/dr/dynamoRIOTool.cpp:1372:    ts_trace_->add_phase_event(ompss::event_t(current_wd_, ompss::PHASE_EVENT, phase_stack_.top()));
core/trace/dr/dynamoRIOTool.cpp:1379:    task_stack_.push(ts_trace_->add_detailed_trace(current_wd_, name_id));
core/trace/dr/dynamoRIOTool.cpp:1391:    ts_trace_->add_bbl_trace(task_stack_.top(), bbl_id_t(0));
core/trace/dr/dynamoRIOTool.cpp:1392:    ts_trace_->set_task_instructions(task_stack_.top().wd_id, task_stack_.top().n_instr);
core/trace/dr/dynamoRIOTool.cpp:1397:        ts_trace_->add_mem_trace(task_stack_.top(), mem_t(1));
core/trace/dr/dynamoRIOTool.cpp:1399:        pending_mem_--;
core/trace/dr/dynamoRIOTool.cpp:1405:    ts_trace_->add_mem_trace(task_stack_.top(), mem_t(0));
core/trace/dr/dynamoRIOTool.cpp:1407:    ts_trace_->add_phase_data(task_stack_.top(), current_phase_data_);
core/trace/dr/dynamoRIOTool.cpp:1427:    dr_fprintf(STDOUT, "        -i $ompss_trace -o $ts_trace [-m]\n");
core/trace/dr/dynamoRIOTool.cpp:1435:    while ((res = ::getopt(argc, argv, "nmi:o:r:f:")) != -1) {
core/trace/dr/dynamoRIOTool.cpp:1475:    /* Keep seg_base in a per-thread data structure so we can get the TLS
core/trace/dr/dynamoRIOTool.cpp:1478:    data->seg_base = static_cast<byte*>(dr_get_dr_segment_base(tls_seg));
core/trace/dr/dynamoRIOTool.cpp:1479:    data->buf_base = static_cast<mem_ref_t*>(dr_raw_mem_alloc(MEM_BUF_SIZE, DR_MEMPROT_READ | DR_MEMPROT_WRITE, NULL));
core/trace/dr/dynamoRIOTool.cpp:1480:    DR_ASSERT(data->seg_base != NULL && data->buf_base != NULL);
core/trace/dr/dynamoRIOTool.cpp:1482:    BUF_PTR(data->seg_base) = data->buf_base;
core/trace/dr/dynamoRIOTool.cpp:1490:    dr_raw_mem_free(data->buf_base, MEM_BUF_SIZE);
core/trace/dr/dynamoRIOTool.cpp:1507:        exit(-1);
core/trace/dr/dynamoRIOTool.cpp:1544:    DR_ASSERT(sim::trace::dr::tls_idx != -1);
core/trace/dr/BasicDecoder-impl.h:49:     * Assume a ld-op-st instruction
core/trace/dr/BasicDecoder-impl.h:294:    // 1 - Map from DynamoRIO op_t to TaskSim's op_t.
core/trace/dr/BasicDecoder-impl.h:295:    // 2 - Input register list.
core/trace/dr/BasicDecoder-impl.h:296:    // 3 - Output register list.
core/trace/dr/types.h:125:#include "types-impl.h"
core/trace/MapEvent.h:86:#include "MapEvent-impl.h"
core/trace/Trace-impl.h:87:        if (i->second != NULL)  delete (i->second);
core/trace/Trace-impl.h:106:    if ((event_caches_.find(id)->second) != nullptr) {
core/trace/Trace-impl.h:107:        delete(event_caches_.find(id)->second);
core/trace/CompressedFileTrace-impl.h:201:    /* Open the meta-data trace file */
core/trace/CompressedFileTrace-impl.h:217:            Log::debug4() << "\t" << n->first_ << ":" << n->last_;
core/trace/CompressedFileTrace-impl.h:241:        file_t &file = out->second;
core/trace/CompressedFileTrace-impl.h:242:        file.buffer_->end_stream();
core/trace/CompressedFileTrace-impl.h:244:        file.file_->flush();
core/trace/CompressedFileTrace-impl.h:247:    Log::debug3() << "Updating trace meta-data";
core/trace/CompressedFileTrace-impl.h:251:        stream_t &stream = it->second;
core/trace/CompressedFileTrace-impl.h:255:        if (stream.output_->second.active_id_ != static_cast<int>(stream.id_)) {
core/trace/CompressedFileTrace-impl.h:260:        stream.offset_vector_.back().last_ = stream.output_->second.file_->tellp();
core/trace/CompressedFileTrace-impl.h:272:        /* Write the meta-data information in the .streamfile */
core/trace/CompressedFileTrace-impl.h:307:        // This is here instead on file opening to re-initialize all stream buffers not only one per file.
core/trace/CompressedFileTrace-impl.h:308:        stream_vector_[stream_id].buffer_.reset(new utils::CompressedStream<T>(i->second.file_));
core/trace/CompressedFileTrace-impl.h:317:            stream_vector_[stream_id].file_pos_ = stream_vector_[stream_id].stream_pos_->first_;
core/trace/CompressedFileTrace-impl.h:324:    return stream_vector_[stream_id].input_->second;
core/trace/CompressedFileTrace-impl.h:343:            if (i->second.file_->is_open() == false) {
core/trace/CompressedFileTrace-impl.h:353:    return stream_vector_[stream_id].output_->second;
core/trace/CompressedFileTrace-impl.h:413:        if (stream.output_->second.active_id_ != static_cast<int>(stream.id_)) {
core/trace/CompressedFileTrace-impl.h:417:            stream.offset_vector_.back().last_ = stream.output_->second.file_->tellp();
core/trace/CompressedFileTrace-impl.h:427:    /* Write the meta-data information in the .streamfile */
core/trace/CompressedFileTrace-impl.h:433:        file.buffer_->end_stream();
core/trace/CompressedFileTrace-impl.h:434:        file.active_id_ = -1;
core/trace/CompressedFileTrace-impl.h:448:            file.buffer_->end_stream();
core/trace/CompressedFileTrace-impl.h:451:                    file.file_->tellp();
core/trace/CompressedFileTrace-impl.h:457:        stream_vector_[stream_id].offset_vector_.push_back(pos_t(file.file_->tellp()));
core/trace/CompressedFileTrace-impl.h:510:                   << " at offset " << static_cast<uint64_t>(file.file_->tellg());
core/trace/CompressedFileTrace-impl.h:511:            stream_vector_[file.active_id_].file_pos_ = file.file_->tellg();
core/trace/CompressedFileTrace-impl.h:515:        file.file_->seekg(stream.file_pos_);
core/trace/CompressedFileTrace-impl.h:519:            stream.buffer_->add_data(stream.stream_pos_->last_ - stream.file_pos_);
core/trace/CompressedFileTrace-impl.h:521:            stream.buffer_->clear();
core/trace/CompressedFileTrace-impl.h:529:    if (stream.stream_pos_ == stream.offset_vector_.end() && stream.buffer_->get_available() == 0) {
core/trace/CompressedFileTrace-impl.h:534:    Log::debug3() << "Reading at offset " << static_cast<uint64_t>(file.file_->tellg())
core/trace/CompressedFileTrace-impl.h:535:                  << " in chunk [" << stream.stream_pos_->first_ << ":" << stream.stream_pos_->last_ << "]";
core/trace/CompressedFileTrace-impl.h:536:    /* TODO: this is a quick hack -- We need to avoid reusing an event,
core/trace/CompressedFileTrace-impl.h:550:    stream.buffer_->peek();
core/trace/CompressedFileTrace-impl.h:552:            (file.file_->tellg() >= static_cast<std::ios::pos_type>(stream.stream_pos_->last_)) and
core/trace/CompressedFileTrace-impl.h:553:            (!stream.buffer_->good()))  {
core/trace/CompressedFileTrace-impl.h:559:                // stream.buffer_->end_stream();
core/trace/CompressedFileTrace-impl.h:567:        file.file_->seekg(stream.stream_pos_->first_);
core/trace/CompressedFileTrace-impl.h:570:        stream.buffer_->add_data(stream.stream_pos_->last_ - stream.stream_pos_->first_);
core/trace/CompressedFileTrace-impl.h:573:        stream.buffer_->clear();
core/trace/CompressedFileTrace-impl.h:598:        file.file_->seekg(stream_vector_[stream_id].file_pos_);
core/trace/CompressedFileTrace-impl.h:620:        std::ios::pos_type delta = pos->last_ - pos->first_;
core/trace/CompressedFileTrace-impl.h:623:            stream_vector_[stream_id].file_pos_ = pos->first_ + offset;
core/trace/CompressedFileTrace-impl.h:625:                file.file_->seekg(stream_vector_[file.active_id_].file_pos_);
core/trace/CompressedFileTrace-impl.h:631:        offset -= delta;
core/trace/NameEvent-impl.h:49:    buffer_ = reinterpret_cast<buffer_t*>(malloc(sizeof(buffer_t) + ne.buffer_->name_len_));
core/trace/NameEvent-impl.h:50:    buffer_->id_ = ne.buffer_->id_;
core/trace/NameEvent-impl.h:51:    buffer_->name_len_ = ne.buffer_->name_len_;
core/trace/NameEvent-impl.h:52:    memcpy(&buffer_->first_byte_, &ne.buffer_->first_byte_, buffer_->name_len_ + 1);
core/trace/NameEvent-impl.h:53:    name_ = std::string(&buffer_->first_byte_);
core/trace/NameEvent-impl.h:70:    buffer_->id_ = id;
core/trace/NameEvent-impl.h:71:    buffer_->name_len_ = strlen(name);
core/trace/NameEvent-impl.h:72:    buffer_->first_byte_ = 0;
core/trace/NameEvent-impl.h:73:    memcpy(&buffer_->first_byte_, name, buffer_->name_len_);
core/trace/NameEvent-impl.h:74:    (&buffer_->first_byte_)[buffer_->name_len_] = 0;
core/trace/NameEvent-impl.h:91:    if (this->buffer_ != NULL) {
core/trace/NameEvent-impl.h:92:        free(this->buffer_);
core/trace/NameEvent-impl.h:95:        buffer_ = reinterpret_cast<buffer_t*>(malloc(sizeof(buffer_t) + e.buffer_->name_len_));
core/trace/NameEvent-impl.h:96:        memcpy(buffer_, e.buffer_, sizeof(buffer_t) + e.buffer_->name_len_);
core/trace/NameEvent-impl.h:108:    return buffer_->id_;
core/trace/NameEvent-impl.h:116:    return strlen(&buffer_->first_byte_);
core/trace/NameEvent-impl.h:124:    return &buffer_->first_byte_;
core/trace/NameEvent-impl.h:134:    stream.write(reinterpret_cast<char *>(buffer_), sizeof(buffer_t) + buffer_->name_len_);
core/trace/NameEvent-impl.h:145:    } else if (buffer_->name_len_ < header.name_len_) {
core/trace/NameEvent-impl.h:149:    stream.read(&buffer_->first_byte_ + 1, buffer_->name_len_);
core/trace/NameEvent-impl.h:169:    tmp_buffer[kTmpBufferSize - 1] = 0; /* Ensure EOS */
core/trace/NameEvent-impl.h:170:    is.getline(tmp_buffer, kTmpBufferSize - 1, ':');
core/trace/NameEvent-impl.h:172:    is.getline(tmp_buffer, kTmpBufferSize - 1);
core/trace/NameEvent-impl.h:174:    header.name_len_ = strnlen(tmp_buffer, kTmpBufferSize - 1);
core/trace/NameEvent-impl.h:177:    else if (event.buffer_->name_len_ < header.name_len_) event.buffer_ = (NameEvent::buffer_t *) realloc(event.buffer_,
core/trace/NameEvent-impl.h:179:    event.buffer_->id_ = header.id_;
core/trace/NameEvent-impl.h:180:    event.buffer_->name_len_ = header.name_len_;
core/trace/NameEvent-impl.h:181:    memcpy(&event.buffer_->first_byte_, tmp_buffer, event.buffer_->name_len_ + 1);
core/trace/BinaryEventStream.h:74:#include "BinaryEventStream-impl.h"
core/trace/ptlsim-decode.h:227:        {OP_vbt, op_t::VMASK},  // bit test vector (e.g. pack bit 7 of 8 bytes into 8-bit output, for pmovmskb)
core/trace/NameEvent.h:79:#include "NameEvent-impl.h"
core/trace/TextEventStream.h:56:#include "TextEventStream-impl.h"
core/trace/VectorEvent.h:96:    /** retrieves an event using its ID (read-only) */
core/trace/VectorEvent.h:127:#include "VectorEvent-impl.h"
core/trace/FileTrace.h:58:        explicit file_t(T *file = NULL, int id = -1);
core/trace/FileTrace.h:94:            os << ":" << i->first_ << ":" << i->last_;
core/trace/FileTrace.h:119:            is >> i->first_;
core/trace/FileTrace.h:121:            is >> i->last_;
core/trace/FileTrace.h:184:#include "FileTrace-impl.h"
core/trace/Event.h:91:#include "Event-impl.h"
core/trace/FileTrace-impl.h:141:    /* Open the meta-data trace file */
core/trace/FileTrace-impl.h:158:            Log::debug4() << "\t" << n->first_ << ":" << n->last_;
core/trace/FileTrace-impl.h:174:        delete i->second.file_;
core/trace/FileTrace-impl.h:177:        delete i->second.file_;
core/trace/FileTrace-impl.h:186:    Log::debug3() << "Updating trace meta-data";
core/trace/FileTrace-impl.h:190:        if (i->needs_update_ == false) {
core/trace/FileTrace-impl.h:193:        if (i->output_->second.active_id_ != static_cast<int>(i->id_)) {
core/trace/FileTrace-impl.h:194:            assert(i->offset_vector_.back().last_ != 0);
core/trace/FileTrace-impl.h:197:        Log::debug3() << "Finishing chunk in stream #" << i->id_;
core/trace/FileTrace-impl.h:198:        i->offset_vector_.back().last_ = i->output_->second.file_->tellp();
core/trace/FileTrace-impl.h:203:        out->second.file_->flush();
core/trace/FileTrace-impl.h:212:        /* Write the meta-data information in the .streamfile */
core/trace/FileTrace-impl.h:213:        if (i->offset_vector_.empty()) {
core/trace/FileTrace-impl.h:253:            stream_vector_[stream_id].file_pos_ = stream_vector_[stream_id].stream_pos_->first_;
core/trace/FileTrace-impl.h:260:    return stream_vector_[stream_id].input_->second;
core/trace/FileTrace-impl.h:281:            if (i->second.file_->is_open() == false) {
core/trace/FileTrace-impl.h:289:    return stream_vector_[stream_id].output_->second;
core/trace/FileTrace-impl.h:350:                    file.file_->tellp();
core/trace/FileTrace-impl.h:356:        stream_vector_[stream_id].offset_vector_.push_back(pos_t(file.file_->tellp()));
core/trace/FileTrace-impl.h:406:                          << " at offset " << static_cast<uint64_t>(file.file_->tellg());
core/trace/FileTrace-impl.h:407:            stream_vector_[file.active_id_].file_pos_ = file.file_->tellg();
core/trace/FileTrace-impl.h:411:        file.file_->seekg(stream.file_pos_);
core/trace/FileTrace-impl.h:418:    if (file.file_->tellg() >= static_cast<std::ios::pos_type>(stream.stream_pos_->last_)) {
core/trace/FileTrace-impl.h:422:        file.file_->seekg(stream.stream_pos_->first_);
core/trace/FileTrace-impl.h:424:    Log::debug3() << "Reading at offset " << static_cast<uint64_t>(file.file_->tellg())
core/trace/FileTrace-impl.h:425:                  << " in chunk [" << stream.stream_pos_->first_ << " : " << stream.stream_pos_->last_ << "]";
core/trace/FileTrace-impl.h:427:    /* TODO: this is a quick hack -- We need to avoid reusing an event,
core/trace/FileTrace-impl.h:459:        file.file_->seekg(stream_vector_[stream_id].file_pos_);
core/trace/FileTrace-impl.h:478:        std::ios::pos_type delta = pos->last_ - pos->first_;
core/trace/FileTrace-impl.h:481:            stream_vector_[stream_id].file_pos_ = pos->first_ + offset;
core/trace/FileTrace-impl.h:483:                file.file_->seekg(stream_vector_[file.active_id_].file_pos_);
core/trace/FileTrace-impl.h:489:        offset -= delta;
core/trace/TraceReader.h:41: * As the return reference is constant, it is read-only
core/trace/TraceReader.h:52:        assert(this->event_caches_.find(id) != this->event_caches_.end());
core/trace/TraceReader.h:53:        return *(static_cast<const typename Cache::template Type<StreamType, Store> *>(this->event_caches_.at(id)));
core/trace/TraceReader.h:60:#include "TraceReader-impl.h"
core/trace/Event-impl.h:59:    return store_.append(this->id_, event);
core/trace/Event-impl.h:68:    return store_.get_next(this->id_, event);
core/trace/Event-impl.h:76:    return store_.reset(this->id_);
core/trace/Event-impl.h:83:    return store_.template seek<EventType>(this->id_, nelem);
core/trace/TraceWriter.h:41: * As the return reference is non-constant, it is read/write
core/trace/TraceWriter.h:52:        assert(this->event_caches_.find(id) != this->event_caches_.end());
core/trace/TraceWriter.h:53:        return *(static_cast<typename Cache::template Type<StreamType, Store> *>(this->event_caches_[id]));
core/trace/TraceWriter.h:60:#include "TraceWriter-impl.h"
core/trace/intel/Trace-impl.h:118:        trace::Trace<StreamType, Store>(this->store_),
core/trace/intel/Trace-impl.h:121:    this->template register_event_stream<bbl_dict_stream_t>(Bbl_Dict_Stream_, "dict");
core/trace/intel/Trace-impl.h:122:    this->template register_event_stream<Event<bbl_id_t>>(Bbl_Trace_Stream_, "bbl");
core/trace/intel/Trace-impl.h:123:    this->template register_event_stream<Event<mem_t>>(Mem_Trace_Stream_, "mem");
core/trace/intel/Trace-impl.h:129:    this->flush_event_streams();
core/trace/intel/Trace.h:120:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/intel/Trace.h:127: * Subclass of Trace that uses an input file stream as storage (read-only)
core/trace/intel/Trace.h:133:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/intel/Trace.h:144:#include "Trace-impl.h"
core/trace/mem/Trace-impl.h:84:        pending_items_.push(it->second);
core/trace/mem/Trace-impl.h:152:        sim::trace::Trace<StreamType, Store>(this->store_),
core/trace/mem/Trace-impl.h:155:    this->template register_event_stream<Event<mitem_t>>(Mem_Trace_Stream_, "mem");
core/trace/mem/Trace-impl.h:162:    this->flush_event_streams();
core/trace/mem/Trace.h:124:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/mem/Trace.h:131: * Subclass of Trace that uses an input file stream as storage (read-only)
core/trace/mem/Trace.h:137:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/mem/Trace.h:148:#include "Trace-impl.h"
core/trace/mem/FilteredTrace.h:78:#include "FilteredTrace-impl.h"
core/trace/mem/CacheFilter-impl.h:48:    tag_mask_(~(cache_line_size_ - 1)),
core/trace/mem/CacheFilter-impl.h:60:    if (cache_->access(tag) == NULL) {//miss
core/trace/mem/CacheFilter-impl.h:61:        if (not cache_->insert(tag, CacheLineBool(true))){
core/trace/mem/CacheFilter-impl.h:62:            cache_->evict(tag);
core/trace/mem/CacheFilter-impl.h:63:            bool ret = cache_->insert(tag, CacheLineBool(true));
core/trace/mem/CacheFilter.h:72:#include "CacheFilter-impl.h"
core/trace/mem/FilteredTrace-impl.h:43:        filter_(64, 64, 128),  // 64, 64, 128 -> 8KB direct 128B line
core/trace/mem/types-impl.h:54:            for (; nloads > 0; --nloads) {
core/trace/mem/types-impl.h:67:            for (; nstores > 0; --nstores) {
core/trace/mem/types-impl.h:147:        for (; nloads > 0; --nloads) {
core/trace/mem/types-impl.h:164:        for (; nstores > 0; --nstores) {
core/trace/mem/types.h:70:#include "types-impl.h"
core/trace/CompressedFileTrace.h:60:        explicit file_t(T *file = NULL, int = -1);
core/trace/CompressedFileTrace.h:105:            os << ":" << i->first_ << ":" << i->last_;
core/trace/CompressedFileTrace.h:128:            is >> i->first_;
core/trace/CompressedFileTrace.h:130:            is >> i->last_;
core/trace/CompressedFileTrace.h:194:#include "CompressedFileTrace-impl.h"
core/trace/Trace.h:66:#include "Trace-impl.h"
core/trace/ompss/Trace-impl.h:47:    this->template register_event_stream<Event<ompss::event_t> >(Event_Stream_);
core/trace/ompss/Trace-impl.h:48:    this->template register_event_stream<name_stream_t>(Name_Stream_);
core/trace/ompss/Trace-impl.h:50:        this->template register_event_stream<wd_info_stream_t>(Wd_Info_Stream_, "wd_info");
core/trace/ompss/Trace-impl.h:52:    this->template register_event_stream<dep_stream_t>(Dep_Stream_);
core/trace/ompss/Trace-impl.h:59:    this->flush_event_streams();
core/trace/ompss/Trace.h:120:#include "Trace-impl.h"
core/trace/ompss/types-impl.h:43:    // with for example: grep -rB2 'InstrumentStateAndBurst \+[a-zA-Z]\+ *( *"api" *,' <nanox>/src/
core/trace/ompss/types-impl.h:44:    // API key <-> phase number shamelessly imported from InstrumentationDictionary in
core/trace/ompss/types-impl.h:145:    // OpenMP functions (added on-demand)
core/trace/ompss/types-impl.h:279:        i->write(os);
core/trace/ompss/types-impl.h:293:        i->read(is);
core/trace/ompss/types.h:32:#   include <nanos-int.h>
core/trace/ompss/types.h:34:#   include <nanox/nanos-int.h>
core/trace/ompss/types.h:132:#include "types-impl.h"
core/trace/uop/Trace.h:38: *  to micro-operations
core/trace/MemParser-impl.h:109:            pending_removed_[subtrace.wd_id]--;
core/trace/MemParser-impl.h:167:    // If we do not have a basic block per WD, we pre-assign the next basic block.
core/trace/MemParser-impl.h:181:            // So we can eliminate up to vector_length/max_access - 1
core/trace/MemParser-impl.h:184:            for (unsigned i = 0; (i < vector_length_ / max_accs_[current_bbl] - 1) and (next_bbl_id == current_bbl); i++) {
core/trace/MemParser-impl.h:193:                // And then remove 2nd-3rd etc memory addresses.
core/trace/MemParser-impl.h:347:                new_ins.rbegin()->ld_size_ *= multiplication_factor;
core/trace/MemParser-impl.h:351:                new_ins.rbegin()->st_size_ *= multiplication_factor;
core/trace/MemParser-impl.h:377:        // We should duplicated all non-memory operations.
core/trace/VectorEvent-impl.h:47:    while (store_.get_next(this->id_, event)) {
core/trace/VectorEvent-impl.h:52:        Log::debug3() << "Stream #" << this->id_ << " has " << vector_.size() << " events";
core/trace/VectorEvent-impl.h:63:    Log::debug3() << "Flushing vector stream " << this->id_;
core/trace/VectorEvent-impl.h:66:        store_.append(this->id_, *i);
core/trace/types-impl.h:117:        wd_id_(-1)
core/trace/MapEvent-impl.h:39:    typename VectorEventCache<EventType, StreamType, Store, InitSize>::vector_t::iterator i = this->vector_.begin();
core/trace/MapEvent-impl.h:40:    for (unsigned n = 0; i != this->vector_.end(); ++i, n++) {
core/trace/MapEvent-impl.h:61:    map_.insert(typename map_t::value_type(e.*Container, this->vector_.size() - 1));
core/trace/MapEvent-impl.h:82:    return this->vector_[i->second];
core/trace/MapEvent-impl.h:93:    return this->vector_[i->second];
core/trace/MapEvent-impl.h:104:    return i->second;
core/trace/MapEvent-impl.h:112:    for (auto i = this->vector_.begin(); i != this->vector_.end(); ++i) {
core/trace/MapEvent-impl.h:113:        this->store_.append(this->id_, *i);
core/trace/MapEvent-impl.h:115:    this->vector_.clear();
core/trace/MapEvent-impl.h:123:        std::cout << it.first << " " << this->vector_.at(it.second) << std::endl;
core/trace/MapEvent-impl.h:130:    return this->vector_.size();
core/trace/rle/Trace-impl.h:81:        // 1 - bbl_id.id_ == 0, so we have to flush the previous, add value bbl 0 and erase the buffer.
core/trace/rle/Trace-impl.h:88:        // 2 - bbl_id.id_ != 0, and is a different value,
core/trace/rle/Trace-impl.h:95:        // 3 - The same value that is in the buffer, so we augment the repetition counter.
core/trace/rle/Trace-impl.h:149:        trace::Trace<StreamType, Store>(this->store_),
core/trace/rle/Trace-impl.h:152:    this->template register_event_stream<bbl_dict_stream_t>(Bbl_Dict_Stream_, "dict");
core/trace/rle/Trace-impl.h:153:    this->template register_event_stream<Event<bbl_id_t>>(Bbl_Trace_Stream_, "bbl");
core/trace/rle/Trace-impl.h:154:    this->template register_event_stream<Event<mem_t>>(Mem_Trace_Stream_, "mem");
core/trace/rle/Trace-impl.h:160:    this->flush_event_streams();
core/trace/rle/Trace.h:135:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/rle/Trace.h:142: * Subclass of Trace that uses an input file stream as storage (read-only)
core/trace/rle/Trace.h:148:        trace::Trace<StreamType, trace::FileTrace<StreamType, Storage> >(this->store_),
core/trace/rle/Trace.h:159:#include "Trace-impl.h"
core/trace/rle/types-impl.h:153:        limit_(static_cast<offset>(-1)),
core/trace/rle/types-impl.h:166:            // badly enconded. Also, we can save on needing a 0-valued
core/trace/rle/types-impl.h:176:            history_[channeled.mask_.channel_] = history_[channeled.mask_.channel_] - channeled.value_;
core/trace/rle/types-impl.h:199:        if (static_cast<size_t>(val - history_[i]) <= limit_) {
core/trace/rle/types-impl.h:200:            channeled_value<value, offset> ret(channel_mask_t(0, 0, i), val - history_[i]);
core/trace/rle/types-impl.h:203:        } else if (static_cast<size_t>(history_[i] - val) <= limit_) {
core/trace/rle/types-impl.h:204:            channeled_value<value, offset> ret(channel_mask_t(0, 1, i), history_[i] - val);
core/trace/rle/types-impl.h:250:    repeats_--;
core/trace/rle/types.h:105:    counter repeat_limit = static_cast<counter>(-1);
core/trace/rle/types.h:132:#include "types-impl.h"
core/trace/types.h:130:#include "types-impl.h"
core/trace/MemParser.h:106:#include "MemParser-impl.h"
core/trace/common/bbl.h:72:#include "bbl-impl.h"
core/trace/common/bbl-impl.h:52:    return this->id_ == id;
core/trace/common/bbl-impl.h:58:    return this->id_ == bbl_id.id_;
core/trace/common/minst-impl.h:104:    while (pc != 0 && size--) {
core/trace/common/minst-impl.h:146:                // SVE 32-bit gather load (scalar plus 32-bit unscaled offsets)
core/trace/common/minst-impl.h:151:                // SVE 32-bit gather prefetch (vector plus immediate)
core/trace/common/minst-impl.h:155:                // SVE 32-bit gather load (vector plus immediate)
core/trace/common/minst-impl.h:164:                // SVE 32-bit gather prefetch (scalar plus 32-bit scaled offsets)
core/trace/common/minst-impl.h:168:                // SVE 32-bit gather load halfwords (scalar plus 32-bit scaled offsets)
core/trace/common/minst-impl.h:172:                //  SVE 32-bit gather load words (scalar plus 32-bit scaled offsets)
core/trace/common/minst-impl.h:209:                    // SVE contiguous first-fault load (scalar plus scalar)
core/trace/common/minst-impl.h:213:                    // SVE contiguous non-fault load (scalar plus immediate)
core/trace/common/minst-impl.h:217:                    // SVE contiguous non-temporal load (scalar plus scalar)
core/trace/common/minst-impl.h:221:                    // SVE contiguous non-temporal load (scalar plus immediate)
core/trace/common/minst-impl.h:231:                    // SVE 64-bit gather load (scalar plus unpacked 32-bit unscaled offsets)
core/trace/common/minst-impl.h:232:                    // SVE 64-bit gather load (scalar plus 32-bit unpacked scaled offsets)
core/trace/common/minst-impl.h:233:                    // SVE 64-bit gather prefetch (scalar plus unpacked 32-bit scaled offsets)
core/trace/common/minst-impl.h:237:                        // SVE 64-bit gather prefetch (vector plus immediate)
core/trace/common/minst-impl.h:243:                    // SVE 64-bit gather load (vector plus immediate)
core/trace/common/minst-impl.h:244:                    // SVE 64-bit gather load (scalar plus 64-bit unscaled offsets)
core/trace/common/minst-impl.h:245:                    // SVE 64-bit gather load (scalar plus 64-bit scaled offsets)
core/trace/common/minst-impl.h:267:                // SVE contiguous non-temporal store (scalar plus scalar) already included
core/trace/common/minst-impl.h:268:                // SVE contiguous non-temporal store (scalar plus immediate) already included.
core/trace/common/minst-impl.h:270:                    // SVE 64-bit scatter store (scalar plus unpacked 32-bit unscaled offsets)
core/trace/common/minst-impl.h:271:                    // SVE 64-bit scatter store (scalar plus unpacked 32-bit scaled offsets)
core/trace/common/minst-impl.h:272:                    // SVE 32-bit scatter store (scalar plus 32-bit unscaled offsets)
core/trace/common/minst-impl.h:273:                    // SVE 32-bit scatter store (scalar plus 32-bit scaled offsets)
core/trace/common/minst-impl.h:277:                    // SVE 64-bit scatter store (scalar plus 64-bit unscaled offsets)
core/trace/common/minst-impl.h:278:                    // SVE 64-bit scatter store (scalar plus 64-bit scaled offsets)
core/trace/common/minst-impl.h:279:                    // SVE 64-bit scatter store (vector plus immediate)
core/trace/common/minst-impl.h:280:                    // SVE 32-bit scatter store (vector plus immediate)
core/trace/common/minst-impl.h:338:                        // SVE Integer Binary Arithmetic - Predicated
core/trace/common/minst-impl.h:361:                        // SVE Bitwise Shift - Predicated
core/trace/common/minst-impl.h:364:                        // SVE Integer Unary Arithmetic - Predicated
core/trace/common/minst-impl.h:367:                        // SVE Integer Multiply-Add - Predicated
core/trace/common/minst-impl.h:373:                        // SVE Integer Arithmetic - Unpredicated
core/trace/common/minst-impl.h:376:                        // SVE Bitwise Logical - Unpredicated
core/trace/common/minst-impl.h:382:                        // SVE Bitwise Shift - Unpredicated
core/trace/common/minst-impl.h:385:                        // SVE Address Generation & SVE Integer Misc - Unpredicated
core/trace/common/minst-impl.h:403:                    // SVE Integer Wide Immediate - Predicated
core/trace/common/minst-impl.h:410:                        // SVE Permute Vector - Extract
core/trace/common/minst-impl.h:413:                        // SVE Permute Vector - Unpredicated
core/trace/common/minst-impl.h:419:                        // SVE Permute Vector - Interleaving
core/trace/common/minst-impl.h:423:                        // SVE Permute Vector - Predicated
core/trace/common/minst-impl.h:439:                // SVE Integer Compare - Vectors
core/trace/common/minst-impl.h:442:                // SVE Integer Compare - Unsigned Immediate
core/trace/common/minst-impl.h:465:                    // SVE Integer Compare - Signed Immediate
core/trace/common/minst-impl.h:479:                    // SVE Integer Compare - Scalars
core/trace/common/minst-impl.h:482:                    // SVE Integer Wide Immediate - Unpredicated
core/trace/common/minst-impl.h:491:                // SVE Multiply - Indexed
core/trace/common/minst-impl.h:502:                // SVE Floating Point Complex Multiply-Add
core/trace/common/minst-impl.h:505:                // SVE Floating Point Multiply-Add - Indexed
core/trace/common/minst-impl.h:508:                // SVE Floating Point Complex Multiply-Add - Indexed
core/trace/common/minst-impl.h:511:                // SVE Floating Point Multiply - Indexed
core/trace/common/minst-impl.h:522:                // SVE Floating Point Unary Operations - Unpredicated
core/trace/common/minst-impl.h:525:                // SVE Floating Point Compare - with Zero
core/trace/common/minst-impl.h:531:                // SVE Floating Point Arithmetic - Unpredicated
core/trace/common/minst-impl.h:546:                // SVE Floating Point Arithmetic - Predicated
core/trace/common/minst-impl.h:549:                    // SVE floating-point arithmetic (predicated)
core/trace/common/minst-impl.h:559:                    // SVE floating-point trig multiply-add coefficienti
core/trace/common/minst-impl.h:562:                    // SVE floating-point arithmetic with immediate (predicated)
core/trace/common/minst-impl.h:566:                // SVE Floating Point Unary Operations - Predicated
core/trace/common/minst-impl.h:569:                // SVE Floating Point Compare - Vectors
core/trace/common/minst-impl.h:572:                // SVE Floating Point Multiply-Add
core/trace/common/mitem.h:45:    /** item operation. NOMEM represents just a set of non-memory instructions */
core/trace/common/mitem.h:70:#include "mitem-impl.h"
core/trace/common/mem.h:41:  * The NOLINT Comment helps the coding style script ignore the non-explicit constructor
core/trace/common/mem.h:59:#include "mem-impl.h"
core/trace/common/mitem-impl.h:79:    os.write(reinterpret_cast<const char *>(&data_ + 1), sizeof(*this) - sizeof(addr_) - sizeof(data_));
core/trace/common/mitem-impl.h:86:    is.read(reinterpret_cast<char *>(&data_ + 1), sizeof(*this) - sizeof(addr_) - sizeof(data_));
core/trace/common/minst.h:46:               // Integer operations 2-15
core/trace/common/minst.h:50:               // Memory operations 16-31
core/trace/common/minst.h:55:               // Branch-jumps 32-47
core/trace/common/minst.h:59:               // Memory locks 48-63
core/trace/common/minst.h:64:               // Floating point 64-79
core/trace/common/minst.h:69:               // Vector operations 80-95
core/trace/common/minst.h:74:               // Cache management operations ??? 96-111
core/trace/common/minst.h:165:#include "minst-impl.h"
core/trace/ts/Trace-impl.h:47:        sim::trace::Trace<StreamType, Store>(this->store_),
core/trace/ts/Trace-impl.h:51:    this->template register_event_stream<name_stream_t>(Name_Stream_);
core/trace/ts/Trace-impl.h:52:    this->template register_event_stream<subtrace_stream_t>(Subtrace_Stream_);
core/trace/ts/Trace-impl.h:53:    this->template register_event_stream<wd_info_stream_t>(Wd_Info_Stream_);
core/trace/ts/Trace-impl.h:54:    this->template register_event_stream<task_stream_t>(Task_Stream_);
core/trace/ts/Trace-impl.h:55:    this->template register_event_stream<bbl_dict_stream_t>(Bbl_Dict_Stream_, "dict");
core/trace/ts/Trace-impl.h:56:    this->template register_event_stream<phase_stream_t>(Phase_Stream_, "phases");
core/trace/ts/Trace-impl.h:62:        this->template register_event_stream<user_code_data_stream_t>(User_Code_Data_Stream_, "phase_data");
core/trace/ts/Trace-impl.h:65:    this->template register_event_stream<wd_replay_stream_t>(Wd_Replay_Stream_, "wd_replay");
core/trace/ts/Trace-impl.h:66:    this->template register_event_stream<void_stream_t>(Reserved_1_, "void");
core/trace/ts/Trace-impl.h:67:    this->template register_event_stream<void_stream_t>(Reserved_2_, "void");
core/trace/ts/Trace-impl.h:68:    this->template register_event_stream<void_stream_t>(Reserved_3_, "void");
core/trace/ts/Trace-impl.h:69:    this->template register_event_stream<void_stream_t>(Reserved_4_, "void");
core/trace/ts/Trace-impl.h:70:    this->template register_event_stream<void_stream_t>(Reserved_5_, "void");
core/trace/ts/Trace-impl.h:84:    this->flush_event_streams();
core/trace/ts/Trace-impl.h:97:        // std::cout << "[DEBUG] " << i << " - WD " << sub.wd_id << " subtrace " << sub << std::endl;
core/trace/ts/Trace-impl.h:100:             this->template register_event_stream<bbl_dict_stream_t>(sub.bbl_dict_id, "dict");
core/trace/ts/Trace-impl.h:102:            this->template register_event_stream<Event<bbl_id_t>>(sub.bbl_trace_id, "bbl");
core/trace/ts/Trace-impl.h:104:            this->template register_event_stream<Event<mem_t>>(sub.mem_trace_id, "mem");
core/trace/ts/Trace-impl.h:106:            this->template register_event_stream<Event<ts::wait_info_t>>(sub.wait_trace_id, "deps");
core/trace/ts/Trace-impl.h:177:        unsigned wait_trace_id = this->get_number_of_streams();
core/trace/ts/Trace-impl.h:180:        this->template register_event_stream<Event<ts::wait_info_t>>(wait_trace_id, "deps");
core/trace/ts/Trace-impl.h:194:        unsigned wait_trace_id = this->get_number_of_streams();
core/trace/ts/Trace-impl.h:197:        this->template register_event_stream<Event<ts::wait_info_t>>(wait_trace_id, "deps");
core/trace/ts/Trace-impl.h:213:    unsigned stream_id = this->get_number_of_streams();
core/trace/ts/Trace-impl.h:217:    this->template register_event_stream<Event<ts::event_t>>(stream_id);
core/trace/ts/Trace-impl.h:290:    if (this->event_caches_.size() <= stream or this->event_caches_[stream] == NULL) {
core/trace/ts/Trace-impl.h:291:        this->template register_event_stream< Event<ts::event_t> >(stream);
core/trace/ts/Trace-impl.h:308:    if (this->event_caches_.size() <= stream or this->event_caches_[stream] == NULL) {
core/trace/ts/Trace-impl.h:309:        this->template register_event_stream< Event<ts::wait_info_t> >(stream);
core/trace/ts/Trace-impl.h:404:    subtrace.mem_trace_id = -1;
core/trace/ts/Trace-impl.h:405:    subtrace.bbl_trace_id = -1;
core/trace/ts/Trace-impl.h:406:    subtrace.wait_trace_id = -1; /* We assume that there is no wait stream */
core/trace/ts/Trace-impl.h:462:        return -1;
core/trace/ts/Trace-impl.h:486:    if (s.bbl_trace_id == -1) {
core/trace/ts/Trace-impl.h:487:        s.bbl_trace_id = this->get_number_of_streams();
core/trace/ts/Trace-impl.h:488:        this->template register_event_stream<Event<bbl_id_t>>(s.bbl_trace_id, "bbl");
core/trace/ts/Trace-impl.h:499:    if (s.mem_trace_id == -1) {
core/trace/ts/Trace-impl.h:500:        s.mem_trace_id = this->get_number_of_streams();
core/trace/ts/Trace-impl.h:501:        this->template register_event_stream<Event<mem_t>>(s.mem_trace_id, "mem");
core/trace/ts/Trace-impl.h:613:            this->flush_event_stream(stream_id);
core/trace/ts/Trace-impl.h:616:        if (subt.mem_trace_id != -1) {
core/trace/ts/Trace-impl.h:617:            this->flush_event_stream(subt.mem_trace_id);
core/trace/ts/Trace-impl.h:620:        if (subt.bbl_trace_id != -1) {
core/trace/ts/Trace-impl.h:621:            this->flush_event_stream(subt.bbl_trace_id);
core/trace/ts/Trace-impl.h:624:        if (subt.wait_trace_id != -1) {
core/trace/ts/Trace-impl.h:625:            this->flush_event_stream(subt.wait_trace_id);
core/trace/ts/Trace.h:220:        trace::Trace<StreamType, SelectedFileType>(this->store_),
core/trace/ts/Trace.h:227: * Subclass of Trace that uses an input file stream as storage (read-only)
core/trace/ts/Trace.h:241:        trace::Trace<StreamType, SelectedFileType>(this->store_),
core/trace/ts/Trace.h:251:#include "Trace-impl.h"
core/trace/ts/nanos.h:32:#include "nanos-int.h"
core/trace/ts/nanos.h:83:#include "nanos-impl.h"
core/trace/ts/types.h:56:        bbl_dict_id(-1),
core/trace/ts/types.h:57:        mem_trace_id(-1),
core/trace/ts/types.h:58:        bbl_trace_id(-1),
core/trace/ts/types.h:59:        wait_trace_id(-1),
core/trace/ts/types.h:79:    NO_SUBTRACE = -1,
core/trace/ts/types.h:80:    EMPTY_SUBTRACE = -2
core/trace/ts/types.h:133:#include "types-impl.h"
core/trace/ts/nanos-impl.h:64://  if ((std::chrono::duration_cast<std::chrono::seconds>(bug_fini-bug_ini).count()) > 0)
core/trace/ts/nanos-impl.h:65://    std::cerr << "[BUG DEPS] dep_t size " << dep.dimension_count << " TIME spend is " << std::chrono::duration_cast<std::chrono::seconds>(bug_fini-bug_ini).count()<< std::endl;
core/trace/ts/nanos-impl.h:116:    // - if all dimensions have size == accessed_length, ok
core/trace/ts/nanos-impl.h:117:    // - if one dimension has size > accessed_length, all deps above must have accessed_length == 1
core/trace/ts/nanos-impl.h:144:        os << ":" << i->size
core/trace/ts/nanos-impl.h:145:           << ":" << i->lower_bound
core/trace/ts/nanos-impl.h:146:           << ":" << i->accessed_length;
core/trace/ts/nanos-impl.h:186:        i->write(os);
core/trace/ts/nanos-impl.h:197:        i->read(is);
core/utils/Log.h:122:	// for dynamorio's C-style prints
core/utils/RangeMap.h:2: * Copyright - Barcelona Supercomputing Center.
core/utils/RangeMap.h:46:    RangeMap() : default_value_(-1)
core/utils/RangeMap.h:76:#include "RangeMap-impl.h"
core/utils/RangeMap-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/utils/RangeMap-impl.h:47:    auto pos = map_.upper_bound(start ? start - 1 : start);
core/utils/RangeMap-impl.h:50:    for (auto prev = std::prev(pos); pos != map_.end() && pos->first <= end; prev = std::prev(pos)) {
core/utils/RangeMap-impl.h:51:        if (pos->second.second == prev->second.second && prev->second.first == pos->first) {
core/utils/RangeMap-impl.h:52:            prev->second = pos->second;
core/utils/RangeMap-impl.h:68:    auto here = map_.upper_bound(there->first);
core/utils/RangeMap-impl.h:69:    if (here != map_.begin()) --here;
core/utils/RangeMap-impl.h:77:        here_from = here->first;
core/utils/RangeMap-impl.h:78:        std::tie(here_until, here_id) = here->second;
core/utils/RangeMap-impl.h:116:    // For simplicity, perform merging of contiguous same-id items separately
core/utils/RangeMap-impl.h:117:    merge_contiguous(other.map_.begin()->first, other.map_.rbegin()->second);
core/utils/RangeMap-impl.h:123:    const engine::addr_t mask = ~((1ULL << num_bits_ignored) - 1);
core/utils/RangeMap-impl.h:146:            merge(new_range, range_names_.size() - 1);
core/utils/RangeMap-impl.h:185:    std::tie(range_end, range_id) = std::prev(above)->second;
core/utils/ReusableObject.h:53:            tmp = next->next;
core/utils/ReusableObject.h:61:        if (ret) freeList_ = ret->next;
core/utils/ReusableObject.h:67:        ((Object *) ptr)->next = freeList_;
core/utils/CompressedStream-impl.h:38:    this->rdbuf(&compressor_);
core/utils/CompressedBuffer.h:95:#include "CompressedBuffer-impl.h"
core/utils/CheckTrace.cpp:50:        exit(-1);
core/utils/GzFile.h:61:#include "GzFile-impl.h"
core/utils/CompressedBuffer-impl.h:107:                compressed_buffer_->write(reinterpret_cast<const char*>(
core/utils/CompressedBuffer-impl.h:124:            compressed_buffer_->write(reinterpret_cast<const char *>(&comp_write_buffer_[0]),
core/utils/CompressedBuffer-impl.h:125:                                      Chunk_ - compressor_.avail_out);
core/utils/CompressedBuffer-impl.h:126:            total_out += Chunk_ - compressor_.avail_out;
core/utils/CompressedBuffer-impl.h:182:    size_t total = readable_bytes_ + compressor_.avail_in + (egptr() - gptr());
core/utils/CompressedBuffer-impl.h:209:        std::cout << (egptr() - gptr() ) << " bytes decompressed and "
core/utils/CompressedBuffer-impl.h:224:        compressed_buffer_->read(comp_read_buffer_, read_size);
core/utils/CompressedBuffer-impl.h:225:        readable_bytes_ -= read_size;
core/utils/CompressedBuffer-impl.h:253:    if (sync() == -1) return traits_type::eof();
core/utils/CompressedBuffer-impl.h:267:    ssize_t count = pptr() - pbase();
core/utils/CompressedBuffer-impl.h:293:            compressed_buffer_->write(reinterpret_cast<const char *>(
core/utils/CompressedBuffer-impl.h:302:    pbump(-count);
core/utils/CompressedBuffer-impl.h:310:    return -1;
core/utils/CompressedBuffer-impl.h:317:    return -1;
core/utils/CompressedBuffer-impl.h:324:    return -1;
core/utils/CompressedBuffer-impl.h:332:    compressed_buffer_->seekg(pos);
core/utils/CompressedBuffer-impl.h:333:    return compressed_buffer_->tellg();
core/utils/CompressedBuffer-impl.h:341:    compressed_buffer_->seekp(pos);
core/utils/CompressedBuffer-impl.h:342:    return compressed_buffer_->tellp();
core/utils/CompressedBuffer-impl.h:360:    return compressed_buffer_->tellg();
core/utils/CompressedBuffer-impl.h:369:    return compressed_buffer_->tellp();
core/utils/CompressedBuffer-impl.h:380:    return -1;
core/utils/CompressedStream.h:61:#include "CompressedStream-impl.h"
core/utils/instrumentation/MitosDefs.h:36:               // Integer operations 2-15
core/utils/instrumentation/MitosDefs.h:40:               // Memory operations 16-31
core/utils/instrumentation/MitosDefs.h:45:               // Branch-jumps 32-47
core/utils/instrumentation/MitosDefs.h:49:               // Memory locks 48-63
core/utils/instrumentation/MitosDefs.h:54:               // Floating point 64-79
core/utils/instrumentation/MitosDefs.h:59:               // Vector operations 80-95
core/utils/instrumentation/MitosDefs.h:64:               // Cache management operations ??? 96-111
Binary file core/utils/instrumentation/.types.h.swp matches
Binary file core/utils/instrumentation/.Mitos-impl.h.swp matches
Binary file core/utils/instrumentation/.MitosDefs.h.swp matches
core/utils/instrumentation/Instrumentation-impl.h:40:    static_cast<TraceType*>(this)->init(config);
core/utils/instrumentation/Instrumentation-impl.h:46:    static_cast<TraceType*>(this)->finalize();
core/utils/instrumentation/Instrumentation-impl.h:52:    return static_cast<TraceType*>(this)->add_module(module, num_components);
core/utils/instrumentation/Instrumentation-impl.h:58:    static_cast<TraceType*>(this)->start_state(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:64:    static_cast<TraceType*>(this)->end_state(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:70:    static_cast<TraceType*>(this)->start_comm(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:76:    static_cast<TraceType*>(this)->end_comm(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:82:    static_cast<TraceType*>(this)->add_event(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:88:    static_cast<TraceType*>(this)->add_event(trace_item, mod);
core/utils/instrumentation/Instrumentation-impl.h:94:    static_cast<TraceType*>(this)->add_function_name(name);
core/utils/instrumentation/Instrumentation-impl.h:100:    static_cast<TraceType*>(this)->add_precise_memory_event(trace_item);
core/utils/instrumentation/Instrumentation-impl.h:107:    return static_cast<TraceType*>(this)->get_hardware_sampling_interval();
core/utils/instrumentation/Instrumentation-impl.h:113:    return static_cast<TraceType*>(this)->dump_buffer();
core/utils/instrumentation/Paraver.h:122:#include "Paraver-impl.h"
core/utils/instrumentation/ParaverDefs.h:41:/** Do NOT Add any new event in the 42000000 - 42000100 range:
core/utils/instrumentation/Mitos.h:102:#include "Mitos-impl.h"
core/utils/instrumentation/Mitos-impl.h:65:            exit(-1);
core/utils/instrumentation/Mitos-impl.h:69:            exit(-1);
core/utils/instrumentation/Mitos-impl.h:77:            trace_name_builder << "-" << std::setw(4) << std::setfill('0') << index;
core/utils/instrumentation/Mitos-impl.h:86:            return trace_name.substr(0, trace_name.size() - 4);
core/utils/instrumentation/Mitos-impl.h:91:    exit(-1);
core/utils/instrumentation/Mitos-impl.h:134:					temporary_file_ << it->second << ",";
core/utils/instrumentation/Mitos-impl.h:254:        return -1;
core/utils/instrumentation/Mitos-impl.h:262:    int id = -1;
core/utils/instrumentation/Mitos-impl.h:336:    if (disable_trace_generation_ or trace_item.cpu_id_ == static_cast<unsigned>(-1)) {
core/utils/instrumentation/Mitos-impl.h:341:    // the comparison is <= as cpu_id_ is 1-indexed
core/utils/instrumentation/Instrumentation.h:87:    int add_module(const S &module, int num_components = 1) { return -1;}
core/utils/instrumentation/Instrumentation.h:104:#include "Instrumentation-impl.h"
core/utils/instrumentation/types-impl.h:91:    item.thread_id_ = thread_id - item.cpu_id_;
core/utils/instrumentation/Paraver-impl.h:65:            exit(-1);
core/utils/instrumentation/Paraver-impl.h:69:            exit(-1);
core/utils/instrumentation/Paraver-impl.h:77:            trace_name_builder << "-" << std::setw(4) << std::setfill('0') << index;
core/utils/instrumentation/Paraver-impl.h:86:            return trace_name.substr(0, trace_name.size() - 4);
core/utils/instrumentation/Paraver-impl.h:91:    exit(-1);
core/utils/instrumentation/Paraver-impl.h:243:        return -1;
core/utils/instrumentation/Paraver-impl.h:251:    int id = -1;
core/utils/instrumentation/Paraver-impl.h:253:        // Module-Component indexing:
core/utils/instrumentation/Paraver-impl.h:277:            // We get the Module name sub_index, if we have less than the sub-index, we must add
core/utils/instrumentation/Paraver-impl.h:315:        std::cerr << "Error: tried to finish a non-existant state." << std::endl;
core/utils/instrumentation/Paraver-impl.h:359:            trace_item.cpu_id_ == static_cast<unsigned>(-1)) {
core/utils/instrumentation/Paraver-impl.h:369:        unsigned initial_module = (trace_item.cpu_id_ - 1) * num_reps + 1;
core/utils/instrumentation/Paraver-impl.h:387:            trace_item.cpu_id_ == static_cast<unsigned>(-1)) {
core/utils/instrumentation/Paraver-impl.h:390:    // The comparison is <= as cpu_id_ is 1-indexed
core/utils/instrumentation/Paraver-impl.h:459:    year = time_manager.tm_year - 100;
core/utils/instrumentation/Paraver-impl.h:595:    std::cout << "$(TASKSIM_INSTALL_DIR)/bin/paraver_intermediate_to_txt -i " << temporary_file_name_
core/utils/instrumentation/Paraver-impl.h:596:              << " -o " << (trace_base_name_ + ".prv");
core/utils/instrumentation/Paraver-impl.h:598:        std::cout << " -t";
core/utils/instrumentation/types.h:95:        if (this->time_stamp_ < b.time_stamp_) {
core/utils/instrumentation/types.h:98:        else if (this->time_stamp_ == b.time_stamp_ and this->record_type_ < b.record_type_)
core/utils/instrumentation/types.h:167: *  PER_MODULE: Each simulated Module will have a pseudo-cpu in the isntrumentation trace.
core/utils/instrumentation/types.h:185:#include "types-impl.h"
Binary file core/utils/instrumentation/.Mitos.h.swp matches
core/utils/GzStream.h:95:#include "GzStream-impl.h"
core/utils/GzBuffer.cpp:64:    if (sync() == -1) return traits_type::eof();
core/utils/GzBuffer.cpp:74:    ssize_t count = pptr() - pbase();
core/utils/GzBuffer.cpp:76:        pbump(-count);
core/utils/GzBuffer.cpp:79:    return -1;
core/utils/GzBuffer.cpp:85:        ssize_t current_buffer_size =  (egptr() - eback());
core/utils/GzBuffer.cpp:86:        ssize_t initial_buffer_position = gz_file_.tell() - current_buffer_size;
core/utils/GzBuffer.cpp:87:        ssize_t current_buffer_position = (gptr() - eback());
core/utils/GzBuffer.cpp:88:        ssize_t pointer = pos - initial_buffer_position;
core/utils/GzBuffer.cpp:110:        ssize_t current_buffer_size =  (egptr() - eback());
core/utils/GzBuffer.cpp:111:        ssize_t initial_buffer_position = gz_file_.tell() - current_buffer_size;
core/utils/GzBuffer.cpp:112:        ssize_t current_file_pos = initial_buffer_position + (gptr() - eback());
core/utils/GzBuffer.cpp:116:        ssize_t current_buffer_size =  (egptr() - eback());
core/utils/GzBuffer.cpp:117:        ssize_t initial_buffer_position = gz_file_.tell() - current_buffer_size;
core/utils/GzBuffer.cpp:118:        ssize_t current_file_pos = initial_buffer_position + (gptr() - eback());
core/utils/GzBuffer.cpp:125:        return -1;
core/utils/tsmpi/libtsmpi_types.h:32:int64_t last_phase_id = -1;
core/utils/tsmpi/libtsmpi_types.h:33:int64_t last_phase_is_mem = -1;
core/utils/tsmpi/libtsmpi_types.h:139:                exit(-1);
core/utils/tsmpi/libtsmpi_extern.h:48:int64_t last_phase_id = -1;
core/utils/tsmpi/libtsmpi_extern.h:49:int64_t last_phase_is_mem = -1;
core/utils/tsmpi/libtsmpi_extern.h:119:    strncpy(rt_wp_info.fname_extension, apptemp+(strlen(apptemp)-9), 6);
core/utils/tsmpi/libtsmpi_extern.h:135:            exit(-1);
core/utils/tsmpi/libtsmpi_extern.h:166:    // [TRACE_bt-mz.A.2.200.iter_@@@@_000002_MEMO/bt-mz.A.2.200.iter_proc_000001.ts.mpiphases]
core/utils/tsmpi/libtsmpi_extern.h:180:    prefix[size - 2] = '/';
core/utils/tsmpi/libtsmpi_extern.h:181:    prefix[size - 1] = '\0';
core/utils/tsmpi/libtsmpi_extern.h:219:#include "libtsmpi_extern-impl.h"
core/utils/tsmpi/libtsmpi.c:70:// '--> wrapper to nanos via nanos_instrummpiphases_relation_fileent_(disable|enable):
core/utils/tsmpi/libtsmpi.c:71:// '--> nanos to wrapper through temporary_rel_$(PID).
core/utils/tsmpi/libtsmpi.c:116:            exit(-1);
core/utils/tsmpi/libtsmpi.c:160:        // exit(-1);
core/utils/tsmpi/tasksim_presim_filter.c:42:  *     xxxxxxxxxxxxxxx----------------
core/utils/tsmpi/tasksim_presim_filter.c:54:        return -1;
core/utils/tsmpi/tasksim_presim_filter.c:58:        return -1;
core/utils/tsmpi/tasksim_presim_filter.c:60:    return p-str+1;
core/utils/tsmpi/tasksim_presim_filter.c:69:        return -1;
core/utils/tsmpi/tasksim_presim_filter.c:99:    while ((read = getline(&line, &len, fd_partial)) != -1) {
core/utils/tsmpi/tasksim_presim_filter.c:102:        if (offset == -1) {
core/utils/tsmpi/tasksim_presim_filter.c:104:            exit(-1);
core/utils/tsmpi/tasksim_presim_filter.c:109:        presim_p->cad = malloc(offset * sizeof(char));
core/utils/tsmpi/tasksim_presim_filter.c:110:        memcpy(presim_p->cad, line, offset);
core/utils/tsmpi/tasksim_presim_filter.c:112:        presim_p->next = NULL;
core/utils/tsmpi/tasksim_presim_filter.c:116:            presim_end->next = presim_p;
core/utils/tsmpi/tasksim_presim_filter.c:123:    while ((read = getline(&line, &len, fd_commands)) != -1) {
core/utils/tsmpi/tasksim_presim_filter.c:127:        command_p->cad = malloc(len * sizeof(char));
core/utils/tsmpi/tasksim_presim_filter.c:129:        // Removed by len-2 instead of len-1
core/utils/tsmpi/tasksim_presim_filter.c:130:        memcpy(command_p->cad, line, len - 2);
core/utils/tsmpi/tasksim_presim_filter.c:131:        command_p->next = NULL;
core/utils/tsmpi/tasksim_presim_filter.c:135:            command_end->next = command_p;
core/utils/tsmpi/tasksim_presim_filter.c:148:            // Search presim_p->cad in line;
core/utils/tsmpi/tasksim_presim_filter.c:149:            if (strstr(command_p->cad, presim_p->cad) != NULL) {
core/utils/tsmpi/tasksim_presim_filter.c:153:            presim_p = presim_p->next;
core/utils/tsmpi/tasksim_presim_filter.c:161:                command_ini = command_ini->next;
core/utils/tsmpi/tasksim_presim_filter.c:165:                command_prev->next = command_p->next;
core/utils/tsmpi/tasksim_presim_filter.c:166:                command_p = command_p->next;
core/utils/tsmpi/tasksim_presim_filter.c:172:            command_p = command_p->next;
core/utils/tsmpi/tasksim_presim_filter.c:179:        printf("%s \n", command_p->cad);
core/utils/tsmpi/tasksim_presim_filter.c:180:        command_p = command_p->next;
core/utils/tsmpi/tasksim_presim.cpp:41:    printf("[*]\tmpirun -np $procs tasksim_presim -d $input_trace.folder -o $output_presim.file  -c $input_config.file [-t $output_prv.folder]\n");
core/utils/tsmpi/tasksim_presim.cpp:52:    while ((c = getopt(argc, argv, "d:o:c:t:gsfzq:")) != static_cast<char>(-1)) {
core/utils/tsmpi/tasksim_presim.cpp:114:    if (err == -1) {
core/utils/tsmpi/tasksim_presim.cpp:141:        const std::string name(ent->d_name);
core/utils/tsmpi/tasksim_presim.cpp:142:        if (ent->d_type == DT_DIR || (name.find(".conf") == std::string::npos)) {
core/utils/tsmpi/tasksim_presim.cpp:161:        const std::string name(ent->d_name);
core/utils/tsmpi/tasksim_presim.cpp:162:        if (ent->d_type == DT_DIR || (name.find(".ts.mpiphases") == std::string::npos)) {
core/utils/tsmpi/tasksim_presim.cpp:166:        // Shortcut to avoid parsing traces belonging to Burst-only MPI Ranks.
core/utils/tsmpi/tasksim_presim.cpp:184:        file_desc.path = params.folder + "/" + ent->d_name;
core/utils/tsmpi/tasksim_presim.cpp:185:        file_desc.proc = name.substr(ini, fin - ini);
core/utils/tsmpi/tasksim_presim.cpp:237:        return std::string('0', length - str_num.size()) + str_num;
core/utils/tsmpi/tasksim_presim.cpp:243:    const std::string zip_cmd("&& tar zcf zipped_cmd_traces.tar.gz cmd-trace* && rm *.cmdtrace");
core/utils/tsmpi/tasksim_presim.cpp:254:                if (err == -1) {
core/utils/tsmpi/tasksim_presim.cpp:256:                    if (dir_err == -1) {
core/utils/tsmpi/tasksim_presim.cpp:258:                        exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:269:                if (err == -1) {
core/utils/tsmpi/tasksim_presim.cpp:271:                    if (dir_err == -1) {
core/utils/tsmpi/tasksim_presim.cpp:274:                        exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:278:                    if (access(outlog_path.c_str(), F_OK) != -1) {
core/utils/tsmpi/tasksim_presim.cpp:289:                            const std::string delete_folder_contents = "rm -r " + burst_folder_name + "/*";
core/utils/tsmpi/tasksim_presim.cpp:301:                          << " | head -n 1 | cut -d' ' -f4 | awk '{print \""
core/utils/tsmpi/tasksim_presim.cpp:349:        exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:356:            exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:361:            exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:366:            exit(-1);
core/utils/tsmpi/tasksim_presim.cpp:378:        return -1;
core/utils/tsmpi/libtsmpi_extern-impl.h:96:        exit(-1);
core/utils/tsmpi/libtsmpi_extern-impl.h:121:      exit(-1);
core/utils/tsmpi/libtsmpi_extern-impl.h:142:    printf("[WRAPPER]#####################Succeed - MPI has been called \n");
core/utils/tsmpi/libtsmpi_extern-impl.h:169:        exit(-1);
core/utils/tsmpi/libtsmpi_extern-impl.h:175:            rt_wp_info.mpi_rank = array[0] - 1;
core/utils/tsmpi/libtsmpi_extern-impl.h:188:    printf("[WRAPPER]##################### Succeded - MPI has been called \n");
core/utils/mean.h:44:    T epsilon = 1e-6;
core/utils/RangeSet-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/utils/RangeSet-impl.h:39:    if (not has_previous or previous->second < range.first) {
core/utils/RangeSet-impl.h:43:    else if (previous->second < range.second) {
core/utils/RangeSet-impl.h:45:        previous->second = range.second;
core/utils/RangeSet-impl.h:54:    while (after != map_.end() and insert_range->second >= after->first) {
core/utils/RangeSet-impl.h:55:        insert_range->second = std::max(insert_range->second, after->second);
core/utils/RangeSet-impl.h:66:    std::map<engine::addr_t, engine::addr_t>::iterator there = other.map_.begin(), here = map_.upper_bound(there->first);
core/utils/RangeSet-impl.h:78:        else if (there->first > 0 && here->second < there->first) {
core/utils/RangeSet-impl.h:82:        else if (here->first > 0 && there->second < here->first) {
core/utils/RangeSet-impl.h:90:            engine::addr_t range_end = std::max(there->second, here->second);
core/utils/RangeSet-impl.h:92:            if (there->first < here->first) {
core/utils/RangeSet-impl.h:93:                auto insert_pos = map_.insert(here, std::make_pair(there->first, range_end));
core/utils/RangeSet-impl.h:99:                here->second = range_end;
core/utils/RangeSet-impl.h:105:            while (after_here != map_.end() and here->second >= after_here->first) {
core/utils/RangeSet-impl.h:106:                here->second = std::max(here->second, after_here->second);
core/utils/RangeSet-impl.h:118:    if (after == map_.begin() or std::prev(after)->second < addr) {
core/utils/RangeSet-impl.h:119:        return -1;
core/utils/RangeSet-impl.h:123:    int64_t pos = addr - it->first;
core/utils/RangeSet-impl.h:125:        --it;
core/utils/RangeSet-impl.h:126:        pos += it->second + 1 - it->first;
core/utils/RangeSet-impl.h:137:    return (after != map_.begin() and std::prev(after)->second > addr);
core/utils/RangeSet-impl.h:145:        addresses += (it.second - it.first);
core/utils/GzStream-impl.h:55:    if (gz_file_->is_open()) {
core/utils/GzStream-impl.h:68:    if (gz_file_->is_open()) {
core/utils/GzStream-impl.h:77:        return gz_file_->is_open();
core/utils/median.h:48:        return (sorted_vec[size/2 - 1] + sorted_vec[size/2]) / 2;
core/utils/TimeList.h:63:#include "TimeList-impl.h"
core/utils/RangeSet.h:2: * Copyright - Barcelona Supercomputing Center.
core/utils/RangeSet.h:70:#include "RangeSet-impl.h"
core/runtime/TaskDataDep-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/runtime/TaskDataDep-impl.h:48:            return (unsigned char)-1;
core/runtime/TaskDataDep-impl.h:75:    end_addr_(addr + size - 1),
core/runtime/TaskDataDep-impl.h:156:        if (it->concurrent_) {
core/runtime/TaskDataDep.h:2: * Copyright - Barcelona Supercomputing Center.
core/runtime/TaskDataDep.h:32:} task_dep_t; /* Don't change values - support for bitwise AND */
core/runtime/TaskDataDep.h:102:#include "TaskDataDep-impl.h"
core/Makefile.in:4:# Copyright (C) 1994-2013 Free Software Foundation, Inc.
core/Makefile.in:21:am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
core/Makefile.in:23:  case $${target_option-} in \
core/Makefile.in:26:              "target option '$${target_option-}' specified" >&2; \
core/Makefile.in:49:      *=*|--*) continue;; \
core/Makefile.in:50:        -*I) strip_trailopt 'I'; skip_next=yes;; \
core/Makefile.in:51:      -*I?*) strip_trailopt 'I';; \
core/Makefile.in:52:        -*O) strip_trailopt 'O'; skip_next=yes;; \
core/Makefile.in:53:      -*O?*) strip_trailopt 'O';; \
core/Makefile.in:54:        -*l) strip_trailopt 'l'; skip_next=yes;; \
core/Makefile.in:55:      -*l?*) strip_trailopt 'l';; \
core/Makefile.in:56:      -[dEDm]) skip_next=yes;; \
core/Makefile.in:57:      -[JT]) skip_next=yes;; \
core/Makefile.in:71:install_sh_DATA = $(install_sh) -c -m 644
core/Makefile.in:72:install_sh_PROGRAM = $(install_sh) -c
core/Makefile.in:73:install_sh_SCRIPT = $(install_sh) -c
core/Makefile.in:99:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@am__append_3 = libompss-drtrace.la
core/Makefile.in:114:mkinstalldirs = $(install_sh) -d
core/Makefile.in:122:am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
core/Makefile.in:127:  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
core/Makefile.in:139:  test -z "$$files" \
core/Makefile.in:140:    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
core/Makefile.in:141:    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
core/Makefile.in:142:         $(am__cd) "$$dir" && rm -f $$files; }; \
core/Makefile.in:155:am__v_lt_0 = --silent
core/Makefile.in:157:libnextsim_engine_la_DEPENDENCIES = libnextsim-stats.la
core/Makefile.in:174:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@	libnextsim-utils.la \
core/Makefile.in:177:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@am_libompss_drtrace_la_OBJECTS = trace/dr/libompss_drtrace_la-dynamoRIOTool.lo
core/Makefile.in:179:libompss_drtrace_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:180:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:182:	$(libompss_drtrace_la_LDFLAGS) $(LDFLAGS) -o $@
core/Makefile.in:184:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@	-rpath $(libdir)
core/Makefile.in:187:@ENABLE_MPI_TRUE@am_utils_tsmpi_libtsmpi_la_OBJECTS = utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo
core/Makefile.in:190:utils_tsmpi_libtsmpi_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
core/Makefile.in:191:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
core/Makefile.in:193:	$(utils_tsmpi_libtsmpi_la_LDFLAGS) $(LDFLAGS) -o $@
core/Makefile.in:194:@ENABLE_MPI_TRUE@am_utils_tsmpi_libtsmpi_la_rpath = -rpath $(libdir)
core/Makefile.in:206:clean_drtrace_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:210:dr_nonanos_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:214:instr_breakdown_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:219:instr_breakdown_musa_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:222:ipc_histogram_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:225:mem_analyzer_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:230:merge_ompss_dr_traces_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:233:merge_sve_memtrace_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:237:@ENABLE_MPI_TRUE@	tools/mpi_merge_sve-mpi_merge_sve.$(OBJEXT) \
core/Makefile.in:238:@ENABLE_MPI_TRUE@	tools/mpi_merge_sve-ompss_util.$(OBJEXT)
core/Makefile.in:240:@ENABLE_MPI_TRUE@mpi_merge_sve_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:241:mpi_merge_sve_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:242:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:244:	-o $@
core/Makefile.in:247:@ENABLE_MPI_TRUE@	tools/mpi_trace_sve-mpi_trace_sve.$(OBJEXT)
core/Makefile.in:249:@ENABLE_MPI_TRUE@mpi_trace_sve_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:250:mpi_trace_sve_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:251:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:253:	-o $@
core/Makefile.in:256:ompss_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:260:ompss_dr_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:262:@ENABLE_MPI_TRUE@am_ompss_mpi_dr_mem_OBJECTS = tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.$(OBJEXT)
core/Makefile.in:264:@ENABLE_MPI_TRUE@ompss_mpi_dr_mem_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:265:ompss_mpi_dr_mem_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:266:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:268:	$(LDFLAGS) -o $@
core/Makefile.in:271:@ENABLE_MPI_TRUE@	tools/ompss_mpi_mem-ompss_mpi_mem.$(OBJEXT)
core/Makefile.in:273:@ENABLE_MPI_TRUE@ompss_mpi_mem_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:274:ompss_mpi_mem_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:275:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:277:	-o $@
core/Makefile.in:280:@ENABLE_MPI_TRUE@am_ompss_mpi_merge_OBJECTS = tools/ompss_mpi_merge-ompss_mpi_merge.$(OBJEXT) \
core/Makefile.in:281:@ENABLE_MPI_TRUE@	tools/ompss_mpi_merge-ompss_util.$(OBJEXT)
core/Makefile.in:283:@ENABLE_MPI_TRUE@ompss_mpi_merge_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:286:@ENABLE_MPI_TRUE@am_ompss_mpi_merge_mw_OBJECTS = tools/ompss_mpi_merge_mw-ompss_mpi_merge.$(OBJEXT) \
core/Makefile.in:287:@ENABLE_MPI_TRUE@	tools/ompss_mpi_merge_mw-ompss_util.$(OBJEXT)
core/Makefile.in:290:@ENABLE_MPI_TRUE@	libnextsim-utils.la
core/Makefile.in:291:ompss_mpi_merge_mw_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
core/Makefile.in:292:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
core/Makefile.in:294:	$(LDFLAGS) -o $@
core/Makefile.in:296:@ENABLE_MPI_TRUE@am_ompss_mpi_perf_OBJECTS = tools/ompss_mpi_perf-ompss_mpi_perf.$(OBJEXT)
core/Makefile.in:298:@ENABLE_MPI_TRUE@ompss_mpi_perf_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:303:paraver_intermediate_to_txt_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:306:task_data_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:324:trace_compare_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:327:trace_compare_info_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:330:trace_compare_new_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:334:trace_convert_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:337:trace_sve_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:340:trace_to_csvtdg_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:343:wd_info_DEPENDENCIES = libnextsim-utils.la
core/Makefile.in:356:DEFAULT_INCLUDES = -I.@am__isrc@
core/Makefile.in:359:am__mv = mv -f
core/Makefile.in:362:LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
core/Makefile.in:363:	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
core/Makefile.in:371:LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
core/Makefile.in:372:	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
core/Makefile.in:373:	$(AM_LDFLAGS) $(LDFLAGS) -o $@
core/Makefile.in:380:LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
core/Makefile.in:381:	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
core/Makefile.in:389:CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
core/Makefile.in:390:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
core/Makefile.in:391:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
core/Makefile.in:443:    *) (install-info --version) >/dev/null 2>&1;; \
core/Makefile.in:449:# Read a list of newline-separated strings from the standard input,
core/Makefile.in:463:    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
core/Makefile.in:617:noinst_LTLIBRARIES = libnextsim-stats.la \
core/Makefile.in:618:                     libnextsim-engine.la \
core/Makefile.in:619:                     libnextsim-cpu.la \
core/Makefile.in:620:                     libnextsim-logic-memory.la \
core/Makefile.in:621:                     libnextsim-utils.la
core/Makefile.in:634:libnextsim_engine_la_LIBADD = libnextsim-stats.la
core/Makefile.in:658:libnextsim_utils_la_LIBADD = -lz
core/Makefile.in:663:@ENABLE_MPI_TRUE@utils_tsmpi_libtsmpi_la_CFLAGS = -D_GNU_SOURCE -D_TS_PATH=\"$(prefix)\" -fPIC -I$(mpi_install_path)/include
core/Makefile.in:664:@ENABLE_MPI_TRUE@utils_tsmpi_libtsmpi_la_LDFLAGS = -lz -fPIC -L$(mpi_lib_path) -lmpi -ldl
core/Makefile.in:666:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@							@DR_CPPFLAGS@ -I@PTLSIM_DIR@ \
core/Makefile.in:667:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@							-I$(nanox_src_path)/src/core \
core/Makefile.in:668:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@							-I$(nanox_src_path)/src/support
core/Makefile.in:670:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@libompss_drtrace_la_CXXFLAGS = $(AM_CXXFLAGS) @DR_CFLAGS@ @DR_CPPFLAGS@ @PTLSIM_CXXFLAGS@ -fexceptions
core/Makefile.in:671:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@libompss_drtrace_la_LDFLAGS = @DR_LDFLAGS@ -Wl,--no-undefined
core/Makefile.in:673:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@	@DR_LIBRARIES@ -lz \
core/Makefile.in:674:@ENABLE_NANOX_TRUE@@HAVE_DR_TRUE@	libnextsim-utils.la \
core/Makefile.in:678:clean_drtrace_LDADD = libnextsim-utils.la
core/Makefile.in:682:@ENABLE_MPI_TRUE@ompss_mpi_merge_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" $(AM_CPPFLAGS)
core/Makefile.in:683:@ENABLE_MPI_TRUE@ompss_mpi_merge_LDADD = libnextsim-utils.la
core/Makefile.in:685:@ENABLE_MPI_TRUE@ompss_mpi_perf_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" $(AM_CPPFLAGS)
core/Makefile.in:686:@ENABLE_MPI_TRUE@ompss_mpi_perf_LDADD = libnextsim-utils.la
core/Makefile.in:688:@ENABLE_MPI_TRUE@ompss_mpi_mem_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.in:689:@ENABLE_MPI_TRUE@ompss_mpi_mem_LDFLAGS = -L$(mpi_lib_path) -lmpi -lmpi_cxx $(AM_LDFLAGS)
core/Makefile.in:690:@ENABLE_MPI_TRUE@ompss_mpi_mem_LDADD = libnextsim-utils.la
core/Makefile.in:692:@ENABLE_MPI_TRUE@ompss_mpi_dr_mem_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.in:694:@ENABLE_MPI_TRUE@ompss_mpi_dr_mem_LDADD = libnextsim-utils.la
core/Makefile.in:698:@ENABLE_MPI_TRUE@ompss_mpi_merge_mw_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -DENABLE_MPI -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.in:700:@ENABLE_MPI_TRUE@ompss_mpi_merge_mw_LDADD = libnextsim-utils.la
core/Makefile.in:702:@ENABLE_MPI_TRUE@mpi_trace_sve_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.in:704:@ENABLE_MPI_TRUE@mpi_trace_sve_LDADD = libnextsim-utils.la
core/Makefile.in:708:@ENABLE_MPI_TRUE@mpi_merge_sve_CPPFLAGS = -D_TS_PATH=\"$(prefix)\" -I$(mpi_install_path)/include $(AM_CPPFLAGS)
core/Makefile.in:710:@ENABLE_MPI_TRUE@mpi_merge_sve_LDADD = libnextsim-utils.la
core/Makefile.in:714:ompss_LDADD = libnextsim-utils.la
core/Makefile.in:716:ompss_dr_LDADD = libnextsim-utils.la
core/Makefile.in:720:instr_breakdown_LDADD = libnextsim-utils.la
core/Makefile.in:724:instr_breakdown_musa_LDADD = libnextsim-utils.la
core/Makefile.in:726:wd_info_LDADD = libnextsim-utils.la
core/Makefile.in:728:task_data_LDADD = libnextsim-utils.la
core/Makefile.in:730:ipc_histogram_LDADD = libnextsim-utils.la
core/Makefile.in:732:mem_analyzer_LDADD = libnextsim-utils.la
core/Makefile.in:734:trace_to_csvtdg_LDADD = libnextsim-utils.la
core/Makefile.in:736:paraver_intermediate_to_txt_LDADD = libnextsim-utils.la
core/Makefile.in:738:trace_compare_LDADD = libnextsim-utils.la
core/Makefile.in:740:trace_compare_new_LDADD = libnextsim-utils.la
core/Makefile.in:742:trace_compare_info_LDADD = libnextsim-utils.la
core/Makefile.in:746:trace_convert_LDADD = libnextsim-utils.la
core/Makefile.in:748:merge_sve_memtrace_LDADD = libnextsim-utils.la
core/Makefile.in:750:trace_sve_LDADD = libnextsim-utils.la
core/Makefile.in:754:dr_nonanos_LDADD = libnextsim-utils.la
core/Makefile.in:758:merge_ompss_dr_traces_LDADD = libnextsim-utils.la
core/Makefile.in:760:                 tools/power_consumption/tasksim-mcpat.py \
core/Makefile.in:761:                 tools/power_consumption/Paraver/mcpat-paraver.sh \
core/Makefile.in:771:                 tools/power_consumption/templates/mcpat-input.xml
core/Makefile.in:773:all: all-am
core/Makefile.in:781:	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
core/Makefile.in:782:	        && { if test -f $@; then exit 0; else break; fi; }; \
core/Makefile.in:786:	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/core/Makefile'; \
core/Makefile.in:788:	  $(AUTOMAKE) --gnu src/core/Makefile
core/Makefile.in:793:	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
core/Makefile.in:800:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
core/Makefile.in:803:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
core/Makefile.in:805:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
core/Makefile.in:808:install-libLTLIBRARIES: $(lib_LTLIBRARIES)
core/Makefile.in:810:	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
core/Makefile.in:812:	  if test -f $$p; then \
core/Makefile.in:816:	test -z "$$list2" || { \
core/Makefile.in:819:	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
core/Makefile.in:820:	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
core/Makefile.in:823:uninstall-libLTLIBRARIES:
core/Makefile.in:825:	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
core/Makefile.in:828:	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
core/Makefile.in:829:	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
core/Makefile.in:832:clean-libLTLIBRARIES:
core/Makefile.in:833:	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
core/Makefile.in:837:	      sort -u`; \
core/Makefile.in:838:	test -z "$$locs" || { \
core/Makefile.in:839:	  echo rm -f $${locs}; \
core/Makefile.in:840:	  rm -f $${locs}; \
core/Makefile.in:843:clean-noinstLTLIBRARIES:
core/Makefile.in:844:	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
core/Makefile.in:848:	      sort -u`; \
core/Makefile.in:849:	test -z "$$locs" || { \
core/Makefile.in:850:	  echo rm -f $${locs}; \
core/Makefile.in:851:	  rm -f $${locs}; \
core/Makefile.in:870:libnextsim-cpu.la: $(libnextsim_cpu_la_OBJECTS) $(libnextsim_cpu_la_DEPENDENCIES) $(EXTRA_libnextsim_cpu_la_DEPENDENCIES) 
core/Makefile.in:883:libnextsim-engine.la: $(libnextsim_engine_la_OBJECTS) $(libnextsim_engine_la_DEPENDENCIES) $(EXTRA_libnextsim_engine_la_DEPENDENCIES) 
core/Makefile.in:904:libnextsim-logic-memory.la: $(libnextsim_logic_memory_la_OBJECTS) $(libnextsim_logic_memory_la_DEPENDENCIES) $(EXTRA_libnextsim_logic_memory_la_DEPENDENCIES) 
core/Makefile.in:916:libnextsim-stats.la: $(libnextsim_stats_la_OBJECTS) $(libnextsim_stats_la_DEPENDENCIES) $(EXTRA_libnextsim_stats_la_DEPENDENCIES) 
core/Makefile.in:930:libnextsim-utils.la: $(libnextsim_utils_la_OBJECTS) $(libnextsim_utils_la_DEPENDENCIES) $(EXTRA_libnextsim_utils_la_DEPENDENCIES) 
core/Makefile.in:938:trace/dr/libompss_drtrace_la-dynamoRIOTool.lo:  \
core/Makefile.in:941:libompss-drtrace.la: $(libompss_drtrace_la_OBJECTS) $(libompss_drtrace_la_DEPENDENCIES) $(EXTRA_libompss_drtrace_la_DEPENDENCIES) 
core/Makefile.in:949:utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo:  \
core/Makefile.in:955:install-binPROGRAMS: $(bin_PROGRAMS)
core/Makefile.in:957:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
core/Makefile.in:958:	if test -n "$$list"; then \
core/Makefile.in:964:	while read p p1; do if test -f $$p \
core/Makefile.in:965:	 || test -f $$p1 \
core/Makefile.in:968:	sed -e 'p;s,.*/,,;n;h' \
core/Makefile.in:969:	    -e 's|.*|.|' \
core/Makefile.in:970:	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
core/Makefile.in:979:	    test -z "$$files" || { \
core/Makefile.in:980:	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
core/Makefile.in:981:	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
core/Makefile.in:985:uninstall-binPROGRAMS:
core/Makefile.in:987:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
core/Makefile.in:989:	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
core/Makefile.in:990:	      -e 's/$$/$(EXEEXT)/' \
core/Makefile.in:992:	test -n "$$list" || exit 0; \
core/Makefile.in:993:	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
core/Makefile.in:994:	cd "$(DESTDIR)$(bindir)" && rm -f $$files
core/Makefile.in:996:clean-binPROGRAMS:
core/Makefile.in:997:	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
core/Makefile.in:998:	echo " rm -f" $$list; \
core/Makefile.in:999:	rm -f $$list || exit $$?; \
core/Makefile.in:1000:	test -n "$(EXEEXT)" || exit 0; \
core/Makefile.in:1002:	echo " rm -f" $$list; \
core/Makefile.in:1003:	rm -f $$list
core/Makefile.in:1014:	@rm -f clean_drtrace$(EXEEXT)
core/Makefile.in:1022:	@rm -f dr_nonanos$(EXEEXT)
core/Makefile.in:1030:	@rm -f instr_breakdown$(EXEEXT)
core/Makefile.in:1036:	@rm -f instr_breakdown_musa$(EXEEXT)
core/Makefile.in:1042:	@rm -f ipc_histogram$(EXEEXT)
core/Makefile.in:1048:	@rm -f mem_analyzer$(EXEEXT)
core/Makefile.in:1054:	@rm -f merge_ompss_dr_traces$(EXEEXT)
core/Makefile.in:1060:	@rm -f merge_sve_memtrace$(EXEEXT)
core/Makefile.in:1062:tools/mpi_merge_sve-mpi_merge_sve.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1064:tools/mpi_merge_sve-ompss_util.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1068:	@rm -f mpi_merge_sve$(EXEEXT)
core/Makefile.in:1070:tools/mpi_trace_sve-mpi_trace_sve.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1074:	@rm -f mpi_trace_sve$(EXEEXT)
core/Makefile.in:1080:	@rm -f ompss$(EXEEXT)
core/Makefile.in:1086:	@rm -f ompss_dr$(EXEEXT)
core/Makefile.in:1088:tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.$(OBJEXT):  \
core/Makefile.in:1092:	@rm -f ompss_mpi_dr_mem$(EXEEXT)
core/Makefile.in:1094:tools/ompss_mpi_mem-ompss_mpi_mem.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1098:	@rm -f ompss_mpi_mem$(EXEEXT)
core/Makefile.in:1100:tools/ompss_mpi_merge-ompss_mpi_merge.$(OBJEXT):  \
core/Makefile.in:1102:tools/ompss_mpi_merge-ompss_util.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1106:	@rm -f ompss_mpi_merge$(EXEEXT)
core/Makefile.in:1108:tools/ompss_mpi_merge_mw-ompss_mpi_merge.$(OBJEXT):  \
core/Makefile.in:1110:tools/ompss_mpi_merge_mw-ompss_util.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1114:	@rm -f ompss_mpi_merge_mw$(EXEEXT)
core/Makefile.in:1116:tools/ompss_mpi_perf-ompss_mpi_perf.$(OBJEXT): tools/$(am__dirstamp) \
core/Makefile.in:1120:	@rm -f ompss_mpi_perf$(EXEEXT)
core/Makefile.in:1126:	@rm -f paraver_intermediate_to_txt$(EXEEXT)
core/Makefile.in:1132:	@rm -f task_data$(EXEEXT)
core/Makefile.in:1138:	@rm -f tasksim_presim$(EXEEXT)
core/Makefile.in:1145:	@rm -f tasksim_presim_filter$(EXEEXT)
core/Makefile.in:1152:	@rm -f tasksim_presim_sorter$(EXEEXT)
core/Makefile.in:1158:	@rm -f trace_compare$(EXEEXT)
core/Makefile.in:1164:	@rm -f trace_compare_info$(EXEEXT)
core/Makefile.in:1170:	@rm -f trace_compare_new$(EXEEXT)
core/Makefile.in:1178:	@rm -f trace_convert$(EXEEXT)
core/Makefile.in:1184:	@rm -f trace_sve$(EXEEXT)
core/Makefile.in:1190:	@rm -f trace_to_csvtdg$(EXEEXT)
core/Makefile.in:1196:	@rm -f wd_info$(EXEEXT)
core/Makefile.in:1199:mostlyclean-compile:
core/Makefile.in:1200:	-rm -f *.$(OBJEXT)
core/Makefile.in:1201:	-rm -f engine/*.$(OBJEXT)
core/Makefile.in:1202:	-rm -f engine/*.lo
core/Makefile.in:1203:	-rm -f logic/memory/*.$(OBJEXT)
core/Makefile.in:1204:	-rm -f logic/memory/*.lo
core/Makefile.in:1205:	-rm -f logic/memory/policy/*.$(OBJEXT)
core/Makefile.in:1206:	-rm -f logic/memory/policy/*.lo
core/Makefile.in:1207:	-rm -f modules/cpu/*.$(OBJEXT)
core/Makefile.in:1208:	-rm -f modules/cpu/*.lo
core/Makefile.in:1209:	-rm -f modules/cpu/models/*.$(OBJEXT)
core/Makefile.in:1210:	-rm -f modules/cpu/models/*.lo
core/Makefile.in:1211:	-rm -f stats/*.$(OBJEXT)
core/Makefile.in:1212:	-rm -f stats/*.lo
core/Makefile.in:1213:	-rm -f tools/*.$(OBJEXT)
core/Makefile.in:1214:	-rm -f trace/dr/*.$(OBJEXT)
core/Makefile.in:1215:	-rm -f trace/dr/*.lo
core/Makefile.in:1216:	-rm -f utils/*.$(OBJEXT)
core/Makefile.in:1217:	-rm -f utils/*.lo
core/Makefile.in:1218:	-rm -f utils/tsmpi/*.$(OBJEXT)
core/Makefile.in:1219:	-rm -f utils/tsmpi/*.lo
core/Makefile.in:1221:distclean-compile:
core/Makefile.in:1222:	-rm -f *.tab.c
core/Makefile.in:1242:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Po@am__quote@
core/Makefile.in:1243:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Po@am__quote@
core/Makefile.in:1244:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Po@am__quote@
core/Makefile.in:1247:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Po@am__quote@
core/Makefile.in:1248:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Po@am__quote@
core/Makefile.in:1249:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Po@am__quote@
core/Makefile.in:1250:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Po@am__quote@
core/Makefile.in:1251:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Po@am__quote@
core/Makefile.in:1252:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Po@am__quote@
core/Makefile.in:1253:@AMDEP_TRUE@@am__include@ @am__quote@tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Po@am__quote@
core/Makefile.in:1265:@AMDEP_TRUE@@am__include@ @am__quote@trace/dr/$(DEPDIR)/libompss_drtrace_la-dynamoRIOTool.Plo@am__quote@
core/Makefile.in:1272:@AMDEP_TRUE@@am__include@ @am__quote@utils/tsmpi/$(DEPDIR)/utils_tsmpi_libtsmpi_la-libtsmpi.Plo@am__quote@
core/Makefile.in:1276:@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
core/Makefile.in:1280:@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<
core/Makefile.in:1284:@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
core/Makefile.in:1288:@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
core/Makefile.in:1292:@am__fastdepCC_TRUE@	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
core/Makefile.in:1296:@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<
core/Makefile.in:1298:utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo: utils/tsmpi/libtsmpi.c
core/Makefile.in:1299:@am__fastdepCC_TRUE@	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utils_tsmpi_libtsmpi_la_CFLAGS) $(CFLAGS) -MT utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo -MD -MP -MF utils/tsmpi/$(DEPDIR)/utils_tsmpi_libtsmpi_la-libtsmpi.Tpo -c -o utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo `test -f 'utils/tsmpi/libtsmpi.c' || echo '$(srcdir)/'`utils/tsmpi/libtsmpi.c
core/Makefile.in:1300:@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) utils/tsmpi/$(DEPDIR)/utils_tsmpi_libtsmpi_la-libtsmpi.Tpo utils/tsmpi/$(DEPDIR)/utils_tsmpi_libtsmpi_la-libtsmpi.Plo
core/Makefile.in:1301:@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='utils/tsmpi/libtsmpi.c' object='utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo' libtool=yes @AMDEPBACKSLASH@
core/Makefile.in:1303:@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(utils_tsmpi_libtsmpi_la_CFLAGS) $(CFLAGS) -c -o utils/tsmpi/utils_tsmpi_libtsmpi_la-libtsmpi.lo `test -f 'utils/tsmpi/libtsmpi.c' || echo '$(srcdir)/'`utils/tsmpi/libtsmpi.c
core/Makefile.in:1307:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
core/Makefile.in:1311:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<
core/Makefile.in:1315:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
core/Makefile.in:1319:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
core/Makefile.in:1323:@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
core/Makefile.in:1327:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<
core/Makefile.in:1329:trace/dr/libompss_drtrace_la-dynamoRIOTool.lo: trace/dr/dynamoRIOTool.cpp
core/Makefile.in:1330:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libompss_drtrace_la_CPPFLAGS) $(CPPFLAGS) $(libompss_drtrace_la_CXXFLAGS) $(CXXFLAGS) -MT trace/dr/libompss_drtrace_la-dynamoRIOTool.lo -MD -MP -MF trace/dr/$(DEPDIR)/libompss_drtrace_la-dynamoRIOTool.Tpo -c -o trace/dr/libompss_drtrace_la-dynamoRIOTool.lo `test -f 'trace/dr/dynamoRIOTool.cpp' || echo '$(srcdir)/'`trace/dr/dynamoRIOTool.cpp
core/Makefile.in:1331:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) trace/dr/$(DEPDIR)/libompss_drtrace_la-dynamoRIOTool.Tpo trace/dr/$(DEPDIR)/libompss_drtrace_la-dynamoRIOTool.Plo
core/Makefile.in:1332:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='trace/dr/dynamoRIOTool.cpp' object='trace/dr/libompss_drtrace_la-dynamoRIOTool.lo' libtool=yes @AMDEPBACKSLASH@
core/Makefile.in:1334:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libompss_drtrace_la_CPPFLAGS) $(CPPFLAGS) $(libompss_drtrace_la_CXXFLAGS) $(CXXFLAGS) -c -o trace/dr/libompss_drtrace_la-dynamoRIOTool.lo `test -f 'trace/dr/dynamoRIOTool.cpp' || echo '$(srcdir)/'`trace/dr/dynamoRIOTool.cpp
core/Makefile.in:1336:tools/mpi_merge_sve-mpi_merge_sve.o: tools/mpi_merge_sve.cpp
core/Makefile.in:1337:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_merge_sve-mpi_merge_sve.o -MD -MP -MF tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Tpo -c -o tools/mpi_merge_sve-mpi_merge_sve.o `test -f 'tools/mpi_merge_sve.cpp' || echo '$(srcdir)/'`tools/mpi_merge_sve.cpp
core/Makefile.in:1338:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Tpo tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Po
core/Makefile.in:1339:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/mpi_merge_sve.cpp' object='tools/mpi_merge_sve-mpi_merge_sve.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1341:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_merge_sve-mpi_merge_sve.o `test -f 'tools/mpi_merge_sve.cpp' || echo '$(srcdir)/'`tools/mpi_merge_sve.cpp
core/Makefile.in:1343:tools/mpi_merge_sve-mpi_merge_sve.obj: tools/mpi_merge_sve.cpp
core/Makefile.in:1344:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_merge_sve-mpi_merge_sve.obj -MD -MP -MF tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Tpo -c -o tools/mpi_merge_sve-mpi_merge_sve.obj `if test -f 'tools/mpi_merge_sve.cpp'; then $(CYGPATH_W) 'tools/mpi_merge_sve.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/mpi_merge_sve.cpp'; fi`
core/Makefile.in:1345:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Tpo tools/$(DEPDIR)/mpi_merge_sve-mpi_merge_sve.Po
core/Makefile.in:1346:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/mpi_merge_sve.cpp' object='tools/mpi_merge_sve-mpi_merge_sve.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1348:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_merge_sve-mpi_merge_sve.obj `if test -f 'tools/mpi_merge_sve.cpp'; then $(CYGPATH_W) 'tools/mpi_merge_sve.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/mpi_merge_sve.cpp'; fi`
core/Makefile.in:1350:tools/mpi_merge_sve-ompss_util.o: tools/ompss_util.cpp
core/Makefile.in:1351:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_merge_sve-ompss_util.o -MD -MP -MF tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Tpo -c -o tools/mpi_merge_sve-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1352:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Tpo tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Po
core/Makefile.in:1353:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/mpi_merge_sve-ompss_util.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1355:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_merge_sve-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1357:tools/mpi_merge_sve-ompss_util.obj: tools/ompss_util.cpp
core/Makefile.in:1358:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_merge_sve-ompss_util.obj -MD -MP -MF tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Tpo -c -o tools/mpi_merge_sve-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1359:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Tpo tools/$(DEPDIR)/mpi_merge_sve-ompss_util.Po
core/Makefile.in:1360:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/mpi_merge_sve-ompss_util.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1362:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_merge_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_merge_sve-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1364:tools/mpi_trace_sve-mpi_trace_sve.o: tools/mpi_trace_sve.cpp
core/Makefile.in:1365:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_trace_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_trace_sve-mpi_trace_sve.o -MD -MP -MF tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Tpo -c -o tools/mpi_trace_sve-mpi_trace_sve.o `test -f 'tools/mpi_trace_sve.cpp' || echo '$(srcdir)/'`tools/mpi_trace_sve.cpp
core/Makefile.in:1366:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Tpo tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Po
core/Makefile.in:1367:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/mpi_trace_sve.cpp' object='tools/mpi_trace_sve-mpi_trace_sve.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1369:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_trace_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_trace_sve-mpi_trace_sve.o `test -f 'tools/mpi_trace_sve.cpp' || echo '$(srcdir)/'`tools/mpi_trace_sve.cpp
core/Makefile.in:1371:tools/mpi_trace_sve-mpi_trace_sve.obj: tools/mpi_trace_sve.cpp
core/Makefile.in:1372:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_trace_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/mpi_trace_sve-mpi_trace_sve.obj -MD -MP -MF tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Tpo -c -o tools/mpi_trace_sve-mpi_trace_sve.obj `if test -f 'tools/mpi_trace_sve.cpp'; then $(CYGPATH_W) 'tools/mpi_trace_sve.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/mpi_trace_sve.cpp'; fi`
core/Makefile.in:1373:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Tpo tools/$(DEPDIR)/mpi_trace_sve-mpi_trace_sve.Po
core/Makefile.in:1374:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/mpi_trace_sve.cpp' object='tools/mpi_trace_sve-mpi_trace_sve.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1376:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(mpi_trace_sve_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/mpi_trace_sve-mpi_trace_sve.obj `if test -f 'tools/mpi_trace_sve.cpp'; then $(CYGPATH_W) 'tools/mpi_trace_sve.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/mpi_trace_sve.cpp'; fi`
core/Makefile.in:1378:tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.o: tools/ompss_mpi_dr_mem.cpp
core/Makefile.in:1379:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_dr_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Tpo -c -o tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.o `test -f 'tools/ompss_mpi_dr_mem.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_dr_mem.cpp
core/Makefile.in:1380:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Tpo tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Po
core/Makefile.in:1381:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_dr_mem.cpp' object='tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1383:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_dr_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.o `test -f 'tools/ompss_mpi_dr_mem.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_dr_mem.cpp
core/Makefile.in:1385:tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.obj: tools/ompss_mpi_dr_mem.cpp
core/Makefile.in:1386:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_dr_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Tpo -c -o tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.obj `if test -f 'tools/ompss_mpi_dr_mem.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_dr_mem.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_dr_mem.cpp'; fi`
core/Makefile.in:1387:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Tpo tools/$(DEPDIR)/ompss_mpi_dr_mem-ompss_mpi_dr_mem.Po
core/Makefile.in:1388:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_dr_mem.cpp' object='tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1390:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_dr_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_dr_mem-ompss_mpi_dr_mem.obj `if test -f 'tools/ompss_mpi_dr_mem.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_dr_mem.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_dr_mem.cpp'; fi`
core/Makefile.in:1392:tools/ompss_mpi_mem-ompss_mpi_mem.o: tools/ompss_mpi_mem.cpp
core/Makefile.in:1393:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_mem-ompss_mpi_mem.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Tpo -c -o tools/ompss_mpi_mem-ompss_mpi_mem.o `test -f 'tools/ompss_mpi_mem.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_mem.cpp
core/Makefile.in:1394:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Tpo tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Po
core/Makefile.in:1395:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_mem.cpp' object='tools/ompss_mpi_mem-ompss_mpi_mem.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1397:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_mem-ompss_mpi_mem.o `test -f 'tools/ompss_mpi_mem.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_mem.cpp
core/Makefile.in:1399:tools/ompss_mpi_mem-ompss_mpi_mem.obj: tools/ompss_mpi_mem.cpp
core/Makefile.in:1400:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_mem-ompss_mpi_mem.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Tpo -c -o tools/ompss_mpi_mem-ompss_mpi_mem.obj `if test -f 'tools/ompss_mpi_mem.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_mem.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_mem.cpp'; fi`
core/Makefile.in:1401:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Tpo tools/$(DEPDIR)/ompss_mpi_mem-ompss_mpi_mem.Po
core/Makefile.in:1402:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_mem.cpp' object='tools/ompss_mpi_mem-ompss_mpi_mem.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1404:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_mem_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_mem-ompss_mpi_mem.obj `if test -f 'tools/ompss_mpi_mem.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_mem.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_mem.cpp'; fi`
core/Makefile.in:1406:tools/ompss_mpi_merge-ompss_mpi_merge.o: tools/ompss_mpi_merge.cpp
core/Makefile.in:1407:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge-ompss_mpi_merge.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Tpo -c -o tools/ompss_mpi_merge-ompss_mpi_merge.o `test -f 'tools/ompss_mpi_merge.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_merge.cpp
core/Makefile.in:1408:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Tpo tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Po
core/Makefile.in:1409:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_merge.cpp' object='tools/ompss_mpi_merge-ompss_mpi_merge.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1411:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge-ompss_mpi_merge.o `test -f 'tools/ompss_mpi_merge.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_merge.cpp
core/Makefile.in:1413:tools/ompss_mpi_merge-ompss_mpi_merge.obj: tools/ompss_mpi_merge.cpp
core/Makefile.in:1414:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge-ompss_mpi_merge.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Tpo -c -o tools/ompss_mpi_merge-ompss_mpi_merge.obj `if test -f 'tools/ompss_mpi_merge.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_merge.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_merge.cpp'; fi`
core/Makefile.in:1415:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Tpo tools/$(DEPDIR)/ompss_mpi_merge-ompss_mpi_merge.Po
core/Makefile.in:1416:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_merge.cpp' object='tools/ompss_mpi_merge-ompss_mpi_merge.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1418:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge-ompss_mpi_merge.obj `if test -f 'tools/ompss_mpi_merge.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_merge.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_merge.cpp'; fi`
core/Makefile.in:1420:tools/ompss_mpi_merge-ompss_util.o: tools/ompss_util.cpp
core/Makefile.in:1421:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge-ompss_util.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Tpo -c -o tools/ompss_mpi_merge-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1422:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Tpo tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Po
core/Makefile.in:1423:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/ompss_mpi_merge-ompss_util.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1425:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1427:tools/ompss_mpi_merge-ompss_util.obj: tools/ompss_util.cpp
core/Makefile.in:1428:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge-ompss_util.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Tpo -c -o tools/ompss_mpi_merge-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1429:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Tpo tools/$(DEPDIR)/ompss_mpi_merge-ompss_util.Po
core/Makefile.in:1430:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/ompss_mpi_merge-ompss_util.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1432:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1434:tools/ompss_mpi_merge_mw-ompss_mpi_merge.o: tools/ompss_mpi_merge.cpp
core/Makefile.in:1435:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge_mw-ompss_mpi_merge.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Tpo -c -o tools/ompss_mpi_merge_mw-ompss_mpi_merge.o `test -f 'tools/ompss_mpi_merge.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_merge.cpp
core/Makefile.in:1436:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Tpo tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Po
core/Makefile.in:1437:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_merge.cpp' object='tools/ompss_mpi_merge_mw-ompss_mpi_merge.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1439:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge_mw-ompss_mpi_merge.o `test -f 'tools/ompss_mpi_merge.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_merge.cpp
core/Makefile.in:1441:tools/ompss_mpi_merge_mw-ompss_mpi_merge.obj: tools/ompss_mpi_merge.cpp
core/Makefile.in:1442:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge_mw-ompss_mpi_merge.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Tpo -c -o tools/ompss_mpi_merge_mw-ompss_mpi_merge.obj `if test -f 'tools/ompss_mpi_merge.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_merge.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_merge.cpp'; fi`
core/Makefile.in:1443:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Tpo tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_mpi_merge.Po
core/Makefile.in:1444:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_merge.cpp' object='tools/ompss_mpi_merge_mw-ompss_mpi_merge.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1446:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge_mw-ompss_mpi_merge.obj `if test -f 'tools/ompss_mpi_merge.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_merge.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_merge.cpp'; fi`
core/Makefile.in:1448:tools/ompss_mpi_merge_mw-ompss_util.o: tools/ompss_util.cpp
core/Makefile.in:1449:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge_mw-ompss_util.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Tpo -c -o tools/ompss_mpi_merge_mw-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1450:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Tpo tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Po
core/Makefile.in:1451:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/ompss_mpi_merge_mw-ompss_util.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1453:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge_mw-ompss_util.o `test -f 'tools/ompss_util.cpp' || echo '$(srcdir)/'`tools/ompss_util.cpp
core/Makefile.in:1455:tools/ompss_mpi_merge_mw-ompss_util.obj: tools/ompss_util.cpp
core/Makefile.in:1456:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_merge_mw-ompss_util.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Tpo -c -o tools/ompss_mpi_merge_mw-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1457:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Tpo tools/$(DEPDIR)/ompss_mpi_merge_mw-ompss_util.Po
core/Makefile.in:1458:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_util.cpp' object='tools/ompss_mpi_merge_mw-ompss_util.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1460:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_merge_mw_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_merge_mw-ompss_util.obj `if test -f 'tools/ompss_util.cpp'; then $(CYGPATH_W) 'tools/ompss_util.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_util.cpp'; fi`
core/Makefile.in:1462:tools/ompss_mpi_perf-ompss_mpi_perf.o: tools/ompss_mpi_perf.cpp
core/Makefile.in:1463:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_perf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_perf-ompss_mpi_perf.o -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Tpo -c -o tools/ompss_mpi_perf-ompss_mpi_perf.o `test -f 'tools/ompss_mpi_perf.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_perf.cpp
core/Makefile.in:1464:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Tpo tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Po
core/Makefile.in:1465:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_perf.cpp' object='tools/ompss_mpi_perf-ompss_mpi_perf.o' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1467:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_perf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_perf-ompss_mpi_perf.o `test -f 'tools/ompss_mpi_perf.cpp' || echo '$(srcdir)/'`tools/ompss_mpi_perf.cpp
core/Makefile.in:1469:tools/ompss_mpi_perf-ompss_mpi_perf.obj: tools/ompss_mpi_perf.cpp
core/Makefile.in:1470:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_perf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tools/ompss_mpi_perf-ompss_mpi_perf.obj -MD -MP -MF tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Tpo -c -o tools/ompss_mpi_perf-ompss_mpi_perf.obj `if test -f 'tools/ompss_mpi_perf.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_perf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_perf.cpp'; fi`
core/Makefile.in:1471:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Tpo tools/$(DEPDIR)/ompss_mpi_perf-ompss_mpi_perf.Po
core/Makefile.in:1472:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tools/ompss_mpi_perf.cpp' object='tools/ompss_mpi_perf-ompss_mpi_perf.obj' libtool=no @AMDEPBACKSLASH@
core/Makefile.in:1474:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(ompss_mpi_perf_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tools/ompss_mpi_perf-ompss_mpi_perf.obj `if test -f 'tools/ompss_mpi_perf.cpp'; then $(CYGPATH_W) 'tools/ompss_mpi_perf.cpp'; else $(CYGPATH_W) '$(srcdir)/tools/ompss_mpi_perf.cpp'; fi`
core/Makefile.in:1476:mostlyclean-libtool:
core/Makefile.in:1477:	-rm -f *.lo
core/Makefile.in:1479:clean-libtool:
core/Makefile.in:1480:	-rm -rf .libs _libs
core/Makefile.in:1481:	-rm -rf engine/.libs engine/_libs
core/Makefile.in:1482:	-rm -rf logic/memory/.libs logic/memory/_libs
core/Makefile.in:1483:	-rm -rf logic/memory/policy/.libs logic/memory/policy/_libs
core/Makefile.in:1484:	-rm -rf modules/cpu/.libs modules/cpu/_libs
core/Makefile.in:1485:	-rm -rf modules/cpu/models/.libs modules/cpu/models/_libs
core/Makefile.in:1486:	-rm -rf stats/.libs stats/_libs
core/Makefile.in:1487:	-rm -rf trace/dr/.libs trace/dr/_libs
core/Makefile.in:1488:	-rm -rf utils/.libs utils/_libs
core/Makefile.in:1489:	-rm -rf utils/tsmpi/.libs utils/tsmpi/_libs
core/Makefile.in:1490:install-nobase_dataDATA: $(nobase_data_DATA)
core/Makefile.in:1492:	@list='$(nobase_data_DATA)'; test -n "$(datadir)" || list=; \
core/Makefile.in:1493:	if test -n "$$list"; then \
core/Makefile.in:1499:	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
core/Makefile.in:1501:	  test -z "$$xfiles" || { \
core/Makefile.in:1509:uninstall-nobase_dataDATA:
core/Makefile.in:1511:	@list='$(nobase_data_DATA)'; test -n "$(datadir)" || list=; \
core/Makefile.in:1514:install-nobase_libnextsim_engine_laHEADERS: $(nobase_libnextsim_engine_la_HEADERS)
core/Makefile.in:1516:	@list='$(nobase_libnextsim_engine_la_HEADERS)'; test -n "$(libnextsim_engine_ladir)" || list=; \
core/Makefile.in:1517:	if test -n "$$list"; then \
core/Makefile.in:1523:	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
core/Makefile.in:1525:	  test -z "$$xfiles" || { \
core/Makefile.in:1533:uninstall-nobase_libnextsim_engine_laHEADERS:
core/Makefile.in:1535:	@list='$(nobase_libnextsim_engine_la_HEADERS)'; test -n "$(libnextsim_engine_ladir)" || list=; \
core/Makefile.in:1538:install-nobase_libnextsim_utils_laHEADERS: $(nobase_libnextsim_utils_la_HEADERS)
core/Makefile.in:1540:	@list='$(nobase_libnextsim_utils_la_HEADERS)'; test -n "$(libnextsim_utils_ladir)" || list=; \
core/Makefile.in:1541:	if test -n "$$list"; then \
core/Makefile.in:1547:	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
core/Makefile.in:1549:	  test -z "$$xfiles" || { \
core/Makefile.in:1557:uninstall-nobase_libnextsim_utils_laHEADERS:
core/Makefile.in:1559:	@list='$(nobase_libnextsim_utils_la_HEADERS)'; test -n "$(libnextsim_utils_ladir)" || list=; \
core/Makefile.in:1564:	$(am__define_uniq_tagged_files); mkid -fID $$unique
core/Makefile.in:1565:tags: tags-am
core/Makefile.in:1568:tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
core/Makefile.in:1573:	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
core/Makefile.in:1574:	  test -n "$$unique" || unique=$$empty_fix; \
core/Makefile.in:1575:	  if test $$# -gt 0; then \
core/Makefile.in:1583:ctags: ctags-am
core/Makefile.in:1586:ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
core/Makefile.in:1588:	test -z "$(CTAGS_ARGS)$$unique" \
core/Makefile.in:1595:	  && gtags -i $(GTAGS_ARGS) "$$here"
core/Makefile.in:1596:cscopelist: cscopelist-am
core/Makefile.in:1598:cscopelist-am: $(am__tagged_files)
core/Makefile.in:1605:	  if test -f "$$i"; then \
core/Makefile.in:1612:distclean-tags:
core/Makefile.in:1613:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
core/Makefile.in:1620:	  sed -e "s|^$$srcdirstrip/||;t" \
core/Makefile.in:1621:	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
core/Makefile.in:1625:			   sort -u` ;; \
core/Makefile.in:1628:	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
core/Makefile.in:1629:	  if test -d $$d/$$file; then \
core/Makefile.in:1630:	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
core/Makefile.in:1631:	    if test -d "$(distdir)/$$file"; then \
core/Makefile.in:1632:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
core/Makefile.in:1634:	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
core/Makefile.in:1635:	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
core/Makefile.in:1636:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
core/Makefile.in:1638:	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
core/Makefile.in:1640:	    test -f "$(distdir)/$$file" \
core/Makefile.in:1641:	    || cp -p $$d/$$file "$(distdir)/$$file" \
core/Makefile.in:1645:check-am: all-am
core/Makefile.in:1646:check: check-am
core/Makefile.in:1647:all-am: Makefile $(LTLIBRARIES) $(PROGRAMS) $(DATA) $(HEADERS)
core/Makefile.in:1648:install-binPROGRAMS: install-libLTLIBRARIES
core/Makefile.in:1652:	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
core/Makefile.in:1654:install: install-am
core/Makefile.in:1655:install-exec: install-exec-am
core/Makefile.in:1656:install-data: install-data-am
core/Makefile.in:1657:uninstall: uninstall-am
core/Makefile.in:1659:install-am: all-am
core/Makefile.in:1660:	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
core/Makefile.in:1662:installcheck: installcheck-am
core/Makefile.in:1663:install-strip:
core/Makefile.in:1664:	if test -z '$(STRIP)'; then \
core/Makefile.in:1666:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
core/Makefile.in:1670:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
core/Makefile.in:1673:mostlyclean-generic:
core/Makefile.in:1675:clean-generic:
core/Makefile.in:1677:distclean-generic:
core/Makefile.in:1678:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
core/Makefile.in:1679:	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
core/Makefile.in:1680:	-rm -f engine/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1681:	-rm -f engine/$(am__dirstamp)
core/Makefile.in:1682:	-rm -f logic/memory/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1683:	-rm -f logic/memory/$(am__dirstamp)
core/Makefile.in:1684:	-rm -f logic/memory/policy/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1685:	-rm -f logic/memory/policy/$(am__dirstamp)
core/Makefile.in:1686:	-rm -f modules/cpu/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1687:	-rm -f modules/cpu/$(am__dirstamp)
core/Makefile.in:1688:	-rm -f modules/cpu/models/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1689:	-rm -f modules/cpu/models/$(am__dirstamp)
core/Makefile.in:1690:	-rm -f stats/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1691:	-rm -f stats/$(am__dirstamp)
core/Makefile.in:1692:	-rm -f tools/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1693:	-rm -f tools/$(am__dirstamp)
core/Makefile.in:1694:	-rm -f trace/dr/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1695:	-rm -f trace/dr/$(am__dirstamp)
core/Makefile.in:1696:	-rm -f utils/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1697:	-rm -f utils/$(am__dirstamp)
core/Makefile.in:1698:	-rm -f utils/tsmpi/$(DEPDIR)/$(am__dirstamp)
core/Makefile.in:1699:	-rm -f utils/tsmpi/$(am__dirstamp)
core/Makefile.in:1701:maintainer-clean-generic:
core/Makefile.in:1704:clean: clean-am
core/Makefile.in:1706:clean-am: clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
core/Makefile.in:1707:	clean-libtool clean-noinstLTLIBRARIES mostlyclean-am
core/Makefile.in:1709:distclean: distclean-am
core/Makefile.in:1710:	-rm -rf engine/$(DEPDIR) logic/memory/$(DEPDIR) logic/memory/policy/$(DEPDIR) modules/cpu/$(DEPDIR) modules/cpu/models/$(DEPDIR) stats/$(DEPDIR) tools/$(DEPDIR) trace/dr/$(DEPDIR) utils/$(DEPDIR) utils/tsmpi/$(DEPDIR)
core/Makefile.in:1711:	-rm -f Makefile
core/Makefile.in:1712:distclean-am: clean-am distclean-compile distclean-generic \
core/Makefile.in:1713:	distclean-tags
core/Makefile.in:1715:dvi: dvi-am
core/Makefile.in:1717:dvi-am:
core/Makefile.in:1719:html: html-am
core/Makefile.in:1721:html-am:
core/Makefile.in:1723:info: info-am
core/Makefile.in:1725:info-am:
core/Makefile.in:1727:install-data-am: install-nobase_dataDATA \
core/Makefile.in:1728:	install-nobase_libnextsim_engine_laHEADERS \
core/Makefile.in:1729:	install-nobase_libnextsim_utils_laHEADERS
core/Makefile.in:1731:install-dvi: install-dvi-am
core/Makefile.in:1733:install-dvi-am:
core/Makefile.in:1735:install-exec-am: install-binPROGRAMS install-libLTLIBRARIES
core/Makefile.in:1737:install-html: install-html-am
core/Makefile.in:1739:install-html-am:
core/Makefile.in:1741:install-info: install-info-am
core/Makefile.in:1743:install-info-am:
core/Makefile.in:1745:install-man:
core/Makefile.in:1747:install-pdf: install-pdf-am
core/Makefile.in:1749:install-pdf-am:
core/Makefile.in:1751:install-ps: install-ps-am
core/Makefile.in:1753:install-ps-am:
core/Makefile.in:1755:installcheck-am:
core/Makefile.in:1757:maintainer-clean: maintainer-clean-am
core/Makefile.in:1758:	-rm -rf engine/$(DEPDIR) logic/memory/$(DEPDIR) logic/memory/policy/$(DEPDIR) modules/cpu/$(DEPDIR) modules/cpu/models/$(DEPDIR) stats/$(DEPDIR) tools/$(DEPDIR) trace/dr/$(DEPDIR) utils/$(DEPDIR) utils/tsmpi/$(DEPDIR)
core/Makefile.in:1759:	-rm -f Makefile
core/Makefile.in:1760:maintainer-clean-am: distclean-am maintainer-clean-generic
core/Makefile.in:1762:mostlyclean: mostlyclean-am
core/Makefile.in:1764:mostlyclean-am: mostlyclean-compile mostlyclean-generic \
core/Makefile.in:1765:	mostlyclean-libtool
core/Makefile.in:1767:pdf: pdf-am
core/Makefile.in:1769:pdf-am:
core/Makefile.in:1771:ps: ps-am
core/Makefile.in:1773:ps-am:
core/Makefile.in:1775:uninstall-am: uninstall-binPROGRAMS uninstall-libLTLIBRARIES \
core/Makefile.in:1776:	uninstall-nobase_dataDATA \
core/Makefile.in:1777:	uninstall-nobase_libnextsim_engine_laHEADERS \
core/Makefile.in:1778:	uninstall-nobase_libnextsim_utils_laHEADERS
core/Makefile.in:1780:.MAKE: install-am install-strip
core/Makefile.in:1782:.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
core/Makefile.in:1783:	clean-binPROGRAMS clean-generic clean-libLTLIBRARIES \
core/Makefile.in:1784:	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
core/Makefile.in:1785:	ctags-am distclean distclean-compile distclean-generic \
core/Makefile.in:1786:	distclean-libtool distclean-tags distdir dvi dvi-am html \
core/Makefile.in:1787:	html-am info info-am install install-am install-binPROGRAMS \
core/Makefile.in:1788:	install-data install-data-am install-dvi install-dvi-am \
core/Makefile.in:1789:	install-exec install-exec-am install-html install-html-am \
core/Makefile.in:1790:	install-info install-info-am install-libLTLIBRARIES \
core/Makefile.in:1791:	install-man install-nobase_dataDATA \
core/Makefile.in:1792:	install-nobase_libnextsim_engine_laHEADERS \
core/Makefile.in:1793:	install-nobase_libnextsim_utils_laHEADERS install-pdf \
core/Makefile.in:1794:	install-pdf-am install-ps install-ps-am install-strip \
core/Makefile.in:1795:	installcheck installcheck-am installdirs maintainer-clean \
core/Makefile.in:1796:	maintainer-clean-generic mostlyclean mostlyclean-compile \
core/Makefile.in:1797:	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
core/Makefile.in:1798:	tags tags-am uninstall uninstall-am uninstall-binPROGRAMS \
core/Makefile.in:1799:	uninstall-libLTLIBRARIES uninstall-nobase_dataDATA \
core/Makefile.in:1800:	uninstall-nobase_libnextsim_engine_laHEADERS \
core/Makefile.in:1801:	uninstall-nobase_libnextsim_utils_laHEADERS
core/modules/memory/DRAM.h:121:#include "DRAM-impl.h"
core/modules/memory/Dramsim2Controller-impl.h:90:        name_stream << path << "/" << prefix << "-";
core/modules/memory/Dramsim2Controller-impl.h:128:    input_buffer_size_(config.get_value<std::size_t>("input-buffer")),
core/modules/memory/Dramsim2Controller-impl.h:136:    this->instrumentation_id_ = sim.get_instrumentation().add_module(*this);
core/modules/memory/Dramsim2Controller-impl.h:147:        mmu_->register_dram_size(config_.megs_of_ram_ * 1024 * 1024);
core/modules/memory/Dramsim2Controller-impl.h:169:    sim::engine::cycles_t current_cycle = this->get_simulator().get_clock();
core/modules/memory/Dramsim2Controller-impl.h:246:            request_buffer_[addr].emplace_back(this->get_simulator().get_clock(), typename Message::Request(request));
core/modules/memory/Dramsim2Controller-impl.h:248:                mmu_->notify_access(request);
core/modules/memory/Dramsim2Controller-impl.h:256:    stats_.occupancy.sample(/*input_buffer_.size() +*/ request_buffer_.size(), this->get_simulator().get_clock());
core/modules/memory/Dramsim2Controller-impl.h:259:        this->set_module_activity(engine::NEXT);
core/modules/memory/Dramsim2Controller-impl.h:261:        this->set_module_activity(engine::NEVER);
core/modules/memory/Dramsim2Controller-impl.h:306:    stats_.access_time.sample(this->get_simulator().get_clock() - request_buffer_[addr].front().time_);
core/modules/memory/Dramsim2Controller-impl.h:309:    assert(this->get_simulator().get_clock() > request_buffer_[addr].front().time_);
core/modules/memory/Dramsim2Controller-impl.h:311:    stats_.latency += this->get_simulator().get_clock() - request_buffer_[addr].front().time_;
core/modules/memory/Dramsim2Controller-impl.h:334:            this->get_simulator().get_instrumentation();
core/modules/memory/Dramsim2Controller-impl.h:335:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/Dramsim2Controller-impl.h:383:    Log::warning() << " - Have " << input_buffer_.size() << " requests in queue:";
core/modules/memory/Dramsim2Controller-impl.h:391:            Log::warning() << "   - Due on cycle " << sub.time_ << ", req:  " << sub.data_;
core/modules/memory/Dramsim2Controller-impl.h:394:    Log::warning() << " - Have " << output_buffer_.size() << " acks ready to be sent:";
Binary file core/modules/memory/.TLB-impl.h.swp matches
core/modules/memory/CacheStats-impl.h:65:        victim_read(owner, "victim-read"),
core/modules/memory/CacheStats-impl.h:66:        victim_write(owner, "victim-write"),
core/modules/memory/CacheStats-impl.h:68:        read_not_hit(owner, "read-not-hit"),
core/modules/memory/CacheStats-impl.h:69:        write_not_hit(owner, "write-not-hit"),
core/modules/memory/CacheStats-impl.h:70:        victim_swap(owner, "victim-swap"),
core/modules/memory/CacheStats-impl.h:71:        victim_evict(owner, "victim-evict"),
core/modules/memory/CacheStats-impl.h:72:        victim_insert_on_read(owner, "victim-insert_on_read"),
core/modules/memory/CacheStats-impl.h:73:        victim_insert_on_write(owner, "victim-insert_on_write"),
core/modules/memory/CacheStats-impl.h:74:        victim_insert_on_evict(owner, "victim-insert_on_evict"),
core/modules/memory/CacheStats-impl.h:75:        miss_time(owner, "miss-time"),
core/modules/memory/CacheStats-impl.h:76:        requests_received(owner, "requests-received"),
core/modules/memory/CacheStats-impl.h:77:        acks_received(owner, "acks-received"),
core/modules/memory/CacheStats-impl.h:78:        requests_sent(owner, "requests-sent"),
core/modules/memory/CacheStats-impl.h:79:        acks_sent(owner, "acks-sent"),
core/modules/memory/CacheStats-impl.h:80:        requests_processed(owner, "requests-processed"),
core/modules/memory/CacheStats-impl.h:81:        setup_task_io_requests(owner, "setup-task-io-requests"),
core/modules/memory/CacheStats-impl.h:82:        mshr_overcapacity_events(owner, "mshr-overcapacity-events"),
Binary file core/modules/memory/.DMA-impl.h.swp matches
core/modules/memory/TLB-impl.h:57:    page_size_(config.get_value<std::size_t>("page-size")),
core/modules/memory/TLB-impl.h:72:        std::cout << "ERROR - PENDING OPERATIONS IN TLB:" << cpu_id_ << std::endl;
core/modules/memory/TLB-impl.h:81:                      << i->data_.get_tag() << ")" << std::endl;
core/modules/memory/TLB-impl.h:130:            pending_translations_buffer_.emplace_back(this->get_simulator().get_clock(),
core/modules/memory/TLB-impl.h:139:        engine::addr_t physical_page = physical_addr & (~(page_size_ - 1));
core/modules/memory/TLB-impl.h:145:            i->second.acks_pending_--;
core/modules/memory/TLB-impl.h:146:            if (i->second.acks_pending_ == 0) {
core/modules/memory/TLB-impl.h:153:            i->second.requests_sent_--;
core/modules/memory/TLB-impl.h:154:            if (0 == i->second.requests_sent_) {
core/modules/memory/TLB-impl.h:155:                if (i->second.clear_)
core/modules/memory/TLB-impl.h:169:        this->set_module_activity(engine::NEXT);
core/modules/memory/TLB-impl.h:171:        this->set_module_activity(engine::NEVER);
core/modules/memory/TLB-impl.h:208:        i->second.clear_ = true;
core/modules/memory/TLB-impl.h:211:        this->set_module_activity(engine::NEXT);
core/modules/memory/TLB-impl.h:238:    engine::addr_t physical_page = physical_addr & (~(page_size_ - 1));
core/modules/memory/TLB-impl.h:242:        i->second.requests_sent_++;
core/modules/memory/TLB-impl.h:256:        engine::addr_t* translation = mmu_.translate(cpu_id_, i->data_.get_tag(), false);
core/modules/memory/TLB-impl.h:258:            send_translated_request(i->data_, *translation);
core/modules/memory/TLB-impl.h:260:            translation_hold_back_time_.sample(this->get_simulator().get_clock() - i->time_);
core/modules/memory/TLB-impl.h:268:        this->set_module_activity(engine::NEXT);
core/modules/memory/Cache-impl.h:63:    out_(Output(*this, cache_config.get_value<std::size_t>("num-ports")))
core/modules/memory/Cache-impl.h:66:    this->instrumentation_id_ = simulator.get_instrumentation().add_module(*this);
core/modules/memory/Cache-impl.h:105:            if (input_buffer_.front().time_ <= this->get_simulator().get_clock()) {
core/modules/memory/Cache-impl.h:111:                    stall_start_cycle_ = this->get_simulator().get_clock();
core/modules/memory/Cache-impl.h:115:                    vulnerability_->mem_access(this->get_simulator().get_clock(), req);
core/modules/memory/Cache-impl.h:137:    Log::debug() << "[CACHE] ID " <<  cache_id_ << " sent " << c << " REQs at " << this->get_simulator().get_clock();
core/modules/memory/Cache-impl.h:145:    Log::debug() << "[CACHE] ID " <<  cache_id_ << " sent " << c << " ACKs at " << this->get_simulator().get_clock();
core/modules/memory/Cache-impl.h:149:        engine::cycles_t advance = this->get_simulator().get_clock() + 1 - stall_start_cycle_;
core/modules/memory/Cache-impl.h:174:                input_buffer_.emplace_back(this->get_simulator().get_clock() + latency_, std::move(req));
core/modules/memory/Cache-impl.h:191:        engine::cycles_t advance = this->get_simulator().get_clock() + 1 - stall_start_cycle_;
core/modules/memory/Cache-impl.h:212:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/Cache-impl.h:270:            this->get_simulator().get_instrumentation();
core/modules/memory/Cache-impl.h:340:            this->instrumentation_id_,
core/modules/memory/Cache-impl.h:413:    Log::warning() << " - Last write request failed? " << write_request_failed_;
core/modules/memory/Cache-impl.h:415:        Log::warning() << " - Request pending at " << req.time_ << " from port " << req.data_.first
core/modules/memory/Cache-impl.h:431:        this->set_module_activity(engine::NEXT);
core/modules/memory/Cache-impl.h:437:        this->set_module_activity(engine::NEXT);
core/modules/memory/Cache-impl.h:444:            this->set_module_activity(engine::NEXT);
core/modules/memory/Cache-impl.h:459:        this->set_module_activity(engine::NEVER);
core/modules/memory/Cache-impl.h:460:    } else if (next_cycle <= this->get_simulator().get_clock()) {
core/modules/memory/Cache-impl.h:462:        this->set_module_activity(engine::NEXT);
core/modules/memory/Cache-impl.h:464:        this->set_module_activity(next_cycle - this->get_simulator().get_clock());
core/modules/memory/Cache.h:116:#include "Cache-impl.h"
Binary file core/modules/memory/.RamulatorController-impl.h.swp matches
core/modules/memory/DMA.h:96:#include "DMA-impl.h"
core/modules/memory/DMA-impl.h:44:    line_size_(config.get_value<unsigned>("line-size")),
core/modules/memory/DMA-impl.h:45:    page_size_(config.get_value<unsigned>("page-size")),
core/modules/memory/DMA-impl.h:110:        engine::addr_t page_base_addr = ack_req.get_tag() & (~(page_size_ - 1));
core/modules/memory/DMA-impl.h:116:                memcpy_request_t memcpy_request = *(it->second);
core/modules/memory/DMA-impl.h:118:                        memcpy_request.destination_addr + (ack_req.get_tag() - memcpy_request.source_addr),
core/modules/memory/DMA-impl.h:127:                memcpy_request_t memcpy_request = *(it->second);
core/modules/memory/DMA-impl.h:128:                (it->second)->write_ack_count++;
core/modules/memory/DMA-impl.h:129:                if ((it->second)->write_ack_count == memcpy_request.memcpy_request_size / line_size_) {
core/modules/memory/DMA-impl.h:133:                    memcpy_requests_.erase(it->second);
core/modules/memory/DMA-impl.h:146:        this->set_module_activity(engine::NEVER);
core/modules/memory/DMA-impl.h:148:        this->set_module_activity(engine::NEXT);
core/modules/memory/DMA-impl.h:173:    engine::addr_t page_base_addr = ack.get_tag() & (~(page_size_ - 1));
core/modules/memory/DMA-impl.h:195:    Log::debug2() << this->get_simulator().get_clock() << ":memcpy_start:" << source_addr
core/modules/memory/DMA-impl.h:199:    typename memcpy_request_list_t::iterator it = --memcpy_requests_.end();
core/modules/memory/DMA-impl.h:207:        this->set_module_activity(engine::NEXT);
core/modules/memory/PROFET.h:121:#include "PROFET-impl.h"
core/modules/memory/Perfect-impl.h:52:    max_input_buffer_size_(conf.get_value<std::size_t>("input-buffer")),
core/modules/memory/Perfect-impl.h:54:    max_concurrent_(ceil(conf.get_value<float>("bandwidth") * latency_ / (conf.get_value<unsigned>("request-size") *
core/modules/memory/Perfect-impl.h:62:    this->instrumentation_id_ = sim.get_instrumentation().add_module(*this);
core/modules/memory/Perfect-impl.h:65:        exit(-1);
core/modules/memory/Perfect-impl.h:76:        stats_.vulnerability_->finalize(this->get_simulator().get_clock());
core/modules/memory/Perfect-impl.h:96:    if (pending_.front().time_ > this->get_simulator().get_clock()) {
core/modules/memory/Perfect-impl.h:102:            pending_.front().time_ <= this->get_simulator().get_clock()) {
core/modules/memory/Perfect-impl.h:130:            stats_.vulnerability_->mem_access(this->get_simulator().get_clock(), req);
core/modules/memory/Perfect-impl.h:137:        pending_.emplace_back(this->get_simulator().get_clock() + latency_, std::move(req));
core/modules/memory/Perfect-impl.h:140:    stats_.occupancy.sample(pending_.size(), this->get_simulator().get_clock());
core/modules/memory/Perfect-impl.h:145:        last_nonblocked_cycle_ = this->get_simulator().get_clock() - 1;
core/modules/memory/Perfect-impl.h:150:        stats_.blocked_cycles += this->get_simulator().get_clock() - last_nonblocked_cycle_ - 1;
core/modules/memory/Perfect-impl.h:176:            this->get_simulator().get_instrumentation();
core/modules/memory/Perfect-impl.h:177:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/Perfect-impl.h:236:    Log::warning() << " - Have " << input_buffer_.size() << " requests in queue:";
core/modules/memory/Perfect-impl.h:240:    Log::warning() << " - Have " << pending_.size() << " requests being processed:";
core/modules/memory/Perfect-impl.h:252:        this->set_module_activity(engine::NEXT);
core/modules/memory/Perfect-impl.h:255:        this->set_module_activity(engine::NEXT);
core/modules/memory/Perfect-impl.h:256:    } else if (pending_.size() > 0 and pending_.front().time_ <= this->get_simulator().get_clock()) {
core/modules/memory/Perfect-impl.h:258:        this->set_module_activity(engine::NEXT);
core/modules/memory/Perfect-impl.h:261:        this->set_module_activity(pending_.front().time_ - this->get_simulator().get_clock());
core/modules/memory/Perfect-impl.h:264:        this->set_module_activity(engine::NEVER);
core/modules/memory/Dramsim2Controller.h:112:#include "Dramsim2Controller-impl.h"
core/modules/memory/PROFET-impl.h:52:    max_input_buffer_size_(conf.get_value<std::size_t>("input-buffer")),
core/modules/memory/PROFET-impl.h:54:    max_concurrent_(ceil(conf.get_value<float>("bandwidth") * latency_ / (conf.get_value<unsigned>("request-size") *
core/modules/memory/PROFET-impl.h:62:    this->instrumentation_id_ = sim.get_instrumentation().add_module(*this);
core/modules/memory/PROFET-impl.h:65:        exit(-1);
core/modules/memory/PROFET-impl.h:76:        stats_.vulnerability_->finalize(this->get_simulator().get_clock());
core/modules/memory/PROFET-impl.h:96:    if (pending_.front().time_ > this->get_simulator().get_clock()) {
core/modules/memory/PROFET-impl.h:102:            pending_.front().time_ <= this->get_simulator().get_clock()) {
core/modules/memory/PROFET-impl.h:130:            stats_.vulnerability_->mem_access(this->get_simulator().get_clock(), req);
core/modules/memory/PROFET-impl.h:137:        pending_.emplace_back(this->get_simulator().get_clock() + latency_, std::move(req));
core/modules/memory/PROFET-impl.h:140:    stats_.occupancy.sample(pending_.size(), this->get_simulator().get_clock());
core/modules/memory/PROFET-impl.h:145:        last_nonblocked_cycle_ = this->get_simulator().get_clock() - 1;
core/modules/memory/PROFET-impl.h:150:        stats_.blocked_cycles += this->get_simulator().get_clock() - last_nonblocked_cycle_ - 1;
core/modules/memory/PROFET-impl.h:176:            this->get_simulator().get_instrumentation();
core/modules/memory/PROFET-impl.h:177:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/PROFET-impl.h:236:    Log::warning() << " - Have " << input_buffer_.size() << " requests in queue:";
core/modules/memory/PROFET-impl.h:240:    Log::warning() << " - Have " << pending_.size() << " requests being processed:";
core/modules/memory/PROFET-impl.h:252:        this->set_module_activity(engine::NEXT);
core/modules/memory/PROFET-impl.h:255:        this->set_module_activity(engine::NEXT);
core/modules/memory/PROFET-impl.h:256:    } else if (pending_.size() > 0 and pending_.front().time_ <= this->get_simulator().get_clock()) {
core/modules/memory/PROFET-impl.h:258:        this->set_module_activity(engine::NEXT);
core/modules/memory/PROFET-impl.h:261:        this->set_module_activity(pending_.front().time_ - this->get_simulator().get_clock());
core/modules/memory/PROFET-impl.h:264:        this->set_module_activity(engine::NEVER);
core/modules/memory/Perfect.h:121:#include "Perfect-impl.h"
core/modules/memory/types.h:73:#include "types-impl.h"
core/modules/memory/CacheStats.h:107:#include "CacheStats-impl.h"
core/modules/memory/RamulatorController-impl.h:73:    assert(fd != -1);
core/modules/memory/RamulatorController-impl.h:115:    Stats::statlist.output(config.get_value<std::string>("full-path"));
core/modules/memory/RamulatorController-impl.h:120:    mem_.reset(name_to_func.at(std_name)(ramulator_config_, config_L3.get_value<unsigned>("line-size")));
core/modules/memory/RamulatorController-impl.h:121:    frequency_ratio_ = sim.get_config().get_value<unsigned>("cpu_frequency") * (mem_->clk_ns() / 1000.);
core/modules/memory/RamulatorController-impl.h:122:    this->instrumentation_id_ = sim.get_instrumentation().add_module(*this);
core/modules/memory/RamulatorController-impl.h:132:    mem_->finish();
core/modules/memory/RamulatorController-impl.h:136:        stats_.vulnerability_->finalize(this->get_simulator().get_clock());
core/modules/memory/RamulatorController-impl.h:146:    mem_->tick();
core/modules/memory/RamulatorController-impl.h:153:    sim::engine::cycles_t current_cycle = this->get_simulator().get_clock();
core/modules/memory/RamulatorController-impl.h:154:    while (current_cycle > static_cast<sim::engine::cycles_t>(dram_cycle_ * frequency_ratio_ + 1e-9)) {
core/modules/memory/RamulatorController-impl.h:181:        if (core_id > num_cpus_ or core_id < -1) {
core/modules/memory/RamulatorController-impl.h:183:        } else if (core_id == -1) {
core/modules/memory/RamulatorController-impl.h:184:            core_id = ramulator_config_.get_core_num() - 1;
core/modules/memory/RamulatorController-impl.h:192:                accepted = mem_->send(req_read);
core/modules/memory/RamulatorController-impl.h:199:                accepted = mem_->send(req_write);
core/modules/memory/RamulatorController-impl.h:210:            request_buffer_[addr].emplace_back(this->get_simulator().get_clock(), typename Message::Request(request));
core/modules/memory/RamulatorController-impl.h:212:                mmu_->notify_access(request);
core/modules/memory/RamulatorController-impl.h:215:                stats_.vulnerability_->mem_access(this->get_simulator().get_clock(), request);
core/modules/memory/RamulatorController-impl.h:225:        last_nonblocked_cycle_ = this->get_simulator().get_clock() - 1;
core/modules/memory/RamulatorController-impl.h:230:        stats_.blocked_cycles += this->get_simulator().get_clock() - last_nonblocked_cycle_ - 1;
core/modules/memory/RamulatorController-impl.h:267:    stats_.occupancy.sample(request_buffer_.size(), this->get_simulator().get_clock());
core/modules/memory/RamulatorController-impl.h:268:    stats_.read_occupancy.sample(pending_reads_, this->get_simulator().get_clock());
core/modules/memory/RamulatorController-impl.h:269:    stats_.write_occupancy.sample(pending_writes_, this->get_simulator().get_clock());
core/modules/memory/RamulatorController-impl.h:315:    if (this->get_simulator().get_clock() < sent_requests.front().time_) {
core/modules/memory/RamulatorController-impl.h:320:    engine::cycles_t latency = this->get_simulator().get_clock() - sent_requests.front().time_;
core/modules/memory/RamulatorController-impl.h:324:        pending_writes_--;
core/modules/memory/RamulatorController-impl.h:327:        pending_reads_--;
core/modules/memory/RamulatorController-impl.h:335:          this->get_simulator().get_instrumentation();
core/modules/memory/RamulatorController-impl.h:336://    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/RamulatorController-impl.h:341:            this->get_simulator().get_clock(),
core/modules/memory/RamulatorController-impl.h:374:            this->get_simulator().get_instrumentation();
core/modules/memory/RamulatorController-impl.h:375:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/RamulatorController-impl.h:433:    Log::warning() << " - Have " << input_buffer_.size() << " requests in queue:";
core/modules/memory/RamulatorController-impl.h:438:    Log::warning() << "Simulator at " << this->get_simulator().get_clock() << " and DRAM at "
core/modules/memory/RamulatorController-impl.h:439:                   <<  static_cast<sim::engine::cycles_t>(dram_cycle_ * frequency_ratio_ + 1e-9);
core/modules/memory/RamulatorController-impl.h:445:            Log::warning() << "   - Due on cycle " << sub.time_ << ", req:  " << sub.data_;
core/modules/memory/RamulatorController-impl.h:448:    Log::warning() << " - Have " << output_buffer_.size() << " acks ready to be sent:";
core/modules/memory/RamulatorController-impl.h:459:     *  - We have pending Requests on the buffer (input_buffer).
core/modules/memory/RamulatorController-impl.h:460:     *  - We have pending ACKs (output_buffer).
core/modules/memory/RamulatorController-impl.h:461:     *  - We have Request being processed on Ramulator (request_buffer)
core/modules/memory/RamulatorController-impl.h:462:     *  - We have pending Requests on the input ports (in_).
core/modules/memory/RamulatorController-impl.h:467:        this->set_module_activity(engine::NEXT);
core/modules/memory/RamulatorController-impl.h:469:        this->set_module_activity(engine::NEVER);
core/modules/memory/RamulatorController.h:75:        {"SALP-1", &ramulator::MemoryFactory<ramulator::SALP>::create},
core/modules/memory/RamulatorController.h:76:        {"SALP-2", &ramulator::MemoryFactory<ramulator::SALP>::create},
core/modules/memory/RamulatorController.h:77:        {"SALP-MASA", &ramulator::MemoryFactory<ramulator::SALP>::create}
core/modules/memory/RamulatorController.h:182:#include "RamulatorController-impl.h"
core/modules/memory/DRAM-impl.h:50:    frequency_divider_(config.get_value<float>("frequency-divider")),
core/modules/memory/DRAM-impl.h:55:    std::string access_mask = config.get_value<std::string>("access-mask");
core/modules/memory/DRAM-impl.h:67:    if (config.key_exists("addr-range-start"))
core/modules/memory/DRAM-impl.h:68:        addr_range_start_ = stoull(config.get_value<std::string>("addr-range-start"), NULL, 16);
core/modules/memory/DRAM-impl.h:72:    if (config.key_exists("addr-range-end"))
core/modules/memory/DRAM-impl.h:73:        addr_range_end_ = stoull(config.get_value<std::string>("addr-range-end"), NULL, 16);
core/modules/memory/DRAM-impl.h:85:    input_buffer_size_(config.get_value<std::size_t>("input-buffer")),
core/modules/memory/DRAM-impl.h:92:    this->instrumentation_id_ = sim.get_instrumentation().add_module(*this);
core/modules/memory/DRAM-impl.h:94:        mmu_->register_dram_size(config_.addr_range_end_ - config_.addr_range_start_ + 1);
core/modules/memory/DRAM-impl.h:118:    while (not(output_buffer_.empty()) and (output_buffer_.front().time_ <= this->get_simulator().get_clock())) {
core/modules/memory/DRAM-impl.h:168:            output_buffer_.emplace_back(this->get_simulator().get_clock() + delay,
core/modules/memory/DRAM-impl.h:173:                mmu_->notify_access(input_buffer_.front());
core/modules/memory/DRAM-impl.h:178:    stats_.occupancy.sample(output_buffer_.size(), this->get_simulator().get_clock());
core/modules/memory/DRAM-impl.h:179:    if ((output_buffer_.empty() == false) && (output_buffer_.front().time_ > this->get_simulator().get_clock())) {
core/modules/memory/DRAM-impl.h:180:        this->set_module_activity(output_buffer_.front().time_ - this->get_simulator().get_clock());
core/modules/memory/DRAM-impl.h:183:            this->set_module_activity(sim::engine::NEVER);
core/modules/memory/DRAM-impl.h:185:            this->set_module_activity(sim::engine::NEXT);
core/modules/memory/DRAM-impl.h:219:            this->get_simulator().get_instrumentation();
core/modules/memory/DRAM-impl.h:220:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/memory/DRAM-impl.h:270:    Log::warning() << " - Have " << input_buffer_.size() << " requests in queue:";
core/modules/memory/DRAM-impl.h:274:    Log::warning() << " - Have " << output_buffer_.size() << " requests being processed:";
core/modules/memory/TLB.h:111:#include "TLB-impl.h"
core/modules/interconnect/Direct.h:101:#include "Direct-impl.h"
core/modules/interconnect/Direct-impl.h:181:    this->peer_ = dynamic_cast<engine::Module *>(&(out_.get_peer()));
core/modules/interconnect/Direct-impl.h:197:    in_.get_connected_port()->set_wake_up_on_read(wake_up_on_read);
core/modules/interconnect/Direct-impl.h:198:    miss_.get_connected_port()->set_wake_up_on_read(wake_up_on_read);
core/modules/interconnect/Bus-impl.h:46:static auto get_type_size(Message &t) -> typename std::enable_if<std::is_fundamental<Message>::value, std::size_t>::type
core/modules/interconnect/Bus-impl.h:53:static auto get_type_size(Message &t) -> typename std::enable_if<!std::is_fundamental<Message>::value, std::size_t>::type
core/modules/interconnect/Bus-impl.h:69:        return delay_ + (data_size + width_ - 1) / width_;
core/modules/interconnect/Bus-impl.h:71:        return delay_ * std::max(1ul, ((data_size + width_ - 1) / width_));
core/modules/interconnect/Bus-impl.h:87:        for (i = expected_ports->begin(); i != expected_ports->end(); ++i) {
core/modules/interconnect/Bus-impl.h:96:                routing_table_ptr->multimap_.insert(std::make_pair(data.get_tag(), *i));
core/modules/interconnect/Bus-impl.h:99:            expected_ports->erase(i);
core/modules/interconnect/Bus-impl.h:101:            pending.push_back(utils::time_list_entry_t<MessageType>(delay + this->get_simulator().get_clock(), data));
core/modules/interconnect/Bus-impl.h:127:                routing_table_ptr->multimap_.insert(std::make_pair(data.get_tag(), *i));
core/modules/interconnect/Bus-impl.h:132:            pending.push_back(utils::time_list_entry_t<MessageType>(delay + this->get_simulator().get_clock(), data));
core/modules/interconnect/Bus-impl.h:158:    if (pending.front().time_ > this->get_simulator().get_clock()) {
core/modules/interconnect/Bus-impl.h:163:        auto its = routing_table_ptr->multimap_.equal_range(pending.front().data_.get_tag());
core/modules/interconnect/Bus-impl.h:165:            DirectType* i = it->second;
core/modules/interconnect/Bus-impl.h:166:            if (can_write(*i) and dynamic_cast<sim::engine::IModule<Message>&>(i->get_peer()).inspect(pending.front().data_) == true) {
core/modules/interconnect/Bus-impl.h:171:                    routing_table_ptr->multimap_.erase(it);
core/modules/interconnect/Bus-impl.h:186:            if (can_write(**i) and dynamic_cast<sim::engine::IModule<Message>&>((*i)->get_peer()).inspect(pending.front().data_) == true) {
core/modules/interconnect/Bus-impl.h:194:                    exit(-1);
core/modules/interconnect/Bus-impl.h:216:    requests_per_cycle_(conf.get_value_with_default<unsigned>("req-per-cycle", 1)),
core/modules/interconnect/Bus-impl.h:217:    num_ports_(conf.get_value<unsigned>("num-ports")),
core/modules/interconnect/Bus-impl.h:224:    if (conf.key_exists("use-routing-table")) {
core/modules/interconnect/Bus-impl.h:225:        use_routing_table_ = (1 == conf.get_value<unsigned>("use-routing-table"));
core/modules/interconnect/Bus-impl.h:228:    if (conf.key_exists("use-expected-inputs")) {
core/modules/interconnect/Bus-impl.h:229:        use_expected_inputs_ = (1 == conf.get_value<unsigned>("use-expected-inputs"));
core/modules/interconnect/Bus-impl.h:240:        for (i = in->second.list_.begin(); i != in->second.list_.end(); ++i) {
core/modules/interconnect/Bus-impl.h:248:        for (i = out->second.list_.begin(); i != out->second.list_.end(); ++i) {
core/modules/interconnect/Bus-impl.h:301:            (pending_request_queue_.front().time_ <= this->get_simulator().get_clock()) and (c < requests_per_cycle_)) {
core/modules/interconnect/Bus-impl.h:308:    Log::debug() << "[BUS] At cycle " << this->get_simulator().get_clock() << " we sent " << c << " REQs.";
core/modules/interconnect/Bus-impl.h:312:            (pending_ack_queue_.front().time_ <= this->get_simulator().get_clock()) and (c < requests_per_cycle_)) {
core/modules/interconnect/Bus-impl.h:320:    Log::debug() << "[BUS] At cycle " << this->get_simulator().get_clock() << " we sent " << c << " ACKs.";
core/modules/interconnect/Bus-impl.h:348:    Log::debug() << "[BUS] At cycle " << this->get_simulator().get_clock() << " we read " << c << " REQs";
core/modules/interconnect/Bus-impl.h:364:    Log::debug() << "[BUS] At cycle " << this->get_simulator().get_clock() << " we read " << c << " ACKs";
core/modules/interconnect/Bus-impl.h:368:        if (pending_request_queue_.front().time_ > this->get_simulator().get_clock()) {
core/modules/interconnect/Bus-impl.h:371:            next_cycle = this->get_simulator().get_clock() + 1;
core/modules/interconnect/Bus-impl.h:376:        if (pending_ack_queue_.front().time_ > this->get_simulator().get_clock()) {
core/modules/interconnect/Bus-impl.h:379:            next_cycle = this->get_simulator().get_clock() + 1;
core/modules/interconnect/Bus-impl.h:382:    assert(next_cycle > this->get_simulator().get_clock());
core/modules/interconnect/Bus-impl.h:384:        this->set_module_activity(sim::engine::NEXT);
core/modules/interconnect/Bus-impl.h:386:        this->set_module_activity(sim::engine::NEVER);
core/modules/interconnect/Bus-impl.h:388:        this->set_module_activity(next_cycle - this->get_simulator().get_clock());
core/modules/interconnect/Bus-impl.h:408:            for (auto it2 = it->second.list_.begin(); it2 != it->second.list_.end(); it2++) {
core/modules/interconnect/Bus-impl.h:409:                (*it2)->get_peer().print_hardware_counters(time, propagate, overwrite_cpu_id);
core/modules/interconnect/Bus.h:138:#include "Bus-impl.h"
core/modules/cpu/Memory.h:119:#include "Memory-impl.h"
core/modules/cpu/SimpleMemory.h:99:#include "SimpleMemory-impl.h"
core/modules/cpu/Memory-impl.h:52:        dl1_(*this, config.get_value<unsigned>("num-ports"))
core/modules/cpu/Memory-impl.h:62:        vulnerability_->finalize(this->get_simulator().get_clock());
core/modules/cpu/Memory-impl.h:83:                    vulnerability_->mem_access(this->get_simulator().get_clock(), request);
core/modules/cpu/Memory-impl.h:148:    //     this->switch_request_ = true;
core/modules/cpu/Memory-impl.h:168:    unsigned instrumentation_id = (overwrite_cpu_id != 0) ? overwrite_cpu_id : this->instrumentation_id_;
core/modules/cpu/Memory-impl.h:183:    } else if (model_.finished() and mem_in_->empty()) {
core/modules/cpu/Memory-impl.h:191:        Log::debug() << model_.finished() << " " << sim_.get_clock() << " " << mem_in_->empty();
core/modules/cpu/models/ROA.cpp:49:    rob_(config.get_value<unsigned>("rob_size"), config.get_value<unsigned>("request-size"), out_),
core/modules/cpu/models/ROA.cpp:74:            commit_rate_ * static_cast<unsigned>(sim_.get_clock() - last_cycle_);
core/modules/cpu/models/ROA.cpp:86:    Log::debug2() << "remaining in rob: " << rob_.capacity() - rob_.free_entries();
core/modules/cpu/models/ROA.cpp:98:        Log::debug2() << "ROA::issue(): mem_in_->read()";
core/modules/cpu/models/ROA.cpp:99:        bool next = (*mem_in_)->read(next_item_);
core/modules/cpu/models/ROA.cpp:115:        last_issue_cycle_ = sim_.get_clock() - 1;
core/modules/cpu/models/ROA.cpp:166:            Log::debug2() << "Unknown memory instruction type " << static_cast<unsigned>(item.op_) << "-";
core/modules/cpu/models/ROA.cpp:187:        if ((rob_.capacity() - rob_.free_entries()) < static_cast<unsigned>(commit_rate_)) {
core/modules/cpu/models/ROA.cpp:201:            rob_.free_entries() : next_item_.ins_ - 1;
core/modules/cpu/models/ROA.cpp:204:        next_item_.ins_ -= inserted;
core/modules/cpu/models/ROA.cpp:242:        next = (rob_.capacity() - rob_.free_entries()) / commit_rate_;  // wait until max space
core/modules/cpu/models/ROA.cpp:244:        next = (next_item_.ins_ - rob_.free_entries()) / commit_rate_;
core/modules/cpu/models/ROA.cpp:356:        stats_.stalled_cycles_[current_wd_id_] += static_cast<unsigned>(sim_.get_clock() - last_cycle_);
core/modules/cpu/models/ROA.cpp:358:        stats_.out_full_cycles_[current_wd_id_] += static_cast<unsigned>(sim_.get_clock() - last_cycle_);
core/modules/cpu/models/ROA.cpp:360:        stats_.load_cycles_[current_wd_id_] += (cycle_load_resp_.front() - cycle_load_req_.front());
core/modules/cpu/models/ROA.cpp:366:        stats_.store_cycles_[current_wd_id_] += (cycle_store_resp_.front() - cycle_store_req_.front());
core/modules/cpu/models/ROA.cpp:391:    ins_current_phase_ = stats_.committed_ins_[current_wd_id_] - ins_current_phase_;
core/modules/cpu/models/ROA.cpp:408:    Log::warning() << " - OutputBuffer size = " << out_.size();
core/modules/cpu/models/ROA.cpp:409:    Log::warning() << " - OutputBuffer free_entries = " << out_.free_entries();
core/modules/cpu/models/ROA.cpp:410:    Log::warning() << " - LDQueue information:";
core/modules/cpu/models/ROA.cpp:417:                 << " roa id = " << this->get_id();
core/modules/cpu/models/ROA.cpp:437:                issued_instructions - stats_.prev_issued_instructions_} });
core/modules/cpu/models/ROA.cpp:446:                committed_instructions - stats_.prev_committed_instructions_} });
core/modules/cpu/models/ROA.cpp:455:                time - stats_.prev_cycle_count_} });
core/modules/cpu/models/ROA.cpp:464:                stalled_cycles - stats_.prev_stalled_cycles_} });
core/modules/cpu/models/ROA.cpp:473:                load_instructions - stats_.prev_load_instructions_} });
core/modules/cpu/models/ROA.cpp:482:                store_instructions - stats_.prev_store_instructions_} });
core/modules/cpu/models/ROA.cpp:484:    uint64_t st_fin = stats_.num_stores_received_.get_value() - stats_.prev_stores_recv_;
core/modules/cpu/models/ROA.cpp:485:    uint64_t ld_fin = stats_.num_loads_received_.get_value() - stats_.prev_loads_recv_;
core/modules/cpu/models/ROA.cpp:489:        st_avg_time = (stats_.store_cycles_.get_value() - stats_.prev_store_cycles_) / st_fin;
core/modules/cpu/models/ROA.cpp:493:        ld_avg_time = (stats_.load_cycles_.get_value() - stats_.prev_load_cycles_) / ld_fin;
core/modules/cpu/models/ROA.cpp:498:        amat = (stats_.store_cycles_.get_value() - stats_.prev_store_cycles_ +
core/modules/cpu/models/ROA.cpp:499:                stats_.load_cycles_.get_value() - stats_.prev_load_cycles_) / (st_fin + ld_fin);
core/modules/cpu/models/types-impl.h:99:        if (rit->item_.op_ != sim::trace::mitem_t::NOMEM and not rit->discarded_) {
core/modules/cpu/models/types-impl.h:100:            if (contains(rit->item_.addr_, rit->item_.addr_ + rit->item_.size_ - 1,
core/modules/cpu/models/types-impl.h:101:                    item.addr_, item.addr_ + item.size_ - 1)) {
core/modules/cpu/models/types-impl.h:109:        if (rit->item_.op_ != sim::trace::mitem_t::NOMEM and not rit->discarded_) {
core/modules/cpu/models/types-impl.h:110:            if (rit->item_.op_ == sim::trace::mitem_t::STORE and
core/modules/cpu/models/types-impl.h:111:                    overlap(rit->item_.addr_, rit->item_.addr_ + rit->item_.size_ - 1,
core/modules/cpu/models/types-impl.h:112:                    item.addr_, item.addr_ + item.size_ - 1)) {
core/modules/cpu/models/types-impl.h:131:    while (rit != data_.rend() and not rit->discarded_) {
core/modules/cpu/models/types-impl.h:132:        if (rit->item_.op_ == sim::trace::mitem_t::STORE and
core/modules/cpu/models/types-impl.h:133:                rit->deps_.empty() and  // has no deps (if has deps cannot be discarded)
core/modules/cpu/models/types-impl.h:135:                         rit->item_.addr_, rit->item_.addr_ + rit->item_.size_)) {
core/modules/cpu/models/types-impl.h:162:        assert(ret.second->item_.op_ == sim::trace::mitem_t::STORE);
core/modules/cpu/models/types-impl.h:164:        ret.second->deps_.push_back(&*it);
core/modules/cpu/models/types-impl.h:184:        ret.second->discarded_ = true;
core/modules/cpu/models/types-impl.h:201:        unsigned req_size = std::min(size, max_request_size_ - (addr % max_request_size_));
core/modules/cpu/models/types-impl.h:208:        size -= req_size;
core/modules/cpu/models/types-impl.h:223:        unsigned req_size = std::min(size, max_request_size_ - (addr % max_request_size_));
core/modules/cpu/models/types-impl.h:229:        size -= req_size;
core/modules/cpu/models/types-impl.h:243:        unsigned req_size = std::min(size, max_request_size_ - (addr % max_request_size_));
core/modules/cpu/models/types-impl.h:244:        size -= req_size;
core/modules/cpu/models/types-impl.h:282:    return (max_size_ - size_);
core/modules/cpu/models/types-impl.h:294:        exit(-1);
core/modules/cpu/models/types-impl.h:296:    this->ack(*elem);
core/modules/cpu/models/types-impl.h:304:    elem.pending_--;
core/modules/cpu/models/types-impl.h:350:    if (top->item_.ins_ == 1 and not top->served_) {
core/modules/cpu/models/types-impl.h:355:    while (ins >= top->item_.ins_) {
core/modules/cpu/models/types-impl.h:357:        if (top->served_ and top->deps_.empty() and  // if top element is ready
core/modules/cpu/models/types-impl.h:358:            (not(top->item_.op_ == sim::trace::mitem_t::STORE) or top->discarded_  // and non discarded st can be sent
core/modules/cpu/models/types-impl.h:361:            if (top->item_.op_ == sim::trace::mitem_t::STORE and not top->discarded_) {
core/modules/cpu/models/types-impl.h:364:            size_ -= top->item_.ins_;
core/modules/cpu/models/types-impl.h:365:            ins -= top->item_.ins_;
core/modules/cpu/models/types-impl.h:366:            total_removed += top->item_.ins_;
core/modules/cpu/models/types-impl.h:372:        } else if (not top->deps_.empty() and  // store has dep loads
core/modules/cpu/models/types-impl.h:375:            assert(top->item_.op_ == sim::trace::mitem_t::STORE);
core/modules/cpu/models/types-impl.h:377:            size_ -= top->item_.ins_;
core/modules/cpu/models/types-impl.h:378:            ins -= top->item_.ins_;
core/modules/cpu/models/types-impl.h:379:            total_removed += top->item_.ins_;
core/modules/cpu/models/types-impl.h:386:            unsigned remove = top->item_.ins_ - 1;
core/modules/cpu/models/types-impl.h:387:            size_ -= remove;
core/modules/cpu/models/types-impl.h:388:            ins -= remove;
core/modules/cpu/models/types-impl.h:389:            top->item_.ins_ -= remove;
core/modules/cpu/models/types-impl.h:390:            assert(top->item_.ins_ == 1);
core/modules/cpu/models/types-impl.h:397:    assert(ins < top->item_.ins_);
core/modules/cpu/models/types-impl.h:399:    top->item_.ins_ -= ins;
core/modules/cpu/models/types-impl.h:400:    size_ -= ins;
core/modules/cpu/models/types-impl.h:422:    while (it != data_.end() and it->served_ and
core/modules/cpu/models/types-impl.h:423:            (it->item_.op_ != sim::trace::mitem_t::STORE or it->discarded_)) {
core/modules/cpu/models/types-impl.h:424:        ins += it->item_.ins_;
core/modules/cpu/models/types-impl.h:428:        ins += it->item_.ins_;
core/modules/cpu/models/types-impl.h:492:        ret.first->second.push_back(access_list_elem(size, elem));
core/modules/cpu/models/types-impl.h:496:        access_list& q = ret.first->second;
core/modules/cpu/models/types-impl.h:516:    access_list& q = it->second;
core/modules/cpu/models/types-impl.h:518:        if (it2->first == size) {
core/modules/cpu/models/types-impl.h:535:    Log::warning() << " - LDQueue elements: " << data_.size();
core/modules/cpu/models/types-impl.h:539:            Log::warning() << "   - Size " << static_cast<unsigned>(sub.first) << " req " << sub.second->to_string();
core/modules/cpu/models/types.h:179:    typename std::queue<T>::size_type free_entries() const { return size_ - out_.size(); }
core/modules/cpu/models/types.h:224:#include "types-impl.h"
core/modules/cpu/Burst.cpp:57:        burst_cycles_[0] -= (busy_timer_ - get_simulator().get_clock());
core/modules/cpu/Burst.cpp:78:        if (burst_in_->read(phase)) {
core/modules/cpu/Burst.cpp:101:        set_module_activity(busy_timer_ - get_simulator().get_clock());
Binary file core/modules/cpu/.SimpleMemory.h.swp matches
core/modules/cpu/SimpleMemory-impl.h:42:        ldst_queue_size_(conf.get_value<std::size_t>("ldst-size")), halt_(false),
core/modules/cpu/SimpleMemory-impl.h:77:    if (instr_in_->read(next_instruction_) == false) {
core/modules/cpu/SimpleMemory-impl.h:107:    bool ret = memory_in_->read(mem_request);
core/modules/cpu/SimpleMemory-impl.h:118:        next_instruction_.ld_--;
core/modules/cpu/SimpleMemory-impl.h:122:        next_instruction_.st_--;
core/modules/cpu/SimpleMemory-impl.h:144:        return this->set_module_activity(engine::NEXT);
core/modules/cpu/SimpleMemory-impl.h:151:    this->set_module_activity(engine::NEXT);
Binary file core/modules/cpu/.SimpleMemory-impl.h.swp matches
core/logic/memory/CacheSet.h:105:#include "CacheSet-impl.h"
core/logic/memory/DRAM.cpp:47:    std::size_t column_size = 1 << (last_bytes_bit - 1);
core/logic/memory/DRAM.h:108:#include "DRAM-impl.h"
core/logic/memory/MMU-impl.h:62:    allocation_policy_(config.get_value<std::string>("allocation-policy")),
core/logic/memory/MMU-impl.h:65:    page_size_(config.get_value<std::size_t>("page-size")),
core/logic/memory/MMU-impl.h:81:        color_mask_ = ((cache_size / cache_assoc) - 1) & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:92:    if (config_.key_exists("access-priority")) {
core/logic/memory/MMU-impl.h:93:        std::string access_priority = config_.get_value<std::string>("access-priority");
core/logic/memory/MMU-impl.h:99:    if (config_.key_exists("empty-page-threshold"))
core/logic/memory/MMU-impl.h:100:        empty_page_threshold_ = config_.get_value<unsigned>("empty-page-threshold");
core/logic/memory/MMU-impl.h:102:    if (config_.key_exists("backward-migration-factor"))
core/logic/memory/MMU-impl.h:103:        backward_migration_factor_ = config_.get_value<float>("backward-migration-factor");
core/logic/memory/MMU-impl.h:145:    engine::addr_t logical_offset = logical_addr & (page_size_ - 1);
core/logic/memory/MMU-impl.h:146:    engine::addr_t logical_page = logical_addr & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:150:        engine::addr_t* allocated_page = this->allocate_page(cpu_id, logical_addr);
core/logic/memory/MMU-impl.h:156:        if (i->second.status_ == page_table_entry_t::status_t::ALLOCATED)
core/logic/memory/MMU-impl.h:157:            physical_page = i->second.physical_address_;
core/logic/memory/MMU-impl.h:169:    engine::addr_t physical_offset = physical_addr & (page_size_ - 1);
core/logic/memory/MMU-impl.h:170:    engine::addr_t physical_page = physical_addr & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:174:    MMU::mmu_key_t mmu_key = i->second;
core/logic/memory/MMU-impl.h:186:        allocated_pages_count_--;
core/logic/memory/MMU-impl.h:198:                MMU::mmu_key_t mmu_key = rev_it->second;
core/logic/memory/MMU-impl.h:203:                page_table_entry_t active_page = pgt_it->second;
core/logic/memory/MMU-impl.h:216:                //order_key = order_key / (allocated_pages_[page_color].size() - 4 - index + 1);
core/logic/memory/MMU-impl.h:239:            /*engine::addr_t physical_page = it->physical_page_;
core/logic/memory/MMU-impl.h:242:            MMU::mmu_key_t mmu_key = rev_it->second;
core/logic/memory/MMU-impl.h:247:            page_table_entry_t active_page = pgt_it->second;
core/logic/memory/MMU-impl.h:250:            page_table_entry_t profile_page = pgt_it->second;*/
core/logic/memory/MMU-impl.h:252:            page_table_entry_t active_page = *(it->active_page_);
core/logic/memory/MMU-impl.h:253:            page_table_entry_t profile_page = *(it->profile_page_);
core/logic/memory/MMU-impl.h:257:                order_key = profile_page.read_access_count_ - active_page.read_access_count_;
core/logic/memory/MMU-impl.h:260:                order_key = profile_page.write_access_count_ - active_page.write_access_count_;
core/logic/memory/MMU-impl.h:263:                order_key = profile_page.read_access_count_ + profile_page.write_access_count_ -
core/logic/memory/MMU-impl.h:264:                            active_page.read_access_count_ - active_page.write_access_count_;
core/logic/memory/MMU-impl.h:274:        victim_page = victim_page_candidate->physical_page_;
core/logic/memory/MMU-impl.h:276:        allocated_pages_count_--;
core/logic/memory/MMU-impl.h:282:    page_table_t::iterator j = page_tables_[(i->second).first].find((i->second).second);
core/logic/memory/MMU-impl.h:283:    Log::debug3() << "victimizing page - cpu_id: " << (i->second).first << ", logical_addr: "
core/logic/memory/MMU-impl.h:284:                  << (i->second).second << ", physical_addr: " << victim_page;
core/logic/memory/MMU-impl.h:285:    j->second.status_ = page_table_entry_t::status_t::CLEARING;
core/logic/memory/MMU-impl.h:287:        fast_memory_read_count_ -= j->second.read_access_count_;
core/logic/memory/MMU-impl.h:288:        fast_memory_write_count_ -= j->second.write_access_count_;
core/logic/memory/MMU-impl.h:290:    j->second.read_access_count_ = 0;
core/logic/memory/MMU-impl.h:291:    j->second.write_access_count_ = 0;
core/logic/memory/MMU-impl.h:292:    j->second.timestamp_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:295:    tlbs_[(i->second).first]->clear_page(victim_page);
core/logic/memory/MMU-impl.h:303:    engine::addr_t logical_page = logical_addr & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:325:            page_table_entry.page_list_iterator_ = --allocated_pages_[page_color].end();
core/logic/memory/MMU-impl.h:328:            allocated_pages_[page_color].back().active_page_ = &(page_tables_[cpu_id].find(logical_page)->second);
core/logic/memory/MMU-impl.h:329:            allocated_pages_[page_color].back().profile_page_ = &(profile_tables_[cpu_id].find(logical_page)->second);
core/logic/memory/MMU-impl.h:335:            Log::debug3() << "allocating page - cpu_id: " << cpu_id << ", logical_addr: " << logical_page
core/logic/memory/MMU-impl.h:361:    engine::addr_t accessed_physical_page = req.get_tag() & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:367:    // MMU::mmu_key_t mmu_key = i->second;
core/logic/memory/MMU-impl.h:368:    page_table_t::iterator j = page_tables_[(i->second).first].find((i->second).second);
core/logic/memory/MMU-impl.h:370:    if (j->second.status_ == page_table_entry_t::status_t::ALLOCATED) {
core/logic/memory/MMU-impl.h:372:            j->second.read_access_count_++;
core/logic/memory/MMU-impl.h:376:            j->second.write_access_count_++;
core/logic/memory/MMU-impl.h:379:        // j->second.last_access_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:390:                                                        j->second.page_list_iterator_);
core/logic/memory/MMU-impl.h:399:            uint64_t page_access_count = j->second.read_access_count_ + j->second.write_access_count_;
core/logic/memory/MMU-impl.h:402:                page_access_count -= j->second.read_access_count_;
core/logic/memory/MMU-impl.h:403:                fast_memory_access_count -= fast_memory_read_count_;
core/logic/memory/MMU-impl.h:406:                page_access_count -= j->second.write_access_count_;
core/logic/memory/MMU-impl.h:407:                fast_memory_access_count -= fast_memory_write_count_;
core/logic/memory/MMU-impl.h:411:                          << ":" << sim_->get_clock();
core/logic/memory/MMU-impl.h:416:                j->second.status_ = page_table_entry_t::CLEARING;
core/logic/memory/MMU-impl.h:417:                j->second.timestamp_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:419:                tlbs_[(i->second).first]->clear_page(j->second.physical_address_);
core/logic/memory/MMU-impl.h:432:            outputFile.write(reinterpret_cast<const char*>(&(i->first)), sizeof(engine::addr_t));
core/logic/memory/MMU-impl.h:433:            outputFile.write(reinterpret_cast<char*>(&(i->second).read_access_count_), sizeof(unsigned));
core/logic/memory/MMU-impl.h:434:            outputFile.write(reinterpret_cast<char*>(&(i->second).write_access_count_), sizeof(unsigned));
core/logic/memory/MMU-impl.h:494:    if (config_.key_exists("input-access-profile")) {
core/logic/memory/MMU-impl.h:495:        std::fstream inputFile(config_.get_value<std::string>("input-access-profile"), std::ios::in | std::ios::binary);
core/logic/memory/MMU-impl.h:533:                this->allocate_page((i->second).first, (i->second).second);
core/logic/memory/MMU-impl.h:545:    MMU::mmu_key_t mmu_key = i->second;
core/logic/memory/MMU-impl.h:548:    cumulative_clear_time_ += sim_->get_clock() - j->second.timestamp_;
core/logic/memory/MMU-impl.h:553:        j->second.status_ = page_table_entry_t::MIGRATING;
core/logic/memory/MMU-impl.h:554:        j->second.timestamp_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:556:        dma_->memcpy(physical_page, free_physical_page, page_size_);
core/logic/memory/MMU-impl.h:564:            j->second.status_ = page_table_entry_t::MIGRATING;
core/logic/memory/MMU-impl.h:565:            j->second.timestamp_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:567:            dma_->memcpy(physical_page, free_physical_page, page_size_);
core/logic/memory/MMU-impl.h:581:    MMU::mmu_key_t mmu_key = i->second;
core/logic/memory/MMU-impl.h:583:    j->second.physical_address_ = destination_addr;
core/logic/memory/MMU-impl.h:585:    cumulative_migration_time_ += sim_->get_clock() - j->second.timestamp_;
core/logic/memory/MMU-impl.h:586:    j->second.status_ = page_table_entry_t::status_t::ALLOCATED;
core/logic/memory/MMU-impl.h:587:    j->second.read_access_count_ = 0;
core/logic/memory/MMU-impl.h:588:    j->second.write_access_count_ = 0;
core/logic/memory/MMU-impl.h:591:        allocated_page.active_page_ = &(j->second);
core/logic/memory/MMU-impl.h:592:        allocated_page.profile_page_ = &(profile_tables_[mmu_key.first].find(mmu_key.second)->second);
core/logic/memory/MMU-impl.h:596:        j->second.page_list_iterator_ = --allocated_pages_[page_color].end();
core/logic/memory/MMU-impl.h:604:        engine::addr_t logical_page = it->second & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:605:        if ((it->first == mmu_key.first) && (logical_page == mmu_key.second)) {
core/logic/memory/MMU-impl.h:612:    tlbs_[mmu_key.first]->notify_translation();
core/logic/memory/MMU-impl.h:620:            engine::addr_t logical_page = logical_addr & (~(page_size_ - 1));
core/logic/memory/MMU-impl.h:634:                page_table_entry.page_list_iterator_ = --allocated_pages_[page_color].end();
core/logic/memory/MMU-impl.h:639:                page.active_page_ = &(page_tables_[cpu_id].find(logical_page)->second);
core/logic/memory/MMU-impl.h:640:                page.profile_page_ = &(profile_tables_[cpu_id].find(logical_page)->second);
core/logic/memory/MMU-impl.h:646:                tlbs_[cpu_id]->notify_translation();
core/logic/memory/MMU-impl.h:653:                engine::addr_t old_physical_address = pgt_it->second.physical_address_;
core/logic/memory/MMU-impl.h:654:                pgt_it->second.physical_address_ = source_addr;
core/logic/memory/MMU-impl.h:655:                // pgt_it->second.page_list_iterator_ == --allocated_pages_[page_color].end();
core/logic/memory/MMU-impl.h:656:                pgt_it->second.status_ = page_table_entry_t::MIGRATING;
core/logic/memory/MMU-impl.h:657:                pgt_it->second.timestamp_ = sim_->get_clock();
core/logic/memory/MMU-impl.h:659:                dma_->memcpy(old_physical_address, source_addr, page_size_);
core/logic/memory/CacheSet-impl.h:71:    policy_.get()->set_ = this;
core/logic/memory/CacheSet-impl.h:114:        get_policy()->insert(tag, cache_line);
core/logic/memory/CacheSet-impl.h:156:    get_policy()->update(tag);
core/logic/memory/CacheSet-impl.h:163:    auto retval = get_policy()->evict();
core/logic/memory/CacheSet-impl.h:178:        get_policy()->remove(tag);
core/logic/memory/CacheSet-impl.h:180:    free_entries_.splice(free_entries_.begin(), contents_, i->second);
core/logic/memory/CacheSet-impl.h:194:    return line->second;
core/logic/memory/CacheSet-impl.h:206:    return line->second;
core/logic/memory/CacheSet-impl.h:265:        Log::warning() << "   - " << item.first;
core/logic/memory/policy/Policy-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/Policy-impl.h:47:    storage_(this->params_.size_)
core/logic/memory/policy/Policy-impl.h:105:    const Tag evicted_tag = this->storage_.get_tag(evict_index);
core/logic/memory/policy/Policy-impl.h:106:    const auto retval = this->set_->find(evicted_tag);
core/logic/memory/policy/Policy-impl.h:107:    assert(retval != this->set_->get_contents().end());
core/logic/memory/policy/Policy-impl.h:108:    assert(retval->first == evicted_tag);
core/logic/memory/policy/Policy-impl.h:128:    return &(*set_->find(storage_.container_[evict_index].first));
core/logic/memory/policy/Policy-impl.h:136:    storage_ = other_policy->storage_;
core/logic/memory/policy/Policy-impl.h:147:    if (cfg.key_exists("inject-per-benchmark-config") and
core/logic/memory/policy/Policy-impl.h:148:        (cfg.get_value<std::string>("inject-per-benchmark-config") == "true")) {
core/logic/memory/policy/LRU.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/LRU.h:65:#include "LRU-impl.h"
core/logic/memory/policy/SRRIP-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/SRRIP-impl.h:108:    kRRI_({static_cast<rrpv_t>(std::pow(2, rrpv_width_) - 1),
core/logic/memory/policy/SRRIP-impl.h:109:           static_cast<rrpv_t>(std::pow(2, rrpv_width_) - 2),
core/logic/memory/policy/SRRIP-impl.h:111:    rrpv_vector_(this->params_.size_, kRRI_.distant_),
core/logic/memory/policy/SRRIP-impl.h:152:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/SRRIP-impl.h:155:    const std::size_t free_index = this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/SRRIP-impl.h:160:        insert_policy = insert_policies_.at(line.get_dep_type())[insert_policies_.at(line.get_dep_type()).size() - 1];
core/logic/memory/policy/SRRIP-impl.h:186:                        brrip_probabilites_.at(line.get_dep_type()).size() - 1];
core/logic/memory/policy/SRRIP-impl.h:217:    const size_t index = this->storage_.find(tag);
core/logic/memory/policy/SRRIP-impl.h:223:                               rrpv_vector_[index] - 1);
core/logic/memory/policy/SRRIP-impl.h:256:    candidate_t candidate = {false, this->params_.size_};
core/logic/memory/policy/SRRIP-impl.h:263:        if (!this->storage_.valid_[index] or (this->storage_.get_cache_line(index).locked())) {
core/logic/memory/policy/SRRIP-impl.h:275:    } while ((index = (index + 1) % this->params_.size_) != start_index );
core/logic/memory/policy/SRRIP-impl.h:281:        const rrpv_t increment = kRRI_.distant_ - max.val_;
core/logic/memory/policy/SRRIP-impl.h:291:    assert(candidate.index_ != this->params_.size_);
core/logic/memory/policy/Policy.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/Policy.h:65:    // - calling this function several times, between two calls to evict(), must result in the same line.
core/logic/memory/policy/Policy.h:66:    // - calling evict after this function must evict the same line as this function suggested.
core/logic/memory/policy/Policy.h:98:#include "Policy-impl.h"
core/logic/memory/policy/dynamic/PolicyTrainer.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/dynamic/PolicyTrainer.h:49:    // whether the structures for i-th task are initialized
core/logic/memory/policy/dynamic/PolicyTrainer.h:120:#include "PolicyTrainer-impl.h"
core/logic/memory/policy/dynamic/PolicyTrainerUtils-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/dynamic/PolicyTrainerUtils-impl.h:45:        current_total_ -= previous_records_.front();
core/logic/memory/policy/dynamic/PolicyTrainerUtils-impl.h:110://    return records_.begin()->policy_;
core/logic/memory/policy/dynamic/PolicyTrainerUtils-impl.h:118:    std::pair<policy_t, quality_t> min(records_.begin()->first, records_.begin()->second.get_quality());
core/logic/memory/policy/dynamic/PolicyTrainerUtils-impl.h:133:    std::pair<policy_t, quality_t> max(records_.begin()->first, records_.begin()->second.get_quality());
core/logic/memory/policy/dynamic/PolicyTrainerUtils.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/dynamic/PolicyTrainerUtils.h:113:#include "PolicyTrainerUtils-impl.h"
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:42:        cpu_id = -1;
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:48:    cache_->get_simulator().get_instrumentation().add_event(utils::instrumentation::InstrumentationItem {
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:51:        cache_->get_simulator().get_clock(),
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:69:        for (auto rit = records->begin(); rit != records->end(); ++rit) {
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:70:            std::size_t quality = rit->second.get_quality();
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:73:                auto it = std::find(used_policies_.at(task_type).begin(), used_policies_.at(task_type).end(), rit->first);
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:76:                    std::cout << "Removing policy " << rit->first << " (" << quality << ") for task_type=" << task_type << std::endl;
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:141:    for (auto set_it = cache_->sets_.begin(); set_it != cache_->sets_.end(); ++set_it){
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:147:                dyn_policy->set_brrip_probability(tt, available_policies_[0]);
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:188://        std::cout << std::setw(6) << same_task_instances_per_core_[cpu_id] << " samples\n---------------"
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:264:                            - available_policies_.begin();
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:300://            cache_->get_simulator().get_instrumentation().add_event(utils::instrumentation::InstrumentationItem {
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:303://                cache_->get_simulator()->get_clock(),
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:333:            exit(-1);
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:371:    for (auto set_it = cache_->sets_.begin(); set_it != cache_->sets_.end(); ++set_it){
core/logic/memory/policy/dynamic/PolicyTrainer-impl.h:375:            dyn_policy->set_brrip_probability(task_type, policy);
core/logic/memory/policy/types.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/Random-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/Random-impl.h:43:    sequence_(this->params_.size_),
core/logic/memory/policy/Random-impl.h:61:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/Random-impl.h:64:    this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/Random-impl.h:102:    std::size_t index = (size_t)-1;  // invalid value, to assert if not over-written
core/logic/memory/policy/Random-impl.h:105:        if (this->storage_.valid_[i] and not this->storage_.get_cache_line(i).locked()) {
core/logic/memory/policy/Random-impl.h:111:    assert(index != (size_t)-1);
core/logic/memory/policy/SetDueling-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/SetDueling-impl.h:37://        number_of_checks(owner, "number-of-checks"),
core/logic/memory/policy/SetDueling-impl.h:38://        number_of_changes(owner, "number-of-changes"),
core/logic/memory/policy/SetDueling-impl.h:39://        interval_boundaries(owner, "interval-boundaries"),
core/logic/memory/policy/SetDueling-impl.h:40://        active_policies(owner, "active-policies")
core/logic/memory/policy/SetDueling-impl.h:48:        {"less-misses", SetDueling<CacheSet, Cache>::EventRewardCalculator::less_misses}
core/logic/memory/policy/SetDueling-impl.h:64:    return (outcome == outcome_t::MISS) ? -1 : 0;
core/logic/memory/policy/SetDueling-impl.h:92:        std::cout << "---- Initialization of SetDueling ----" << std::endl;
core/logic/memory/policy/SetDueling-impl.h:113:    return cache_->get_clock();
core/logic/memory/policy/SetDueling-impl.h:130:    const bool enabled = conf.is_valid() and conf.get_value_with_default<bool>("set-dueling-enabled", false);
core/logic/memory/policy/SetDueling-impl.h:141:        update_interval = conf.get_value<uint64_t>("set-dueling-update-interval");
core/logic/memory/policy/SetDueling-impl.h:143:        const std::vector<std::string> policies(conf.get_values<std::string>("set-dueling-policies"));
core/logic/memory/policy/SetDueling-impl.h:144:        const std::vector<std::string> tr_set_lists(conf.get_values<std::string>("set-dueling-training-sets"));
core/logic/memory/policy/SetDueling-impl.h:147:            std::cerr << "At least 2 policies should be specified for parameter 'set-dueling-policies' "
core/logic/memory/policy/SetDueling-impl.h:184:        initial_policy = conf.get_value<std::string>("default-policy");
core/logic/memory/policy/SetDueling-impl.h:190:        const std::string sdpc(conf.get_value<std::string>("set-dueling-policy-comparator"));
core/logic/memory/policy/SetDueling-impl.h:235:            unsigned size = cache_->sets_[0].get_size();
core/logic/memory/policy/SetDueling-impl.h:238:                CacheSet *set = &(cache_->sets_[follower_set]);
core/logic/memory/policy/SetDueling-impl.h:240:                new_policy.get()->initialize_from_other_policy(set->get_policy());
core/logic/memory/policy/SetDueling-impl.h:241:                set->set_policy(std::move(new_policy));
core/logic/memory/policy/NRU.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/NRU.h:61:#include "NRU-impl.h"
core/logic/memory/policy/TreePLRU-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/TreePLRU-impl.h:39:    nodes_(size - 1, Direction::LEFT)
core/logic/memory/policy/TreePLRU-impl.h:48:    // size == N - 1 (N - number of lines in cache set)
core/logic/memory/policy/TreePLRU-impl.h:60:    return node - nodes_.size();
core/logic/memory/policy/TreePLRU-impl.h:89:    return node - nodes_.size();
core/logic/memory/policy/TreePLRU-impl.h:118:        for (std::size_t index = std::pow(2, level) - 1; index < std::pow(2, level + 1) - 1; ++index) {
core/logic/memory/policy/TreePLRU-impl.h:130:        padding = (padding - 1) / 2;
core/logic/memory/policy/TreePLRU-impl.h:146:    return std::floor((index - 1) / 2);
core/logic/memory/policy/TreePLRU-impl.h:162:        return index - 1;  // return left
core/logic/memory/policy/TreePLRU-impl.h:172:        tree_(this->params_.size_)
core/logic/memory/policy/TreePLRU-impl.h:188:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/TreePLRU-impl.h:191:    std::size_t free_index = this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/TreePLRU-impl.h:200:    const std::size_t index = this->storage_.find(tag);
core/logic/memory/policy/TreePLRU-impl.h:219:        if (this->storage_.valid_[index] and !this->storage_.get_cache_line(index).locked()) {
core/logic/memory/policy/TreePLRU.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/TreePLRU.h:45: * O - kept in Tree, used for ordering of []
core/logic/memory/policy/TreePLRU.h:46: * [] - kept in Policy, actual contents
core/logic/memory/policy/TreePLRU.h:62:    // gives the pseudo-LRU position
core/logic/memory/policy/TreePLRU.h:106:#include "TreePLRU-impl.h"
core/logic/memory/policy/LRU-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/LRU-impl.h:55:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/LRU-impl.h:58:    std::size_t free_index = this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/LRU-impl.h:98:    for (std::size_t i = 0; i < this->params_.size_; ++i) {
core/logic/memory/policy/LRU-impl.h:99:        if (this->storage_.valid_[i]) {
core/logic/memory/policy/LRU-impl.h:101:            map_.emplace(this->storage_.get_tag(i), lru_stack_.begin());
core/logic/memory/policy/LRU-impl.h:112:        if (not this->storage_.get_cache_line(*it).locked()) {
core/logic/memory/policy/SetDueling.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/SetDueling.h:52:    typedef int64_t sdm_val_t;  // Set Dueling Monitor - a counter that quantifies policy performance
core/logic/memory/policy/SetDueling.h:111:#include "SetDueling-impl.h"
core/logic/memory/policy/NRU-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/NRU-impl.h:38:    nru_(this->params_.size_, NRUState::DISTANT)
core/logic/memory/policy/NRU-impl.h:54:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/NRU-impl.h:57:    std::size_t free_index = this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/NRU-impl.h:67:    const size_t index = this->storage_.find(tag);
core/logic/memory/policy/NRU-impl.h:76:    const size_t start_index = 0;  // VD: change this once per-set iterator is introduced
core/logic/memory/policy/NRU-impl.h:78:    size_t candidate_index = this->params_.size_;  // VD: this is invalid value
core/logic/memory/policy/NRU-impl.h:83:        if (!this->storage_.valid_[index] or this->storage_.get_cache_line(index).locked()) {
core/logic/memory/policy/NRU-impl.h:87:        if (candidate_index == this->params_.size_) {
core/logic/memory/policy/NRU-impl.h:97:    } while ((index = (index + 1) % this->params_.size_) != start_index);
core/logic/memory/policy/NRU-impl.h:99:    assert(candidate_index != this->params_.size_);
core/logic/memory/policy/types-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/types-impl.h:78:    return container_iter - container_.begin();
core/logic/memory/policy/types.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/types.h:98:     * so map needs to be re-populated with iterators from the new storage object.
core/logic/memory/policy/types.h:108:#include "types-impl.h"
core/logic/memory/policy/TDAKE.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/TDAKE.h:77:#include "TDAKE-impl.h"
core/logic/memory/policy/SRRIP.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/SRRIP.h:113:    /* Number of bits for Re-Reference Prediction Values (RRPV) */
core/logic/memory/policy/SRRIP.h:140:#include "SRRIP-impl.h"
core/logic/memory/policy/Random.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/Random.h:70:#include "Random-impl.h"
core/logic/memory/policy/Policy.cpp:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/TDAKE-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/memory/policy/TDAKE-impl.h:63:    const auto success_and_iterator = this->set_->insert_and_get_iterator(tag, line);
core/logic/memory/policy/TDAKE-impl.h:66:    std::size_t free_index = this->storage_.insert(tag, success_and_iterator.second);
core/logic/memory/policy/TDAKE-impl.h:68:        this->lru_stack_.insert(this->lru_stack_.end(), free_index);
core/logic/memory/policy/TDAKE-impl.h:69:        this->map_.emplace(tag, this->lru_stack_.end());
core/logic/memory/policy/TDAKE-impl.h:71:        this->lru_stack_.insert(this->lru_stack_.begin(), free_index);
core/logic/memory/policy/TDAKE-impl.h:72:        this->map_.emplace(tag, this->lru_stack_.begin());
core/logic/memory/policy/TDAKE-impl.h:89:    assert(this->lru_stack_.size() <= this->params_.size_);
core/logic/memory/policy/TDAKE-impl.h:90:    assert(this->map_.size() <= this->params_.size_);
core/logic/memory/policy/TDAKE-impl.h:98:    for (auto index_it = this->lru_stack_.rbegin(); index_it != this->lru_stack_.rend(); ++index_it) {
core/logic/memory/policy/TDAKE-impl.h:99:        auto line = this->storage_.get_cache_line(*index_it);
core/logic/memory/MSHR-impl.h:79:    mask_(~(cache_line_size - 1))
core/logic/memory/MSHR-impl.h:100:    return data_size_ - data_.size();
core/logic/memory/MSHR-impl.h:127:    return &it->second;
core/logic/memory/MSHR-impl.h:138:    assert(&it->second == &entry);
core/logic/memory/MSHR-impl.h:159:    Log::warning() << " - MSHR has " << data_.size() << " entries of a limit of " << data_size_;
core/logic/memory/MSHR.h:129:#include "MSHR-impl.h"
core/logic/memory/Cache-impl.h:56:    num_sets_((num_lines + associativity - 1) / associativity),
core/logic/memory/Cache-impl.h:65:    if (cache_line_size == 0  or (cache_line_size & (cache_line_size - 1)) != 0) {
core/logic/memory/Cache-impl.h:67:        exit(-1);
core/logic/memory/Cache-impl.h:79:        CacheSet *new_set = &(*(sets_.end() - 1));
core/logic/memory/Cache-impl.h:84:            std::string set_policy_type = set_dueling_.get()->is_enabled() ?
core/logic/memory/Cache-impl.h:85:                                          set_dueling_.get()->get_set_policy(n) :
core/logic/memory/Cache-impl.h:86:                                          cache_policy_config.get_value<std::string>("default-policy");
core/logic/memory/Cache-impl.h:99:        new_set->set_policy(std::move(policy));
core/logic/memory/Cache-impl.h:105:        policy_trainer_->init_policies();
core/logic/memory/Cache-impl.h:129:        sum2 += std::pow(set_access_count_[i] - average, 2);
core/logic/memory/Cache-impl.h:179:    /* If we are inserting a dirty line in a write-through cache, we add it to the list. */
core/logic/memory/Cache-impl.h:195:    // As the CacheLines does not have a dirty() function, we cannot mantain write-through coherence.
core/logic/memory/Cache-impl.h:225:    return &(i->second);
core/logic/memory/Cache-impl.h:240:    // We need to check if the line we evict was dirty and pending a write-through:
core/logic/memory/Cache-impl.h:299:            policy_trainer_->signal_task_end(req.get_cpu_id(), req.get_task_type());
core/logic/memory/Cache-impl.h:303:            policy_trainer_->signal_task_start(req.get_cpu_id(), req.get_task_type());
core/logic/memory/Cache-impl.h:314:    set_dueling_.get()->signal_event(get_set(req.get_tag()), req.get_op(), outcome);
core/logic/memory/Cache-impl.h:316:        policy_trainer_->sample(req.get_cpu_id(), req.get_task_type(), req.get_dep_type(), outcome);
core/logic/memory/Cache-impl.h:355:    if (sets_[set].find(tag)->second.state_ == status.state_) {
core/logic/memory/Cache-impl.h:358:    sets_[set].find(tag)->second.state_ = status.state_;
core/logic/memory/Cache-impl.h:368:            if (it->first == tag) {
core/logic/memory/Cache-impl.h:386:        pending_writes_.push_back( { tag, sets_[set].find(tag)->second } );
core/logic/memory/Cache-impl.h:424:    return sets_[set].get_policy()->inspect_evict();
core/logic/memory/Cache.h:52:    static auto has_dirty_test(const U *u) -> decltype(u->dirty(), bool()) {}
core/logic/memory/Cache.h:63:    /* List of dirty lines mantained for the write-through policy. */
core/logic/memory/Cache.h:91:    /* Insert is separated into two functions to enable the write-through policy.
core/logic/memory/Cache.h:97:     * It does not mantain write-through coherence.
core/logic/memory/Cache.h:128:    /* Functions added for marking the cache lines. They help managa the write-through conditions. */
core/logic/memory/Cache.h:133:     * Only used on write-through.
core/logic/memory/Cache.h:149:#include "Cache-impl.h"
core/logic/memory/MMU.h:168:#include "MMU-impl.h"
core/logic/memory/DRAM-impl.h:121:        unsigned last = first - 1 + ffsl(~(mask >> (first -1))) - 1;
core/logic/memory/DRAM-impl.h:122:        uint64_t range_mask = (last == 64) ? -1L : ((1UL << last) - 1);
core/logic/memory/DRAM-impl.h:124:        ret |= (addr & range_mask) >> (first - filled);
core/logic/memory/DRAM-impl.h:126:        filled += last - first + 1;
core/logic/memory/DRAM-impl.h:179:    Rank &rank = this->access(dimms_, get_rank_index(addr));
core/logic/memory/DRAM-impl.h:180:    return this->access(rank, get_bank_index(addr));
core/logic/memory/DRAM-impl.h:187:    this->get_bank(addr).set_row_buffer(this->get_row_index(addr));
core/logic/memory/DRAM-impl.h:194:    Bank &bank = this->get_bank(addr);
core/logic/memory/DRAM-impl.h:195:    if (bank.is_row_valid() and bank.get_row_buffer() == this->get_row_index(addr)) {
core/logic/memory/DRAM-impl.h:205:    return this->get_bank(addr).precharge();
core/logic/memory/DRAM-impl.h:212:    this->get_bank(addr).invalidate_row_buffer();
core/logic/memory/DRAM-impl.h:219:    return this->get_bank(addr).is_busy();
core/logic/memory/DRAM-impl.h:226:    this->get_bank(addr).set_busy();
core/logic/memory/DRAM-impl.h:233:    this->get_bank(addr).unset_busy();
core/logic/coherence/Controller-impl.h:43:        line_size_(cache_config.get_value<std::size_t>("line-size")),
core/logic/coherence/Controller-impl.h:45:        last_level_(cache_config.key_exists("last-level") && (1 == cache_config.get_value<unsigned>("last-level"))),
core/logic/coherence/single/Message.h:192:#include "Message-impl.h"
core/logic/coherence/single/Message-impl.h:73:        tag_(original.tag_ & ~(cache_line_size - 1)),
core/logic/coherence/single/Message-impl.h:304:    for (sim::engine::cycles_t time_stamp : tp->time_log_) {
core/logic/coherence/single/Message-impl.h:313:    engine::cycles_t missplacement = start - time_log_[0];
core/logic/coherence/single/Message-impl.h:387:    Packet(addr, size, data_size, 0, task_dep_t::NONE, 0, -1, user_code_id), op_(op)
core/logic/coherence/single/Message-impl.h:422:        this->time_log_.push_back(req.time_log_[i]);
core/logic/coherence/single/Directory.h:84:#include "Directory-impl.h"
Binary file core/logic/coherence/single/.Controller-impl.h.swp matches
core/logic/coherence/single/Controller-impl.h:64:    mask_(~(this->line_size_ - 1)),
core/logic/coherence/single/Controller-impl.h:66:    mshr_(sim::engine::Config(simulator.get_config(), cache_config.get_value<std::string>("mshr")), this->line_size_),
core/logic/coherence/single/Controller-impl.h:68:            std::max(cache_config.get_value<std::size_t>("victim-lines"), 4UL),
core/logic/coherence/single/Controller-impl.h:69:            std::max(cache_config.get_value<std::size_t>("victim-lines"), 4UL),
core/logic/coherence/single/Controller-impl.h:70:            this->line_size_,
core/logic/coherence/single/Controller-impl.h:74:    victim_cache_affinity_(cache_config.key_exists("victim-cache-affinity") ?
core/logic/coherence/single/Controller-impl.h:75:            sim::runtime::string_to_task_dep.at(cache_config.get_value<std::string>("victim-cache-affinity")) :
core/logic/coherence/single/Controller-impl.h:77:    max_requests_(cache_config.get_value<std::size_t>("num-ports")),
core/logic/coherence/single/Controller-impl.h:84:        stats_.hit_by_access_type[it->second] += 0;
core/logic/coherence/single/Controller-impl.h:85:        stats_.miss_by_access_type[it->second] += 0;
core/logic/coherence/single/Controller-impl.h:86:        stats_.requests_by_access_type[it->second] += 0;
core/logic/coherence/single/Controller-impl.h:107:    Log::debug2() << "[CacheL" << level_ << ":" << this->cpu_id_
core/logic/coherence/single/Controller-impl.h:121:        // UGI: perfect place to see if it is compulsory or non-compuslory miss
core/logic/coherence/single/Controller-impl.h:130:        Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_
core/logic/coherence/single/Controller-impl.h:134:        Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_
core/logic/coherence/single/Controller-impl.h:146:    Log::debug2() << "Controller::process_ack L" << this->level_ << " addr = 0x" << std::hex << ack.get_tag() << std::dec
core/logic/coherence/single/Controller-impl.h:170:                    this->line_size_));
core/logic/coherence/single/Controller-impl.h:176:            Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Sending request from pending_request queue.";
core/logic/coherence/single/Controller-impl.h:177:        } else if (this->victim_cache_.has_pending_writes()) {
core/logic/coherence/single/Controller-impl.h:185:										this->line_size_, 0, pending_write.second.get_dep_type(), pending_write.second.task_type_,
core/logic/coherence/single/Controller-impl.h:186:                    -1, 0));
core/logic/coherence/single/Controller-impl.h:192:            Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Sending request from victim cache.";
core/logic/coherence/single/Controller-impl.h:198:         Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Request from output_request_buffer";
core/logic/coherence/single/Controller-impl.h:204:        Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_
core/logic/coherence/single/Controller-impl.h:210:        Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Still " << output_request_buffer_.size() << " pending requests.";
core/logic/coherence/single/Controller-impl.h:242:        assert(ack_entry.mshr_entry_->list_.empty() == false);
core/logic/coherence/single/Controller-impl.h:243:        /* Remove the sub-entry associated to the request */
core/logic/coherence/single/Controller-impl.h:244:        assert(ack_entry.mshr_entry_->state_.value_ == MSHR::MSHRState::READY);
core/logic/coherence/single/Controller-impl.h:246:        ack_entry.mshr_entry_->list_.pop_front();
core/logic/coherence/single/Controller-impl.h:248:        /* If there are no more pending sub-entries, remove the MSHR entry */
core/logic/coherence/single/Controller-impl.h:249:        if (ack_entry.mshr_entry_->list_.empty() == true) {
core/logic/coherence/single/Controller-impl.h:251:            if (ack_entry.mshr_entry_->dirty_) {
core/logic/coherence/single/Controller-impl.h:252:                this->cache_.mark_as_dirty(ack_entry.mshr_entry_->tag_ & mask_);
core/logic/coherence/single/Controller-impl.h:254:                this->cache_.mark_as_clean(ack_entry.mshr_entry_->tag_ & mask_);
core/logic/coherence/single/Controller-impl.h:295:        return this->mshr_lookup(ack.get_tag());
core/logic/coherence/single/Controller-impl.h:331:    return this->cache_.get_free_lines();
core/logic/coherence/single/Controller-impl.h:338:    Log::warning() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Logic::cache status:";
core/logic/coherence/single/Controller-impl.h:339:    Log::warning() << " - Pending requests: " << output_request_buffer_.size()
core/logic/coherence/single/Controller-impl.h:345:        Log::warning() << " - Port " << i << " has " << output_ack_buffer_[i].size() << " pending ACKs.";
core/logic/coherence/single/Controller-impl.h:347:            Log::warning() << "   - Ack: " << ack.ack_;
core/logic/coherence/single/Controller-impl.h:350:    Log::warning() << " - MSHR status:";
core/logic/coherence/single/Controller-impl.h:352:    Log::warning() << " - EvictTable size " << evict_table_.size() << " contents:";
core/logic/coherence/single/Controller-impl.h:377:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Add output request.";
core/logic/coherence/single/Controller-impl.h:386:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Add output request for " << req;
core/logic/coherence/single/Controller-impl.h:389:        exit(-1);
core/logic/coherence/single/Controller-impl.h:403:        assert(output_ack_buffer_[in].back().mshr_entry_->list_.empty() == false);
core/logic/coherence/single/Controller-impl.h:408:            assert(i->mshr_entry_ != output_ack_buffer_[in].back().mshr_entry_);
core/logic/coherence/single/Controller-impl.h:421:    bool ret = this->cache_.insert(line_addr, CacheLine(CacheLine::ALLOCATED, request.get_dep_type(),
core/logic/coherence/single/Controller-impl.h:432:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Processing insert " << request;
core/logic/coherence/single/Controller-impl.h:439:        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] MSHR is full.";
core/logic/coherence/single/Controller-impl.h:443:    if (this->cache_.is_full(line_addr)) {
core/logic/coherence/single/Controller-impl.h:444:        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Cache is full.";
core/logic/coherence/single/Controller-impl.h:447:        if (not this->cache_.can_evict(line_addr)) {
core/logic/coherence/single/Controller-impl.h:450:            Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Cannot evict cache line.";
core/logic/coherence/single/Controller-impl.h:454:        const std::pair<engine::addr_t, CacheLine> *evict_candidate = this->cache_.inspect_evict(line_addr);
core/logic/coherence/single/Controller-impl.h:458:        if (not insertable_into_victim_cache(evict_candidate->second)) {
core/logic/coherence/single/Controller-impl.h:461:            if (is_request_buffer_full() && evict_candidate->second.dirty()) {
core/logic/coherence/single/Controller-impl.h:464:                Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Evict candidate is dirty and cannot written to victim cache or output.";
core/logic/coherence/single/Controller-impl.h:468:                std::pair<engine::addr_t, CacheLine> victim = this->cache_.evict(line_addr);
core/logic/coherence/single/Controller-impl.h:471:                    Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Evicting line from main cache.";
core/logic/coherence/single/Controller-impl.h:472:                    add_output_request(Request::op_t::WRITE, victim.first, 0, this->line_size_, 0, 0);
core/logic/coherence/single/Controller-impl.h:479:            if (victim_cache_.insert(evict_candidate->first & mask_, evict_candidate->second)) {
core/logic/coherence/single/Controller-impl.h:482:                std::pair<engine::addr_t, CacheLine> evicted = this->cache_.evict(line_addr);
core/logic/coherence/single/Controller-impl.h:483:                assert(evicted.first == evict_candidate->first);
core/logic/coherence/single/Controller-impl.h:490:                if (victim_cache_.inspect_evict(addr & mask_)->second.dirty() and is_request_buffer_full()) {
core/logic/coherence/single/Controller-impl.h:492:                    Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Cannot evict line.";
core/logic/coherence/single/Controller-impl.h:500:                        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Evicting line from victim cache..";
core/logic/coherence/single/Controller-impl.h:501:                        add_output_request(Request::op_t::WRITE, victim.first, 0, this->line_size_, 0, 0);
core/logic/coherence/single/Controller-impl.h:505:                    std::pair<engine::addr_t, CacheLine> evicted = this->cache_.evict(line_addr);
core/logic/coherence/single/Controller-impl.h:511:    Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Allocating line from " << request;
core/logic/coherence/single/Controller-impl.h:522:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] read_req for " << request;
core/logic/coherence/single/Controller-impl.h:523:		std::cout << "[CacheL" << level_ << ":" << this->cpu_id_ << "] read_req for " << request;
core/logic/coherence/single/Controller-impl.h:527:    CacheLine *line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:528:    if (line != NULL && (not line->locked())) {
core/logic/coherence/single/Controller-impl.h:529:        assert(line->state_ != CacheLine::INVALID);
core/logic/coherence/single/Controller-impl.h:530:        this->cache_.signal_event(request, cache_access_outcome_t::HIT);
core/logic/coherence/single/Controller-impl.h:533:				utils::instrumentation::SelectedInstrumentation& instrumentation = this->simulator_.get_instance()->get_instrumentation();
core/logic/coherence/single/Controller-impl.h:536:				sim::engine::cycles_t time = this->simulator_.get_clock();
core/logic/coherence/single/Controller-impl.h:538:				std::cout << "pre-op:" << request.get_op_name() << std::endl;
core/logic/coherence/single/Controller-impl.h:539:				std::cout << "pre-ip:" << request.get_ip() << std::endl;
core/logic/coherence/single/Controller-impl.h:543:            static_cast<unsigned int>(this->cpu_id_),
core/logic/coherence/single/Controller-impl.h:551:																												this->level_, 
core/logic/coherence/single/Controller-impl.h:558:        /* TODO: to add per-set statistics, use this->cache_.get_set(addr & mask) */
core/logic/coherence/single/Controller-impl.h:567:        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] read_req Restoring from victim cache.";
core/logic/coherence/single/Controller-impl.h:570:        if (not this->cache_.can_evict(line_addr)) {
core/logic/coherence/single/Controller-impl.h:574:        std::pair<engine::addr_t, CacheLine> cache_line = this->cache_.evict(line_addr);
core/logic/coherence/single/Controller-impl.h:580:        bool inserted = this->cache_.insert(line_addr, *victim_line);
core/logic/coherence/single/Controller-impl.h:596:        line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:609:    /* Cache miss -- check the MSHR for a half-miss */
core/logic/coherence/single/Controller-impl.h:621:        this->cache_.signal_event(request, cache_access_outcome_t::MISS);
core/logic/coherence/single/Controller-impl.h:625:    } else if (mshr_entry->state_.value_ == MSHR::MSHRState::READY) {
core/logic/coherence/single/Controller-impl.h:628:				utils::instrumentation::SelectedInstrumentation& instrumentation = this->simulator_.get_instance()->get_instrumentation();
core/logic/coherence/single/Controller-impl.h:631:				sim::engine::cycles_t time = this->simulator_.get_clock();
core/logic/coherence/single/Controller-impl.h:635:            static_cast<unsigned int>(this->cpu_id_),
core/logic/coherence/single/Controller-impl.h:643:																												this->level_, 
core/logic/coherence/single/Controller-impl.h:652:        assert(line->state_ == CacheLine::ALLOCATED);
core/logic/coherence/single/Controller-impl.h:657:    mshr_entry->list_.emplace_back(typename MSHR::subentry_t(in, request));
core/logic/coherence/single/Controller-impl.h:658:    if (mshr_entry->list_.size() == 1) {
core/logic/coherence/single/Controller-impl.h:659:        mshr_entry->fill_ = request.is_fill();
core/logic/coherence/single/Controller-impl.h:672:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] write_req for " << request;
core/logic/coherence/single/Controller-impl.h:682:    CacheLine *line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:683:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) { /* Cache hit */
core/logic/coherence/single/Controller-impl.h:684:        //  line->state_ = CacheLine::DIRTY;
core/logic/coherence/single/Controller-impl.h:685:        this->cache_.mark_as_dirty(line_addr);
core/logic/coherence/single/Controller-impl.h:686:        this->cache_.signal_event(request, cache_access_outcome_t::HIT);
core/logic/coherence/single/Controller-impl.h:698:        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] write_req Restoring from victim cache.";
core/logic/coherence/single/Controller-impl.h:701:        if (!this->cache_.can_evict(line_addr)) {
core/logic/coherence/single/Controller-impl.h:705:        std::pair<engine::addr_t, CacheLine> cache_line = this->cache_.evict(line_addr);
core/logic/coherence/single/Controller-impl.h:711:        bool inserted = this->cache_.insert(line_addr, *victim_line);
core/logic/coherence/single/Controller-impl.h:728:        line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:730:        // line->state_ = CacheLine::DIRTY;
core/logic/coherence/single/Controller-impl.h:731:        this->cache_.mark_as_dirty(line_addr);
core/logic/coherence/single/Controller-impl.h:741:    /* Cache miss -- check the MSHR for a half-miss */
core/logic/coherence/single/Controller-impl.h:753:        mshr_entry->dirty_ = true;
core/logic/coherence/single/Controller-impl.h:754:        this->cache_.signal_event(request, cache_access_outcome_t::MISS);
core/logic/coherence/single/Controller-impl.h:758:    } else if (mshr_entry->state_.value_ == MSHR::MSHRState::READY) {
core/logic/coherence/single/Controller-impl.h:760:        mshr_entry->dirty_ = true;
core/logic/coherence/single/Controller-impl.h:766:        mshr_entry->dirty_ = true;
core/logic/coherence/single/Controller-impl.h:768:        assert(line->state_ == CacheLine::ALLOCATED);
core/logic/coherence/single/Controller-impl.h:773:    mshr_entry->list_.emplace_back(typename MSHR::subentry_t(in, request));
core/logic/coherence/single/Controller-impl.h:774:    if (mshr_entry->list_.size() == 1)
core/logic/coherence/single/Controller-impl.h:775:        mshr_entry->fill_ = true;
core/logic/coherence/single/Controller-impl.h:789:    CacheLine *line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:790:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) {
core/logic/coherence/single/Controller-impl.h:791:        if (line->state_ == CacheLine::DIRTY) {
core/logic/coherence/single/Controller-impl.h:792:            Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Flush request genereates request.";
core/logic/coherence/single/Controller-impl.h:793:            add_output_request(Request::op_t::WRITE, line_addr, 0, this->line_size_, 
core/logic/coherence/single/Controller-impl.h:796:        this->cache_.remove(addr);
core/logic/coherence/single/Controller-impl.h:797:        Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Flush request genereates request.";
core/logic/coherence/single/Controller-impl.h:813:    CacheLine *line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:814:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) {
core/logic/coherence/single/Controller-impl.h:815:        this->cache_.remove(line_addr);
core/logic/coherence/single/Controller-impl.h:820:    Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Invalidate genereates request.";
core/logic/coherence/single/Controller-impl.h:842:    for (engine::addr_t line_addr = addr & mask_; line_addr < addr + request.get_size(); line_addr += this->line_size_) {
core/logic/coherence/single/Controller-impl.h:843:        CacheLine *line = this->cache_.access(line_addr);
core/logic/coherence/single/Controller-impl.h:845:        if (line->state_ == CacheLine::VALID) {
core/logic/coherence/single/Controller-impl.h:846:            this->cache_.remove(line_addr);
core/logic/coherence/single/Controller-impl.h:849:        assert(line->state_ != CacheLine::ALLOCATED);
core/logic/coherence/single/Controller-impl.h:850:        assert(line->state_ != CacheLine::INVALID);
core/logic/coherence/single/Controller-impl.h:852:        if (line->state_ == CacheLine::DIRTY) {
core/logic/coherence/single/Controller-impl.h:854:                Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Clear Request genereates request.";
core/logic/coherence/single/Controller-impl.h:855:                add_output_request(Request::op_t::WRITE, line_addr, 0, this->line_size_, 
core/logic/coherence/single/Controller-impl.h:858:                this->cache_.remove(line_addr);
core/logic/coherence/single/Controller-impl.h:863:        if (line->state_ == CacheLine::ALLOCATED)
core/logic/coherence/single/Controller-impl.h:868:    process_clear_request(--clear_request_list_.end());
core/logic/coherence/single/Controller-impl.h:882:    Log::debug3() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] data_ack for address 0x" << std::hex << ack.get_tag() << std::dec << " at cycle " << simulator_.get_clock();
core/logic/coherence/single/Controller-impl.h:883:    assert(mshr_entry->state_.value_ != MSHR::MSHRState::READY);
core/logic/coherence/single/Controller-impl.h:887:    for (auto i = mshr_entry->list_.begin(); i != mshr_entry->list_.end(); ++i) {
core/logic/coherence/single/Controller-impl.h:888:        assert(i->port_ < output_ack_buffer_.size());
core/logic/coherence/single/Controller-impl.h:889:        assert((i->request_.get_op() != Request::op_t::READ) || (i->request_.get_data_size() == 0) );
core/logic/coherence/single/Controller-impl.h:890:        assert((i->request_.get_op() == Request::op_t::READ) || (i->request_.get_size() == 0) );
core/logic/coherence/single/Controller-impl.h:891:        i->request_.touch(ack);
core/logic/coherence/single/Controller-impl.h:893:        add_output_ack(i->port_, Ack(i->request_), mshr_entry);
core/logic/coherence/single/Controller-impl.h:896:    CacheLine *line = this->cache_.access(addr & mask_, false);
core/logic/coherence/single/Controller-impl.h:898:    assert(line->state_ == CacheLine::ALLOCATED);
core/logic/coherence/single/Controller-impl.h:901:    mshr_entry->state_.value_ = MSHR::MSHRState::READY;
core/logic/coherence/single/Controller-impl.h:902:    stats_.miss_time.sample(simulator_.get_clock() - mshr_entry->state_.time_);
core/logic/coherence/single/Controller-impl.h:903:    stats_.miss_time_per_task_type[mshr_entry->request_.get_task_type()].sample(simulator_.get_clock() - mshr_entry->state_.time_);
core/logic/coherence/single/Controller-impl.h:909:        sim::engine::addr_t clear_addr = curr->request_.get_tag();
core/logic/coherence/single/Controller-impl.h:910:        std::size_t clear_size = curr->request_.get_size();
core/logic/coherence/single/Controller-impl.h:912:            curr->pending_read_acks_--;
core/logic/coherence/single/Controller-impl.h:913:            if (line->state_ == CacheLine::DIRTY) {
core/logic/coherence/single/Controller-impl.h:914:                Log::debug4() << "[CacheL" << level_ << ":" << this->cpu_id_ << "] Clear Request genereates request.";
core/logic/coherence/single/Controller-impl.h:916:                add_output_request(Request::op_t::WRITE, addr, 0, this->line_size_,
core/logic/coherence/single/Controller-impl.h:919:                this->cache_.remove(addr);
core/logic/coherence/single/Controller-impl.h:920:                curr->pending_write_acks_++;
core/logic/coherence/single/Controller-impl.h:944:        sim::engine::addr_t clear_addr = curr->request_.get_tag();
core/logic/coherence/single/Controller-impl.h:945:        std::size_t clear_size = curr->request_.get_size();
core/logic/coherence/single/Controller-impl.h:947:            curr->pending_write_acks_--;
core/logic/coherence/single/Controller-impl.h:974:        if ((ack.get_tag() == it->request_.get_tag()) && (ack.get_size() == it->request_.get_size())) {
core/logic/coherence/single/Controller-impl.h:975:            add_output_ack(it->port_, Ack(it->request_));
core/logic/coherence/single/Controller-impl.h:982:    exit(-1);
core/logic/coherence/single/Controller-impl.h:1041:                this->cache_.signal_event(request);
core/logic/coherence/single/Controller-impl.h:1102:    if ((mshr_entry == NULL) or (mshr_entry->state_.value_ != MSHR::MSHRState::SENT)) {
core/logic/coherence/single/Controller-impl.h:1105:        mshr_entry->state_.value_ =  MSHR::MSHRState::INSPECTED;
core/logic/coherence/single/Controller-impl.h:1122:    if (clear_request_iterator->pending_write_acks_ + clear_request_iterator->pending_read_acks_ > 0) {
core/logic/coherence/single/Controller-impl.h:1126:    if (this->last_level_) {
core/logic/coherence/single/Controller-impl.h:1127:        add_output_ack(clear_request_iterator->port_, Ack(clear_request_iterator->request_));
core/logic/coherence/single/Controller-impl.h:1130:        add_output_request(clear_request_iterator->request_);
core/logic/coherence/single/Controller-impl.h:1132:    /*if (line != NULL && line->state_ == CacheLine::ALLOCATED) return;
core/logic/coherence/single/Controller-impl.h:1134:    if (line == NULL || line->state_ == CacheLine::VALID) {
core/logic/coherence/single/Controller-impl.h:1136:            this->cache_.remove(addr);
core/logic/coherence/single/Controller-impl.h:1138:        if (this->last_level_)
core/logic/coherence/single/Controller-impl.h:1142:                add_output_ack(i->second.port_, Ack(Ack::op_t::CLEAR, i->second.addr_, i->second.size_, 0));
core/logic/coherence/single/Controller-impl.h:1148:        add_output_request(Request::op_t::CLEAR, addr, this->line_size_);
core/logic/coherence/single/Controller-impl.h:1152:    assert(line->state_ != CacheLine::INVALID);
core/logic/coherence/single/Controller-impl.h:1154:    add_output_request(Request::op_t::WRITE, addr, 0, this->line_size_);
core/logic/coherence/single/Controller-impl.h:1156:    this->cache_.remove(addr);*/
Binary file core/logic/coherence/single/.Message.h.swp matches
core/logic/coherence/single/types-impl.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/coherence/single/types-impl.h:76:#include "types-impl.h"
Binary file core/logic/coherence/single/.Controller.h.swp matches
core/logic/coherence/single/types.h:2: * Copyright - Barcelona Supercomputing Center.
core/logic/coherence/single/types.h:70:#include "types-impl.h"
core/logic/coherence/single/Controller.h:163:    /** We need this to distinguish compulsory and non-compulsory misses. */
core/logic/coherence/single/Controller.h:207:#include "Controller-impl.h"
core/logic/coherence/Controller.h:66:#include "Controller-impl.h"
simulators/Makefile.am:14:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:15:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:16:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.am:17:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:23:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:24:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:25:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.am:26:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:32:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:33:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:34:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.am:35:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:39:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:40:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:45:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:46:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:47:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.am:48:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:53:    $(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:54:    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:55:    $(top_builddir)/src/core/libnextsim-stats.la \
simulators/Makefile.am:56:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.am:61:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.am:62:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.am:63:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.am:64:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/sttmramsim/sttmramsim.cpp:52:    int number_of_cpus = conf.get_value<unsigned>("cpu-count");
simulators/sttmramsim/sttmramsim.cpp:86:        cpu[i]->dl1_ >> l1_cache[i]->in_[0];
simulators/sttmramsim/sttmramsim.cpp:87:        cpu[i]->dl1_.set_wake_up_on_read(false);
simulators/sttmramsim/sttmramsim.cpp:88:        l1_cache[i]->out_ >> tlb[i]->in_;
simulators/sttmramsim/sttmramsim.cpp:89:        l1_cache[i]->out_.set_wake_up_on_read(false);
simulators/sttmramsim/sttmramsim.cpp:90:        tlb[i]->out_ >> l2_cache[i]->in_[0];
simulators/sttmramsim/sttmramsim.cpp:91:        tlb[i]->out_.set_wake_up_on_read(false);
simulators/sttmramsim/sttmramsim.cpp:92:        l2_cache[i]->out_ >> l3_cache.in_[i];
simulators/sttmramsim/sttmramsim.cpp:93:        l2_cache[i]->out_.set_wake_up_on_read(false);
simulators/sttmramsim/trace/TraceReader.cpp:57:    if (in_stream_->eof())
simulators/sttmramsim/trace/TraceReader.cpp:98:    return in_stream_->eof();
simulators/sttmramsim/runtime/STTMRAM.cpp:75:    	if (cpu_buffers_[buffer_id]->tr_ == NULL) {
simulators/sttmramsim/runtime/STTMRAM.cpp:77:    			cpu_buffers_[buffer_id]->tr_ = new sim::trace::sttmram::TraceReader(trace_files_[buffer_id][0]);
simulators/sttmramsim/runtime/STTMRAM.cpp:84:    	trace::sttmram::mem_t mem = cpu_buffers_[buffer_id]->tr_->getNextMem();
simulators/sttmramsim/runtime/STTMRAM.cpp:85:    	if (cpu_buffers_[buffer_id]->tr_->eof()) {
simulators/sttmramsim/runtime/STTMRAM.cpp:86:    		cpu_buffers_[buffer_id]->tr_ = NULL;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:39:        ldst_queue_size_(conf.get_value<std::size_t>("ldst-size")),
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:55:	std::cout << finish_cycle_ << ":finish_cycle:STTMRAM:" << this->get_id() << std::endl;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:86:    delete i->second;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:103:    if (!memory_in_->read(mem_request)) return;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:114:    send_cycle_ = this->get_simulator().get_clock() + ceil(mem_request.instruction_count_ * cpi_ + mem_request.cache_hit_count_ * cache_hit_latency_) + 1;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:127:    if (this->get_simulator().get_clock() < send_cycle_) return;
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:142:    ldst_queue_.insert(typename ldst_queue_t::value_type(pending_request_->get_tag(), pending_request_));
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:164:        this->set_module_activity(engine::NEVER);
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:167:        	finish_cycle_ = this->get_simulator().get_clock();
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:170:    else if (this->get_simulator().get_clock() < send_cycle_)
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:172:        this->set_module_activity(send_cycle_ - this->get_simulator().get_clock());
simulators/sttmramsim/modules/cpu/STTMRAM-impl.h:176:        this->set_module_activity(engine::NEXT);
Binary file simulators/sttmramsim/modules/cpu/.STTMRAM-impl.h.swp matches
simulators/sttmramsim/modules/cpu/STTMRAM.h:90:#include "STTMRAM-impl.h"
simulators/frontendsim/trace/TraceReader.h:55:#include "TraceReader-impl.h"
simulators/frontendsim/trace/types.h:76:#include "types-impl.h"
simulators/frontendsim/frontendsim.cpp:58:    unsigned number_of_drams = conf.get_value<unsigned>("dram-count");
simulators/frontendsim/frontendsim.cpp:103:                l2_dram_bus->output(0);
simulators/frontendsim/frontendsim.cpp:104:        bus_output >> memory[i]->in_;
simulators/frontendsim/frontendsim.cpp:121:            icache_bus[i]->output(0) >> il1_cache[i]->in_[0];
simulators/frontendsim/frontendsim.cpp:122:            il1_cache[i]->out_ >> l2_cache[i]->in_[0];
simulators/frontendsim/frontendsim.cpp:123:            l2_cache[i]->out_ >> l2_dram_bus->input(0);
simulators/frontendsim/frontendsim.cpp:135:                cpu[total_cpus+i]->il1_ >> icache_bus[(total_cpus + i) / cpc]->input(0);
simulators/frontendsim/frontendsim.cpp:145:                cpu[total_cpus+i]->il1_ >> il1_cache[total_cpus+i]->in_[0];
simulators/frontendsim/frontendsim.cpp:146:                il1_cache[total_cpus+i]->out_ >> l2_cache[total_cpus+i]->in_[0];
simulators/frontendsim/frontendsim.cpp:147:                l2_cache[total_cpus+i]->out_ >> l2_dram_bus->input(0);
simulators/frontendsim/frontendsim.cpp:149:            cpu[total_cpus+i]->il1_.set_wake_up_on_read(false);
simulators/frontendsim/frontendsim.cpp:155:    mmu->load_access_profile();
simulators/frontendsim/frontendsim.cpp:158:    if (mmu_config.key_exists("output-access-profile")) {
simulators/frontendsim/frontendsim.cpp:159:        mmu->dump_access_table(mmu_config.get_value<std::string>("output-access-profile"));
simulators/frontendsim/runtime/FrontEnd.cpp:55:		counter_--;
simulators/frontendsim/runtime/FrontEnd.cpp:118:		delete it->second;
simulators/frontendsim/runtime/FrontEnd.cpp:145:			unsigned wake_up = sem->signal();
simulators/frontendsim/runtime/FrontEnd.cpp:147:				runtime_->cpu_states_[wake_up] = RUN;
simulators/frontendsim/runtime/FrontEnd.cpp:159:			ret = sem->wait(id);
simulators/frontendsim/runtime/FrontEnd.cpp:165:			ret = global_barrier_->pass();
simulators/frontendsim/runtime/FrontEnd.cpp:168:				for (unsigned i = 0; i < runtime_->cpu_states_.size(); i++)
simulators/frontendsim/runtime/FrontEnd.cpp:169:					runtime_->cpu_states_[i]=RUN;
simulators/frontendsim/runtime/FrontEnd.cpp:174:			Log::debug2() << runtime_->sim_.get_clock() << "::arbitrator - parallel_start in region["
simulators/frontendsim/runtime/FrontEnd.cpp:175:			              << runtime_->current_parallel_regions_ << "]";
simulators/frontendsim/runtime/FrontEnd.cpp:177:			runtime_->in_parallel_region_ = true;
simulators/frontendsim/runtime/FrontEnd.cpp:178:			for (unsigned i = 0; i < runtime_->cpu_states_.size(); i++)
simulators/frontendsim/runtime/FrontEnd.cpp:179:				runtime_->cpu_states_[i]=RUN;
simulators/frontendsim/runtime/FrontEnd.cpp:185:			ret = global_barrier_->pass();
simulators/frontendsim/runtime/FrontEnd.cpp:189:				runtime_->in_parallel_region_ = false;
simulators/frontendsim/runtime/FrontEnd.cpp:190:				runtime_->current_parallel_regions_++;
simulators/frontendsim/runtime/FrontEnd.cpp:191:				for (unsigned i = 0; i < runtime_->cpu_states_.size(); i++)
simulators/frontendsim/runtime/FrontEnd.cpp:192:					runtime_->cpu_states_[i]=(i == 0?RUN:(runtime_->current_parallel_regions_ == runtime_->total_parallel_regions_?RUN:WAIT));
simulators/frontendsim/runtime/FrontEnd.cpp:193:				ret = runtime_->cpu_states_[id];
simulators/frontendsim/runtime/FrontEnd.cpp:195:			Log::debug2() << runtime_->sim_.get_clock() << "::arbitrator - parallel_end["
simulators/frontendsim/runtime/FrontEnd.cpp:196:			              << global_barrier_->get_counter() << "] by id = " << id;
simulators/frontendsim/runtime/FrontEnd.cpp:238:		if (it->second)
simulators/frontendsim/runtime/FrontEnd.cpp:239:			delete (it->second);
simulators/frontendsim/runtime/FrontEnd.cpp:258:		if (bbl_stat->size_ > 0)
simulators/frontendsim/runtime/FrontEnd.cpp:259:			dictionary_.insert(std::pair< uint64_t, trace::frontend::bbl_stat_t* >(bbl_stat->id_, bbl_stat));
simulators/frontendsim/runtime/FrontEnd.cpp:275:    	sleep_bbl->id_ = UINT64_MAX;
simulators/frontendsim/runtime/FrontEnd.cpp:276:    	sleep_bbl->size_ = in_parallel_region_?1:0;
simulators/frontendsim/runtime/FrontEnd.cpp:281:    sim::trace::frontend::TraceReader* tr = cpu_buffers_[buffer_id]->tr_;
simulators/frontendsim/runtime/FrontEnd.cpp:282:    while ((buffer.space_left() > 0) && (!tr->eof())) {
simulators/frontendsim/runtime/FrontEnd.cpp:283:    	trace::frontend::event_t event = tr->get_next_event();
simulators/frontendsim/runtime/FrontEnd.cpp:285:			state_t ret = arbitrator_->handle_sync_event(buffer_id, event);
simulators/frontendsim/runtime/FrontEnd.cpp:289:    			sleep_bbl->id_ = UINT64_MAX;
simulators/frontendsim/runtime/FrontEnd.cpp:290:    			sleep_bbl->size_ = 0;
simulators/frontendsim/runtime/FrontEnd.cpp:306:        arbitrator_->inc_num_of_threads();
simulators/frontendsim/modules/cpu/ICore.h:55:    //		from branch predictor to I-cache (ref the FTQ paper)
simulators/frontendsim/modules/cpu/ICore.h:112:    double commit_bubble_;				// for managing the non-whole-number ipc_ values
simulators/frontendsim/modules/cpu/ICore.h:120:    std::size_t cache_line_width_;		// we need to to send the right I-cache req size
simulators/frontendsim/modules/cpu/ICore.h:141:    stats::Counter il1_hit_;			// hit in I-cache
simulators/frontendsim/modules/cpu/ICore.h:142:    stats::Counter il1_miss_;			// miss in I-cache
simulators/frontendsim/modules/cpu/ICore.h:145:    stats::Counter il1_bus_lat_;		// cycles spent on core-to-IL1 bus
simulators/frontendsim/modules/cpu/ICore.h:148:    stats::Counter l2_dram_bus_lat_;	// cycles spent on L2-to-DRAM bus
simulators/frontendsim/modules/cpu/ICore.h:190:#include "ICore-impl.h"
simulators/frontendsim/modules/cpu/ICore-impl.h:40:    ftq_size_(conf.get_value<std::size_t>("ftq-size")), lb_size_(conf.get_value<std::size_t>("line-buffers-size")),
simulators/frontendsim/modules/cpu/ICore-impl.h:42:    ib_counter_(0), ib_limit_(conf.get_value<std::size_t>("ib-size")),
simulators/frontendsim/modules/cpu/ICore-impl.h:43:    iq_counter_(0), iq_limit_(conf.get_value<std::size_t>("iq-size")),
simulators/frontendsim/modules/cpu/ICore-impl.h:44:    fetch_pl_depth_(conf.get_value<std::size_t>("fetch-pl-depth")), decode_rate_(conf.get_value<std::size_t>("decode-rate")),
simulators/frontendsim/modules/cpu/ICore-impl.h:46:    usefulness_bubble_(*this, "usefulness-bubble"), avg_fb_size_(*this, "avg-fb-size"),
simulators/frontendsim/modules/cpu/ICore-impl.h:47:    avg_bbl_size_(*this, "avg-bbl-size"), avg_line_util_(*this, "avg-line-util"),
simulators/frontendsim/modules/cpu/ICore-impl.h:48:    cache_line_width_(conf.get_value<std::size_t>("il1-line-width")),
simulators/frontendsim/modules/cpu/ICore-impl.h:49:    mask_(~(cache_line_width_-1)), sleep_interval_(conf.get_value<std::size_t>("sleep-interval")),
simulators/frontendsim/modules/cpu/ICore-impl.h:114:	// handling the non-whole-number ipc values...
simulators/frontendsim/modules/cpu/ICore-impl.h:120:        wake_up_step = (unsigned)floor(1.0 / (ipc_ - floor(ipc_)));
simulators/frontendsim/modules/cpu/ICore-impl.h:122:	if (this->get_simulator().get_clock() % wake_up_step == 0) {
simulators/frontendsim/modules/cpu/ICore-impl.h:132:			iq_counter_ -= max_to_commit;
simulators/frontendsim/modules/cpu/ICore-impl.h:134:		ipc_bubble_ -= commit_ins;
simulators/frontendsim/modules/cpu/ICore-impl.h:138:	// if the IQ is full, stop the front-end
simulators/frontendsim/modules/cpu/ICore-impl.h:172:		ib_counter_ -= decode_rate_;
simulators/frontendsim/modules/cpu/ICore-impl.h:176:		bubble_pl_.push(decode_rate_ - decode_ins);
simulators/frontendsim/modules/cpu/ICore-impl.h:200:            sum += vector[i].end_ - current_position + 1;
simulators/frontendsim/modules/cpu/ICore-impl.h:203:            sum += vector[i].end_ - vector[i].start_ + 1;
simulators/frontendsim/modules/cpu/ICore-impl.h:220:	if (ftq_head->s_address_ == 0) {
simulators/frontendsim/modules/cpu/ICore-impl.h:221:		over_ftq_ = true; over_cycle_ = this->get_simulator().get_clock();
simulators/frontendsim/modules/cpu/ICore-impl.h:226:	if (ftq_head->s_address_ == 1) {
simulators/frontendsim/modules/cpu/ICore-impl.h:227:		next_cycle_ = this->get_simulator().get_clock() + sleep_interval_;
simulators/frontendsim/modules/cpu/ICore-impl.h:236:	while ((it != ftq_.end()) && (*it)->allocated_)
simulators/frontendsim/modules/cpu/ICore-impl.h:243:			if (((*alloc)->s_address_ & mask_) == ((*it)->s_address_ & mask_)) {
simulators/frontendsim/modules/cpu/ICore-impl.h:244:				(*it)->allocated_ = true;
simulators/frontendsim/modules/cpu/ICore-impl.h:245:	            (*it)->ready_ = (*alloc)->ready_;
simulators/frontendsim/modules/cpu/ICore-impl.h:246:				(*it)->lb_id_ = (*alloc)->lb_id_;
simulators/frontendsim/modules/cpu/ICore-impl.h:247:				lb_counters_[(*it)->lb_id_]++;
simulators/frontendsim/modules/cpu/ICore-impl.h:255:	if (ftq_head->ready_) {
simulators/frontendsim/modules/cpu/ICore-impl.h:257:		while (ib_counter_ < ib_limit_ && ftq_head->curr_instr_ < ftq_head->instr_.size()) {
simulators/frontendsim/modules/cpu/ICore-impl.h:260:			ftq_head->curr_instr_++;
simulators/frontendsim/modules/cpu/ICore-impl.h:262:		if (ftq_head->curr_instr_ == ftq_head->instr_.size()) {
simulators/frontendsim/modules/cpu/ICore-impl.h:264:			util_matrix_[ftq_head->lb_id_].push_back(ICore::interval_t(ftq_head->s_address_, ftq_head->length_));
simulators/frontendsim/modules/cpu/ICore-impl.h:265:			lb_counters_[ftq_head->lb_id_]--;
simulators/frontendsim/modules/cpu/ICore-impl.h:267:			avg_fb_size_.sample(1.0 * ftq_head->length_);
simulators/frontendsim/modules/cpu/ICore-impl.h:268:			if (lb_counters_[ftq_head->lb_id_] == 0) {
simulators/frontendsim/modules/cpu/ICore-impl.h:269:				free_lb_list_.push_back(ftq_head->lb_id_);
simulators/frontendsim/modules/cpu/ICore-impl.h:270:				sample_utilization(ftq_head->lb_id_, ftq_head->length_);
simulators/frontendsim/modules/cpu/ICore-impl.h:279:	if (it != ftq_.end() && *alloc == *it && !free_lb_list_.empty() && pending_request_ == NULL && (*it)->s_address_ > 1) {
simulators/frontendsim/modules/cpu/ICore-impl.h:282:		(*it)->allocated_ = true;
simulators/frontendsim/modules/cpu/ICore-impl.h:283:		(*it)->lb_id_ = free_lb_id;
simulators/frontendsim/modules/cpu/ICore-impl.h:285:		pending_request_ = new typename T::Request(this->get_simulator().get_clock(), T::Request::op_t::READ, id_, (*it)->s_address_, cache_line_width_);
simulators/frontendsim/modules/cpu/ICore-impl.h:296:	if (!bbl_in_->read(current_bbl_)) {
simulators/frontendsim/modules/cpu/ICore-impl.h:304:	if (current_bbl_->id_ == UINT64_MAX) {
simulators/frontendsim/modules/cpu/ICore-impl.h:314:		avg_bbl_size_.sample(current_bbl_->size_in_bytes_);
simulators/frontendsim/modules/cpu/ICore-impl.h:335:		engine::addr_t start_address = current_bbl_->start_address_;
simulators/frontendsim/modules/cpu/ICore-impl.h:337:			start_address += current_bbl_->ins_[i];
simulators/frontendsim/modules/cpu/ICore-impl.h:341:		if (current_instr_ >= current_bbl_->ins_.size())
simulators/frontendsim/modules/cpu/ICore-impl.h:345:		engine::addr_t next_address = start_address + current_bbl_->ins_[current_instr_];
simulators/frontendsim/modules/cpu/ICore-impl.h:347:			if (current_instr_ < current_bbl_->ins_.size()-1) {
simulators/frontendsim/modules/cpu/ICore-impl.h:348:				start_address += current_bbl_->ins_[current_instr_++];
simulators/frontendsim/modules/cpu/ICore-impl.h:354:					start_address = current_bbl_->start_address_;
simulators/frontendsim/modules/cpu/ICore-impl.h:355:					next_address = start_address + current_bbl_->ins_[current_instr_];
simulators/frontendsim/modules/cpu/ICore-impl.h:357:						if (current_bbl_->ins_.size() > 1) {
simulators/frontendsim/modules/cpu/ICore-impl.h:358:							start_address += current_bbl_->ins_[current_instr_++];
simulators/frontendsim/modules/cpu/ICore-impl.h:370:		while ((start_tag == ((start_address + current_bbl_->ins_[current_instr_]) & mask_))) {
simulators/frontendsim/modules/cpu/ICore-impl.h:371:			ftq_entry->instr_.push_back(current_bbl_->ins_[current_instr_]);
simulators/frontendsim/modules/cpu/ICore-impl.h:372:			start_address += current_bbl_->ins_[current_instr_];
simulators/frontendsim/modules/cpu/ICore-impl.h:374:			if (current_instr_ >= current_bbl_->ins_.size()) {
simulators/frontendsim/modules/cpu/ICore-impl.h:377:				if (start_address != current_bbl_->start_address_)
simulators/frontendsim/modules/cpu/ICore-impl.h:382:		for (unsigned i = 0; i < ftq_entry->instr_.size(); i++)
simulators/frontendsim/modules/cpu/ICore-impl.h:383:			ftq_entry->length_ += ftq_entry->instr_[i];
simulators/frontendsim/modules/cpu/ICore-impl.h:409:            if ((*iter)->get_tag() == ack.get_tag()) {
simulators/frontendsim/modules/cpu/ICore-impl.h:410:                req_time = (*iter)->get_time_log()[0];
simulators/frontendsim/modules/cpu/ICore-impl.h:419:        for (it = ftq_.begin(); it != ftq_.end() && (*it)->allocated_; it++) {
simulators/frontendsim/modules/cpu/ICore-impl.h:420:            if (((*it)->s_address_ & mask_) == (ack.get_tag() & mask_)) {
simulators/frontendsim/modules/cpu/ICore-impl.h:421:                (*it)->ready_ = true;
simulators/frontendsim/modules/cpu/ICore-impl.h:484:        this->set_module_activity(engine::NEVER);
simulators/frontendsim/modules/cpu/ICore-impl.h:485:    } else if (this->get_simulator().get_clock() < next_cycle_) {
simulators/frontendsim/modules/cpu/ICore-impl.h:486:        this->set_module_activity(next_cycle_ - this->get_simulator().get_clock());
simulators/frontendsim/modules/cpu/ICore-impl.h:488:        this->set_module_activity(engine::NEXT);
simulators/frontendsim/modules/cpu/ICore-impl.h:538:				//          -------------     -------     -------
simulators/frontendsim/modules/cpu/ICore-impl.h:542:				il1_bus_lat_ += ack.get_stamp(3) - ack.get_stamp(1) + ack.get_stamp(7) - ack.get_stamp(6);
simulators/frontendsim/modules/cpu/ICore-impl.h:544:				il1_cache_lat_ += ack.get_stamp(5) - ack.get_stamp(4);
simulators/frontendsim/modules/cpu/ICore-impl.h:551:				//          -------------     -------     -------     -------      --------
simulators/frontendsim/modules/cpu/ICore-impl.h:555:				il1_bus_lat_ += ack.get_stamp(3) - ack.get_stamp(1) + ack.get_stamp(11) - ack.get_stamp(10);
simulators/frontendsim/modules/cpu/ICore-impl.h:557:				il1_cache_lat_ += ack.get_stamp(5) - ack.get_stamp(4) + ack.get_stamp(9) - ack.get_stamp(8);
simulators/frontendsim/modules/cpu/ICore-impl.h:559:				l2_cache_lat_ += ack.get_stamp(7) - ack.get_stamp(6);
simulators/frontendsim/modules/cpu/ICore-impl.h:567:				il1_bus_lat_ += ack.get_stamp(3) - ack.get_stamp(1) + ack.get_stamp(19) - ack.get_stamp(18);
simulators/frontendsim/modules/cpu/ICore-impl.h:569:				il1_cache_lat_ += ack.get_stamp(5) - ack.get_stamp(4) + ack.get_stamp(17) - ack.get_stamp(16);
simulators/frontendsim/modules/cpu/ICore-impl.h:571:				l2_cache_lat_ += ack.get_stamp(7) - ack.get_stamp(6) + ack.get_stamp(15) - ack.get_stamp(14);
simulators/frontendsim/modules/cpu/ICore-impl.h:572:				// L2-to-DRAM bus latency forward and backward
simulators/frontendsim/modules/cpu/ICore-impl.h:573:				l2_dram_bus_lat_ += ack.get_stamp(9) - ack.get_stamp(8) + ack.get_stamp(13) - ack.get_stamp(12);
simulators/frontendsim/modules/cpu/ICore-impl.h:574:				dram_lat_ += ack.get_stamp(11) - ack.get_stamp(10);
simulators/frontendsim/modules/cpu/ICore-impl.h:589:				il1_cache_lat_ += ack.get_stamp(3) - ack.get_stamp(1);
simulators/frontendsim/modules/cpu/ICore-impl.h:595:				il1_cache_lat_ += ack.get_stamp(3) - ack.get_stamp(1) + ack.get_stamp(7) - ack.get_stamp(6);
simulators/frontendsim/modules/cpu/ICore-impl.h:596:				l2_cache_lat_ += ack.get_stamp(5) - ack.get_stamp(4);
simulators/frontendsim/modules/cpu/ICore-impl.h:603:				il1_cache_lat_ += ack.get_stamp(3) - ack.get_stamp(1) + ack.get_stamp(15) - ack.get_stamp(14);
simulators/frontendsim/modules/cpu/ICore-impl.h:604:				l2_cache_lat_ += ack.get_stamp(5) - ack.get_stamp(4) + ack.get_stamp(13) - ack.get_stamp(12);
simulators/frontendsim/modules/cpu/ICore-impl.h:605:				l2_dram_bus_lat_ += ack.get_stamp(7) - ack.get_stamp(5) + ack.get_stamp(11) - ack.get_stamp(10);
simulators/frontendsim/modules/cpu/ICore-impl.h:606:				dram_lat_ += ack.get_stamp(9) - ack.get_stamp(8);
simulators/frontendsim/logic/coherence/single/TimeController.h:65:    /** We need this to distinguish compulsory and non-compulsory misses. */
simulators/frontendsim/logic/coherence/single/TimeController.h:168:#include "TimeController-impl.h"
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:87:    mask_(~(this->line_size_ - 1)),
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:88:    mshr_(sim::engine::Config(simulator.get_config(), cache_config.get_value<std::string>("mshr")), this->line_size_),
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:120:        assert(output_ack_buffer_[in].back().mshr_entry_->list_.empty() == false);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:125:            assert(i->mshr_entry_ != output_ack_buffer_[in].back().mshr_entry_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:137:    bool ret = this->cache_.insert(addr & mask_, CacheLine(CacheLine::ALLOCATED));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:149:    if (this->cache_.is_full(addr & mask_) == false) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:155:    std::pair<engine::addr_t, CacheLine> ret = this->cache_.evict(addr & mask_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:166:    /* Send the write-back request */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:167:    add_output_request(Request(Request::op_t::WRITE, ret.first, 0, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:176:    Log::debug4() << "Controller::process_request; L" << this->level_ << " addr=" << request.get_tag()
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:185:        // UGI: perfect place to see if it is compulsory or non-compuslory miss
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:249:        assert(ack_entry.mshr_entry_->list_.empty() == false);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:250:        /* Remove the sub-entry associated to the request */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:251:        assert(ack_entry.mshr_entry_->state_.value_ == MSHR::MSHRState::READY);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:252:        assert(ack_entry.mshr_entry_->list_.begin()->request_.get_tag() == ack_entry.ack_.get_tag());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:253:        assert(ack_entry.mshr_entry_->list_.begin()->request_.get_size() == ack_entry.ack_.get_size());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:255:                ack_entry.mshr_entry_->list_.begin()->request_.get_size() == ack_entry.ack_.get_data_size());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:256:        ack_entry.mshr_entry_->list_.pop_front();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:258:        /* If there are no more pending sub-entries, remove the MSHR entry */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:259:        if (ack_entry.mshr_entry_->list_.empty() == true) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:275:    CacheLine *line = this->cache_.access(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:276:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:277:        assert(line->state_ != CacheLine::INVALID);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:279:        /* TODO: to add per-set statistics, use this->cache_.get_set(addr & mask) */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:282:    /* Cache miss -- check the MSHR for a half-miss */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:286:        if (!this->cache_.can_evict(addr)) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:303:        assert(line->state_ == CacheLine::ALLOCATED);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:306:    mshr_entry->list_.emplace_back(typename MSHR::subentry_t(input_port, request));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:311:            mshr_entry->state_ = MSHR::MSHRState::PENDING;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:326:    CacheLine *line = this->cache_.access(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:327:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) { /* Cache hit */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:328:        line->state_ = CacheLine::DIRTY;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:332:    /* Cache miss -- check MSHR for a half-miss */
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:336:        if (!this->cache_.can_evict(addr)) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:347:        assert(line->state_ == CacheLine::ALLOCATED);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:350:    mshr_entry->list_.emplace_back(typename MSHR::subentry_t(input_port, request));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:354:            mshr_entry->state_ = MSHR::MSHRState::PENDING;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:370:    CacheLine *line = this->cache_.access(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:371:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:372:        if (line->state_ == CacheLine::DIRTY) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:373:            add_output_request(Request(Request::op_t::WRITE, line_addr, 0, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:375:        this->cache_.remove(addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:391:    CacheLine *line = this->cache_.access(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:392:    if (line != NULL && line->state_ != CacheLine::ALLOCATED) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:393:        this->cache_.remove(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:420:    for (engine::addr_t line_addr = addr & mask_; line_addr < addr + size; line_addr += this->line_size_) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:421:        CacheLine *line = this->cache_.access(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:423:        if (line->state_ == CacheLine::VALID) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:424:            this->cache_.remove(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:427:        assert(line->state_ != CacheLine::ALLOCATED);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:428:        assert(line->state_ != CacheLine::INVALID);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:430:        if (line->state_ == CacheLine::DIRTY) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:432:                add_output_request(Request(Request::op_t::WRITE, line_addr, 0, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:434:                this->cache_.remove(line_addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:439:        if (line->state_ == CacheLine::ALLOCATED)
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:444:    process_clear_request(--clear_request_list_.end());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:455:    if ((mshr_entry == NULL) or (mshr_entry->state_.value_ != MSHR::MSHRState::SENT)) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:458:        mshr_entry->state_.value_ = MSHR::MSHRState::INSPECTED;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:478:    if (clear_request_iterator->pending_write_acks_ + clear_request_iterator->pending_read_acks_ > 0) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:482:    if (this->last_level_) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:483:        add_output_ack(clear_request_iterator->port_, Ack(clear_request_iterator->request_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:486:        add_output_request(Request(clear_request_iterator->request_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:499:    assert(mshr_entry->state_.value_ != MSHR::MSHRState::READY);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:505:    for (auto i = mshr_entry->list_.begin(); i != mshr_entry->list_.end(); ++i) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:506:        assert(i->port_ < output_ack_buffer_.size());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:507:        assert((i->request_.get_op() != Request::op_t::READ) || (i->request_.get_data_size() == 0) );
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:508:        assert((i->request_.get_op() == Request::op_t::READ) || (i->request_.get_size() == 0) );
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:509:        if (i->request_.get_op() == Request::op_t::WRITE) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:513:        i->request_.touch(ack);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:515:        add_output_ack(i->port_, Ack(i->request_), mshr_entry);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:518:    CacheLine *line = this->cache_.access(addr & mask_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:523:    assert(line->state_ == CacheLine::ALLOCATED);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:524:    line->state_ = (write_count > 0) ? CacheLine::DIRTY : CacheLine::VALID;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:526:    mshr_entry->state_.value_ = MSHR::MSHRState::READY;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:527:    stats_.miss_time.sample(simulator_.get_clock() - mshr_entry->state_.time_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:528:    stats_.miss_time_per_task_type[mshr_entry->request_.get_task_type()].sample(simulator_.get_clock() - mshr_entry->state_.time_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:534:        sim::engine::addr_t clear_addr = curr->request_.get_tag();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:535:        std::size_t clear_size = curr->request_.get_size();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:537:            curr->pending_read_acks_--;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:538:            if (line->state_ == CacheLine::DIRTY) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:539:                add_output_request(Request(Request::op_t::WRITE, addr, 0, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:541:                this->cache_.remove(addr);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:542:                curr->pending_write_acks_++;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:559:    if (i->second != NULL)
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:562:        typename MSHR::entry_t *mshr_entry = mshr_.lookup_entry(i->second->tag_);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:563:        assert(mshr_entry == i->second);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:566:        mshr_evict_ack(*(i->second));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:576:        sim::engine::addr_t clear_addr = curr->request_.get_tag();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:577:        std::size_t clear_size = curr->request_.get_size();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:579:            curr->pending_write_acks_--;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:603:        if ((ack.get_tag() == it->request_.get_tag()) && (ack.get_size() == it->request_.get_size())) {
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:604:            add_output_ack(it->port_, Ack(it->request_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:611:    exit(-1);
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:626:            add_output_request(Request(Request::op_t::READ, mshr_entry.tag_, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:647:            add_output_request(Request(Request::op_t::READ, mshr_entry.tag_, this->line_size_));
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:674:        return this->mshr_lookup(ack.get_tag());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:676:        return this->evict_table_lookup(ack.get_tag());
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:718:    return this->cache_.get_free_lines();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:725:    Log::warning() << " - Logic::cache status:";
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:726:    Log::warning() << " - Pending requests: " << output_request_buffer_.size();
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:731:        Log::warning() << " - Port " << i << " has " << output_ack_buffer_[i].size() << " pending ACKs.";
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:733:            Log::warning() << "   - Ack: " << ack.ack_;
simulators/frontendsim/logic/coherence/single/TimeController-impl.h:736:    Log::warning() << " - MSHR status:";
simulators/Makefile.in:4:# Copyright (C) 1994-2013 Free Software Foundation, Inc.
simulators/Makefile.in:18:am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
simulators/Makefile.in:20:  case $${target_option-} in \
simulators/Makefile.in:23:              "target option '$${target_option-}' specified" >&2; \
simulators/Makefile.in:46:      *=*|--*) continue;; \
simulators/Makefile.in:47:        -*I) strip_trailopt 'I'; skip_next=yes;; \
simulators/Makefile.in:48:      -*I?*) strip_trailopt 'I';; \
simulators/Makefile.in:49:        -*O) strip_trailopt 'O'; skip_next=yes;; \
simulators/Makefile.in:50:      -*O?*) strip_trailopt 'O';; \
simulators/Makefile.in:51:        -*l) strip_trailopt 'l'; skip_next=yes;; \
simulators/Makefile.in:52:      -*l?*) strip_trailopt 'l';; \
simulators/Makefile.in:53:      -[dEDm]) skip_next=yes;; \
simulators/Makefile.in:54:      -[JT]) skip_next=yes;; \
simulators/Makefile.in:68:install_sh_DATA = $(install_sh) -c -m 644
simulators/Makefile.in:69:install_sh_PROGRAM = $(install_sh) -c
simulators/Makefile.in:70:install_sh_SCRIPT = $(install_sh) -c
simulators/Makefile.in:96:mkinstalldirs = $(install_sh) -d
simulators/Makefile.in:107:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:108:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:109:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:110:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:113:am__v_lt_0 = --silent
simulators/Makefile.in:119:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:120:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:124:memsim_DEPENDENCIES = $(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:125:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:126:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:127:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:133:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:134:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:135:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:136:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:142:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:143:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:144:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:145:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:158:DEFAULT_INCLUDES = -I.@am__isrc@
simulators/Makefile.in:161:am__mv = mv -f
simulators/Makefile.in:164:LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/Makefile.in:165:	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
simulators/Makefile.in:173:CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/Makefile.in:174:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
simulators/Makefile.in:175:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/Makefile.in:186:RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
simulators/Makefile.in:187:	ctags-recursive dvi-recursive html-recursive info-recursive \
simulators/Makefile.in:188:	install-data-recursive install-dvi-recursive \
simulators/Makefile.in:189:	install-exec-recursive install-html-recursive \
simulators/Makefile.in:190:	install-info-recursive install-pdf-recursive \
simulators/Makefile.in:191:	install-ps-recursive install-recursive installcheck-recursive \
simulators/Makefile.in:192:	installdirs-recursive pdf-recursive ps-recursive \
simulators/Makefile.in:193:	tags-recursive uninstall-recursive
simulators/Makefile.in:197:    *) (install-info --version) >/dev/null 2>&1;; \
simulators/Makefile.in:199:RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
simulators/Makefile.in:200:  distclean-recursive maintainer-clean-recursive
simulators/Makefile.in:205:AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
simulators/Makefile.in:208:# Read a list of newline-separated strings from the standard input,
simulators/Makefile.in:222:    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
simulators/Makefile.in:234:  while test -n "$$dir1"; do \
simulators/Makefile.in:235:    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
simulators/Makefile.in:238:        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
simulators/Makefile.in:239:        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
simulators/Makefile.in:241:        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
simulators/Makefile.in:243:          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
simulators/Makefile.in:250:    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
simulators/Makefile.in:407:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:408:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:409:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:410:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:417:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:418:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:419:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:420:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:427:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:428:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:429:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:430:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:434:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:435:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:441:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:442:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:443:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:444:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:450:    $(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:451:    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:452:    $(top_builddir)/src/core/libnextsim-stats.la \
simulators/Makefile.in:453:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:459:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/Makefile.in:460:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/Makefile.in:461:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/Makefile.in:462:	$(top_builddir)/src/core/libnextsim-utils.la
simulators/Makefile.in:464:all: all-recursive
simulators/Makefile.in:472:	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
simulators/Makefile.in:473:	        && { if test -f $@; then exit 0; else break; fi; }; \
simulators/Makefile.in:477:	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/simulators/Makefile'; \
simulators/Makefile.in:479:	  $(AUTOMAKE) --gnu src/simulators/Makefile
simulators/Makefile.in:484:	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
simulators/Makefile.in:491:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/Makefile.in:494:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/Makefile.in:496:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/Makefile.in:498:install-binPROGRAMS: $(bin_PROGRAMS)
simulators/Makefile.in:500:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
simulators/Makefile.in:501:	if test -n "$$list"; then \
simulators/Makefile.in:507:	while read p p1; do if test -f $$p \
simulators/Makefile.in:508:	 || test -f $$p1 \
simulators/Makefile.in:511:	sed -e 'p;s,.*/,,;n;h' \
simulators/Makefile.in:512:	    -e 's|.*|.|' \
simulators/Makefile.in:513:	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
simulators/Makefile.in:522:	    test -z "$$files" || { \
simulators/Makefile.in:523:	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
simulators/Makefile.in:524:	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
simulators/Makefile.in:528:uninstall-binPROGRAMS:
simulators/Makefile.in:530:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
simulators/Makefile.in:532:	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
simulators/Makefile.in:533:	      -e 's/$$/$(EXEEXT)/' \
simulators/Makefile.in:535:	test -n "$$list" || exit 0; \
simulators/Makefile.in:536:	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
simulators/Makefile.in:537:	cd "$(DESTDIR)$(bindir)" && rm -f $$files
simulators/Makefile.in:539:clean-binPROGRAMS:
simulators/Makefile.in:540:	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
simulators/Makefile.in:541:	echo " rm -f" $$list; \
simulators/Makefile.in:542:	rm -f $$list || exit $$?; \
simulators/Makefile.in:543:	test -n "$(EXEEXT)" || exit 0; \
simulators/Makefile.in:545:	echo " rm -f" $$list; \
simulators/Makefile.in:546:	rm -f $$list
simulators/Makefile.in:575:	@rm -f fastmemsim/fastmemsim$(EXEEXT)
simulators/Makefile.in:588:	@rm -f helloworldsim$(EXEEXT)
simulators/Makefile.in:609:	@rm -f memsim$(EXEEXT)
simulators/Makefile.in:631:	@rm -f simplememsim$(EXEEXT)
simulators/Makefile.in:661:	@rm -f sttmramsim/sttmramsim$(EXEEXT)
simulators/Makefile.in:664:mostlyclean-compile:
simulators/Makefile.in:665:	-rm -f *.$(OBJEXT)
simulators/Makefile.in:666:	-rm -f examples/helloworldsim/*.$(OBJEXT)
simulators/Makefile.in:667:	-rm -f examples/memsim/*.$(OBJEXT)
simulators/Makefile.in:668:	-rm -f examples/memsim/runtime/*.$(OBJEXT)
simulators/Makefile.in:669:	-rm -f examples/simplememsim/*.$(OBJEXT)
simulators/Makefile.in:670:	-rm -f examples/simplememsim/runtime/*.$(OBJEXT)
simulators/Makefile.in:671:	-rm -f fastmemsim/*.$(OBJEXT)
simulators/Makefile.in:672:	-rm -f fastmemsim/runtime/*.$(OBJEXT)
simulators/Makefile.in:673:	-rm -f fastmemsim/trace/*.$(OBJEXT)
simulators/Makefile.in:674:	-rm -f sttmramsim/*.$(OBJEXT)
simulators/Makefile.in:675:	-rm -f sttmramsim/runtime/*.$(OBJEXT)
simulators/Makefile.in:676:	-rm -f sttmramsim/trace/*.$(OBJEXT)
simulators/Makefile.in:678:distclean-compile:
simulators/Makefile.in:679:	-rm -f *.tab.c
simulators/Makefile.in:695:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/Makefile.in:699:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<
simulators/Makefile.in:703:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
simulators/Makefile.in:707:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
simulators/Makefile.in:711:@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/Makefile.in:715:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<
simulators/Makefile.in:717:mostlyclean-libtool:
simulators/Makefile.in:718:	-rm -f *.lo
simulators/Makefile.in:720:clean-libtool:
simulators/Makefile.in:721:	-rm -rf .libs _libs
simulators/Makefile.in:722:	-rm -rf fastmemsim/.libs fastmemsim/_libs
simulators/Makefile.in:723:	-rm -rf sttmramsim/.libs sttmramsim/_libs
simulators/Makefile.in:739:	target=`echo $@ | sed s/-recursive//`; \
simulators/Makefile.in:741:	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
simulators/Makefile.in:748:	    local_target="$$target-am"; \
simulators/Makefile.in:756:	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
simulators/Makefile.in:757:	fi; test -z "$$fail"
simulators/Makefile.in:760:	$(am__define_uniq_tagged_files); mkid -fID $$unique
simulators/Makefile.in:761:tags: tags-recursive
simulators/Makefile.in:764:tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/Makefile.in:767:	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
simulators/Makefile.in:768:	  include_option=--etags-include; \
simulators/Makefile.in:771:	  include_option=--include; \
simulators/Makefile.in:776:	    test ! -f $$subdir/TAGS || \
simulators/Makefile.in:782:	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
simulators/Makefile.in:783:	  test -n "$$unique" || unique=$$empty_fix; \
simulators/Makefile.in:784:	  if test $$# -gt 0; then \
simulators/Makefile.in:792:ctags: ctags-recursive
simulators/Makefile.in:795:ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/Makefile.in:797:	test -z "$(CTAGS_ARGS)$$unique" \
simulators/Makefile.in:804:	  && gtags -i $(GTAGS_ARGS) "$$here"
simulators/Makefile.in:805:cscopelist: cscopelist-recursive
simulators/Makefile.in:807:cscopelist-am: $(am__tagged_files)
simulators/Makefile.in:814:	  if test -f "$$i"; then \
simulators/Makefile.in:821:distclean-tags:
simulators/Makefile.in:822:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
simulators/Makefile.in:829:	  sed -e "s|^$$srcdirstrip/||;t" \
simulators/Makefile.in:830:	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
simulators/Makefile.in:834:			   sort -u` ;; \
simulators/Makefile.in:837:	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
simulators/Makefile.in:838:	  if test -d $$d/$$file; then \
simulators/Makefile.in:839:	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
simulators/Makefile.in:840:	    if test -d "$(distdir)/$$file"; then \
simulators/Makefile.in:841:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/Makefile.in:843:	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
simulators/Makefile.in:844:	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
simulators/Makefile.in:845:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/Makefile.in:847:	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
simulators/Makefile.in:849:	    test -f "$(distdir)/$$file" \
simulators/Makefile.in:850:	    || cp -p $$d/$$file "$(distdir)/$$file" \
simulators/Makefile.in:857:	      || test -d "$(distdir)/$$subdir" \
simulators/Makefile.in:879:check-am: all-am
simulators/Makefile.in:880:check: check-recursive
simulators/Makefile.in:881:all-am: Makefile $(PROGRAMS)
simulators/Makefile.in:882:installdirs: installdirs-recursive
simulators/Makefile.in:883:installdirs-am:
simulators/Makefile.in:885:	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
simulators/Makefile.in:887:install: install-recursive
simulators/Makefile.in:888:install-exec: install-exec-recursive
simulators/Makefile.in:889:install-data: install-data-recursive
simulators/Makefile.in:890:uninstall: uninstall-recursive
simulators/Makefile.in:892:install-am: all-am
simulators/Makefile.in:893:	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
simulators/Makefile.in:895:installcheck: installcheck-recursive
simulators/Makefile.in:896:install-strip:
simulators/Makefile.in:897:	if test -z '$(STRIP)'; then \
simulators/Makefile.in:899:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/Makefile.in:903:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/Makefile.in:906:mostlyclean-generic:
simulators/Makefile.in:908:clean-generic:
simulators/Makefile.in:910:distclean-generic:
simulators/Makefile.in:911:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
simulators/Makefile.in:912:	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
simulators/Makefile.in:913:	-rm -f examples/helloworldsim/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:914:	-rm -f examples/helloworldsim/$(am__dirstamp)
simulators/Makefile.in:915:	-rm -f examples/memsim/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:916:	-rm -f examples/memsim/$(am__dirstamp)
simulators/Makefile.in:917:	-rm -f examples/memsim/runtime/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:918:	-rm -f examples/memsim/runtime/$(am__dirstamp)
simulators/Makefile.in:919:	-rm -f examples/simplememsim/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:920:	-rm -f examples/simplememsim/$(am__dirstamp)
simulators/Makefile.in:921:	-rm -f examples/simplememsim/runtime/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:922:	-rm -f examples/simplememsim/runtime/$(am__dirstamp)
simulators/Makefile.in:923:	-rm -f fastmemsim/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:924:	-rm -f fastmemsim/$(am__dirstamp)
simulators/Makefile.in:925:	-rm -f fastmemsim/runtime/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:926:	-rm -f fastmemsim/runtime/$(am__dirstamp)
simulators/Makefile.in:927:	-rm -f fastmemsim/trace/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:928:	-rm -f fastmemsim/trace/$(am__dirstamp)
simulators/Makefile.in:929:	-rm -f sttmramsim/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:930:	-rm -f sttmramsim/$(am__dirstamp)
simulators/Makefile.in:931:	-rm -f sttmramsim/runtime/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:932:	-rm -f sttmramsim/runtime/$(am__dirstamp)
simulators/Makefile.in:933:	-rm -f sttmramsim/trace/$(DEPDIR)/$(am__dirstamp)
simulators/Makefile.in:934:	-rm -f sttmramsim/trace/$(am__dirstamp)
simulators/Makefile.in:936:maintainer-clean-generic:
simulators/Makefile.in:939:clean: clean-recursive
simulators/Makefile.in:941:clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
simulators/Makefile.in:943:distclean: distclean-recursive
simulators/Makefile.in:944:	-rm -rf examples/helloworldsim/$(DEPDIR) examples/memsim/$(DEPDIR) examples/memsim/runtime/$(DEPDIR) examples/simplememsim/$(DEPDIR) examples/simplememsim/runtime/$(DEPDIR) fastmemsim/$(DEPDIR) fastmemsim/runtime/$(DEPDIR) fastmemsim/trace/$(DEPDIR) sttmramsim/$(DEPDIR) sttmramsim/runtime/$(DEPDIR) sttmramsim/trace/$(DEPDIR)
simulators/Makefile.in:945:	-rm -f Makefile
simulators/Makefile.in:946:distclean-am: clean-am distclean-compile distclean-generic \
simulators/Makefile.in:947:	distclean-tags
simulators/Makefile.in:949:dvi: dvi-recursive
simulators/Makefile.in:951:dvi-am:
simulators/Makefile.in:953:html: html-recursive
simulators/Makefile.in:955:html-am:
simulators/Makefile.in:957:info: info-recursive
simulators/Makefile.in:959:info-am:
simulators/Makefile.in:961:install-data-am:
simulators/Makefile.in:963:install-dvi: install-dvi-recursive
simulators/Makefile.in:965:install-dvi-am:
simulators/Makefile.in:967:install-exec-am: install-binPROGRAMS
simulators/Makefile.in:969:install-html: install-html-recursive
simulators/Makefile.in:971:install-html-am:
simulators/Makefile.in:973:install-info: install-info-recursive
simulators/Makefile.in:975:install-info-am:
simulators/Makefile.in:977:install-man:
simulators/Makefile.in:979:install-pdf: install-pdf-recursive
simulators/Makefile.in:981:install-pdf-am:
simulators/Makefile.in:983:install-ps: install-ps-recursive
simulators/Makefile.in:985:install-ps-am:
simulators/Makefile.in:987:installcheck-am:
simulators/Makefile.in:989:maintainer-clean: maintainer-clean-recursive
simulators/Makefile.in:990:	-rm -rf examples/helloworldsim/$(DEPDIR) examples/memsim/$(DEPDIR) examples/memsim/runtime/$(DEPDIR) examples/simplememsim/$(DEPDIR) examples/simplememsim/runtime/$(DEPDIR) fastmemsim/$(DEPDIR) fastmemsim/runtime/$(DEPDIR) fastmemsim/trace/$(DEPDIR) sttmramsim/$(DEPDIR) sttmramsim/runtime/$(DEPDIR) sttmramsim/trace/$(DEPDIR)
simulators/Makefile.in:991:	-rm -f Makefile
simulators/Makefile.in:992:maintainer-clean-am: distclean-am maintainer-clean-generic
simulators/Makefile.in:994:mostlyclean: mostlyclean-recursive
simulators/Makefile.in:996:mostlyclean-am: mostlyclean-compile mostlyclean-generic \
simulators/Makefile.in:997:	mostlyclean-libtool
simulators/Makefile.in:999:pdf: pdf-recursive
simulators/Makefile.in:1001:pdf-am:
simulators/Makefile.in:1003:ps: ps-recursive
simulators/Makefile.in:1005:ps-am:
simulators/Makefile.in:1007:uninstall-am: uninstall-binPROGRAMS
simulators/Makefile.in:1009:.MAKE: $(am__recursive_targets) install-am install-strip
simulators/Makefile.in:1011:.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
simulators/Makefile.in:1012:	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
simulators/Makefile.in:1013:	cscopelist-am ctags ctags-am distclean distclean-compile \
simulators/Makefile.in:1014:	distclean-generic distclean-libtool distclean-tags distdir dvi \
simulators/Makefile.in:1015:	dvi-am html html-am info info-am install install-am \
simulators/Makefile.in:1016:	install-binPROGRAMS install-data install-data-am install-dvi \
simulators/Makefile.in:1017:	install-dvi-am install-exec install-exec-am install-html \
simulators/Makefile.in:1018:	install-html-am install-info install-info-am install-man \
simulators/Makefile.in:1019:	install-pdf install-pdf-am install-ps install-ps-am \
simulators/Makefile.in:1020:	install-strip installcheck installcheck-am installdirs \
simulators/Makefile.in:1021:	installdirs-am maintainer-clean maintainer-clean-generic \
simulators/Makefile.in:1022:	mostlyclean mostlyclean-compile mostlyclean-generic \
simulators/Makefile.in:1023:	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
simulators/Makefile.in:1024:	uninstall-am uninstall-binPROGRAMS
simulators/tasksim/Makefile.am:10:	$(top_builddir)/src/core/libnextsim-engine.la \
simulators/tasksim/Makefile.am:11:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/Makefile.am:12:	$(top_builddir)/src/core/libnextsim-stats.la \
simulators/tasksim/Makefile.am:13:	$(top_builddir)/src/core/libnextsim-utils.la \
simulators/tasksim/Makefile.am:14:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/tasksim/Makefile.am:15:	$(top_builddir)/src/simulators/tasksim/runtime/libnextsim-runtime-tasksim.la
simulators/tasksim/Makefile.am:35:testing_CXXFLAGS = -DTESTING_VERSION $(AM_CXXFLAGS)
simulators/tasksim/tasksim.cpp:178:            mem_cpus[i]->dl1_ >> private_caches[0][i]->in_[0];
simulators/tasksim/tasksim.cpp:180:                private_caches[private_cache_levels - 1][i]->out_ >> cache_bus->input(0);
simulators/tasksim/tasksim.cpp:182:                private_caches[private_cache_levels - 1][i]->out_ >> shared_caches[0]->in_[i];
simulators/tasksim/tasksim.cpp:184:                private_caches[private_cache_levels - 1][i]->out_ >> memory->in_;
simulators/tasksim/tasksim.cpp:188:                mem_cpus[i]->dl1_ >> cache_bus->input(0);
simulators/tasksim/tasksim.cpp:190:                mem_cpus[i]->dl1_ >> shared_caches[0]->in_[i];
simulators/tasksim/tasksim.cpp:192:                mem_cpus[i]->dl1_ >> memory->in_;
simulators/tasksim/tasksim.cpp:198:            private_caches[i - 1][j]->out_ >> private_caches[i][j]->in_[0];
simulators/tasksim/tasksim.cpp:203:            cache_bus->output(0) >> shared_caches[0]->in_[0];
simulators/tasksim/tasksim.cpp:205:            cache_bus->output(0) >> memory->in_;
simulators/tasksim/tasksim.cpp:210:        shared_caches[i - 1]->out_ >> shared_caches[i]->in_[0];
simulators/tasksim/tasksim.cpp:213:        shared_caches[shared_cache_levels - 1]->out_ >> memory->in_;
simulators/tasksim/tasksim.cpp:215:    // We check that CPU request-size is the same as L1 Cache line size.
simulators/tasksim/tasksim.cpp:216:    if (conf.get_value<unsigned>("MemCPU", "request-size") !=
simulators/tasksim/tasksim.cpp:217:            conf.get_value<unsigned>("DL1Cache", "line-size")) {
simulators/tasksim/tasksim.cpp:218:        std::cerr << "[ERROR] MemCPU.request-size != DL1Cache.line-size: "
simulators/tasksim/tasksim.cpp:219:                  << conf.get_value<unsigned>("MemCPU", "request-size") << " != "
simulators/tasksim/tasksim.cpp:220:                  << conf.get_value<unsigned>("DL1Cache", "line-size") << std::endl;
simulators/tasksim/tasksim.cpp:281:    std::cout << "Performance mode (-O3)" << std::endl;
simulators/tasksim/tasksim.cpp:312:    std::cerr << "\t-h, --help        Print this help and exit" << std::endl;
simulators/tasksim/tasksim.cpp:313:    std::cerr << "\t-V, --version     Print version information and exit" << std::endl;
simulators/tasksim/tasksim.cpp:314:    std::cerr << "\t-c, --config=VAL  Override configuration file option, formatted as section.key=value" << std::endl;
simulators/tasksim/tasksim.cpp:327:    for (int opt = 0; opt != -1; opt = getopt_long(argc, argv, short_options, long_options, nullptr)) {
simulators/tasksim/tasksim.cpp:341:                    std::cerr << "Error: Wrong argument for -c \"" << optarg << "\", "
simulators/tasksim/tasksim.cpp:343:                    exit(-1);
simulators/tasksim/tasksim.cpp:347:                auto find_whitespace = [](int c) -> bool { return std::isspace(c); };
simulators/tasksim/tasksim.cpp:358:    if (argc - optind < 2 or argc - optind > 3) {
simulators/tasksim/tasksim.cpp:360:        exit(-1);
simulators/tasksim/runtime/RuntimeThread.cpp:63:    _id = _thread->getId();
simulators/tasksim/runtime/RuntimeThread.cpp:88:    nanos::myThread = rtth->getThread();
simulators/tasksim/runtime/RuntimeThread.cpp:91:    ((nanos::ext::SimSmpThread*)rtth->getThread())->work(MAIN_TASK_ID);
simulators/tasksim/runtime/RuntimeThread.cpp:105:    sim::runtime::bridge.getThreadState((reinterpret_cast<RuntimeThread*>(rtThread))->getId())->setToHalted();
simulators/tasksim/runtime/RuntimeThread.cpp:107:    rtThread->restoreSimState();
simulators/tasksim/runtime/RuntimeThread.cpp:114:    rtth->_thread->_state = state;
simulators/tasksim/runtime/RuntimeThread.cpp:122:    if (rtth->_started) {
simulators/tasksim/runtime/RuntimeThread.cpp:123:        rtth->_thread->_simState = state;
simulators/tasksim/runtime/RuntimeThread.cpp:125:        rtth->_masterState = state;
simulators/tasksim/runtime/RuntimeThread.cpp:126:        rtth->_masterStateSaved = true;
simulators/tasksim/runtime/RuntimeThread.cpp:141:    _thread->_myThread = nanos::myThread;
simulators/tasksim/runtime/RuntimeThread.cpp:148:        assert(_thread->_simState != NULL);
simulators/tasksim/runtime/RuntimeThread.cpp:149:        state2restore = _thread->_simState;
simulators/tasksim/runtime/RuntimeThread.cpp:157:    assert(_thread->_myThread != NULL);
simulators/tasksim/runtime/RuntimeThread.cpp:158:    nanos::myThread = _thread->_myThread;
simulators/tasksim/runtime/RuntimeThread.cpp:165:                  << _thread->_myThread << ' ' << _thread->getId();
simulators/tasksim/runtime/RuntimeThread.cpp:166:    assert(_thread->_state != NULL);
simulators/tasksim/runtime/RuntimeThread.cpp:169:                   _thread->_state,
simulators/tasksim/runtime/Makefile.am:4:noinst_LTLIBRARIES = libnextsim-runtime-tasksim-smp.la
simulators/tasksim/runtime/Makefile.am:9:nanox_ldflags += -L$(nanox_lib_path)/debug -Wl,-rpath,$(nanox_lib_path)/debug -lnanox-c
simulators/tasksim/runtime/Makefile.am:11:nanox_ldflags += -L$(nanox_lib_path)/performance -Wl,-rpath,$(nanox_lib_path)/performance -lnanox-c
simulators/tasksim/runtime/Makefile.am:20:libnextsim_runtime_tasksim_smp_la_CXXFLAGS = $(AM_CXXFLAGS) -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.am:23:libnextsim_runtime_tasksim_smp_la_LIBADD = -lnanox-c -lnanox-ompss -lnanox-pe-smp \
simulators/tasksim/runtime/Makefile.am:24:    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.am:28:noinst_LTLIBRARIES += libnextsim-modeselectorpolicies.la
simulators/tasksim/runtime/Makefile.am:36:    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.am:39:noinst_LTLIBRARIES += libnextsim-runtime-tasksim.la libnextsim-runtime-tasksim-testing.la
simulators/tasksim/runtime/Makefile.am:45:libnextsim_runtime_tasksim_la_CXXFLAGS = $(AM_CXXFLAGS) -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.am:52:    libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.am:53:    libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.am:54:    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.am:55:    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.am:57:libnextsim_runtime_tasksim_testing_la_CXXFLAGS = $(AM_CXXFLAGS) -DTESTING_VERSION -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.am:64:    libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.am:65:    libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.am:66:    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.am:67:    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/NanoxBridge.h:102:    /** Returns the i-th ThreadState */
simulators/tasksim/runtime/NanoxBridge.h:104:    /** Invokes start() on the i-th RuntimeThread */
simulators/tasksim/runtime/NanoxBridge.h:106:    /** Sets the i-th RuntimeThread to tsth */
simulators/tasksim/runtime/NanoxBridge.h:108:    /** Returns the i-th RuntimeThread */
simulators/tasksim/runtime/OmpSs.cpp:131:    mode_selector_->end_burst_phase(signature);
simulators/tasksim/runtime/OmpSs.cpp:132:    get_memory_module(thread_id)->set_current_wd_id(signature.task_id_);
simulators/tasksim/runtime/OmpSs.cpp:138:    thread_states_[thread_id]->start_of_cycle();
simulators/tasksim/runtime/OmpSs.cpp:147:    mem_buffer_t *buffer = &thread_buffers_[buffer_id]->mem_;
simulators/tasksim/runtime/OmpSs.cpp:162:    success = buffer->push_event(mitem_task_type);
simulators/tasksim/runtime/OmpSs.cpp:174:        for (size_t i = 0; i < deps->size(); i++) {
simulators/tasksim/runtime/OmpSs.cpp:177:            /* TODO: revisit this part to support non-continuous arrays*/
simulators/tasksim/runtime/OmpSs.cpp:188:                                                            total_size - 1;
simulators/tasksim/runtime/OmpSs.cpp:244:            // void* stack_ptr = memory_subtraces_[buffer_id]->stack;
simulators/tasksim/runtime/OmpSs.cpp:246:            mitem.data_ = memory_subtraces_[buffer_id]->name_id;
simulators/tasksim/runtime/OmpSs.cpp:247:            // mitem.data_ = thread_buffers_[buffer_id]->current_phase_.burst_id;
simulators/tasksim/runtime/OmpSs.cpp:252:                insert_task_end_instruction(buffer, memory_subtraces_[buffer_id]->name_id);
simulators/tasksim/runtime/OmpSs.cpp:259:            dynamic_cast<memory_cpu_t*>(buffer.get_remote_module())->drain();
simulators/tasksim/runtime/OmpSs.cpp:260:            thread_buffers_[buffer_id]->current_phase_ = {/*burst_id*/(unsigned)-1, sim::trace::ts::NO_SUBTRACE, /*duration*/ 0};
simulators/tasksim/runtime/OmpSs.cpp:265:        if (mem_cpu->drain()) {
simulators/tasksim/runtime/OmpSs.cpp:266:            const unsigned int wd_id = memory_subtraces_[buffer_id]->wd_id;
simulators/tasksim/runtime/OmpSs.cpp:268:                    memory_subtraces_[buffer_id]->name_id,
simulators/tasksim/runtime/OmpSs.cpp:271:                    mem_cpu->get_ins_current_phase(),
simulators/tasksim/runtime/OmpSs.cpp:274:            mode_selector_->end_detailed_phase(signature);
simulators/tasksim/runtime/OmpSs.cpp:275:            mem_cpu->set_current_wd_id(0);
simulators/tasksim/runtime/OmpSs.cpp:276:            get_burst_module(buffer_id)->drain_resume();
simulators/tasksim/runtime/OmpSs.cpp:304:    return dynamic_cast<memory_cpu_t*>(thread_buffers_[thread_id]->mem_.get_remote_module());
simulators/tasksim/runtime/OmpSs.cpp:312:    return dynamic_cast<burst_cpu_t*>(thread_buffers_[thread_id]->burst_.get_remote_module());
simulators/tasksim/runtime/OmpSs.cpp:335:    sim::engine::drain_state_t burst_state = get_drain_state(thread_buffers_[thread_id]->burst_);
simulators/tasksim/runtime/OmpSs.cpp:336:    sim::engine::drain_state_t mem_state = get_drain_state(thread_buffers_[thread_id]->mem_);
simulators/tasksim/runtime/OmpSs.cpp:344:        get_burst_module(thread_id)->drain_resume();
simulators/tasksim/runtime/OmpSs.cpp:349:        get_memory_module(thread_id)->drain_resume();
simulators/tasksim/runtime/OmpSs.cpp:413:            exit(-1);
simulators/tasksim/runtime/OmpSs.cpp:438:    } else if (name_id == 0 && master_speedup_ratio_ < 1e-12) {
simulators/tasksim/runtime/OmpSs.cpp:451:    thread_buffers_[thread_id]->current_phase_ = event.u.phase;
simulators/tasksim/runtime/OmpSs.cpp:453:        thread_buffers_[thread_id]->current_phase_.burst_id = 0;
simulators/tasksim/runtime/OmpSs.cpp:462:            get_burst_module(thread_id)->get_instrumentation_id(),
simulators/tasksim/runtime/OmpSs.cpp:474:    SimulationMode mode = mode_selector_->get_mode(signature);
simulators/tasksim/runtime/OmpSs.cpp:484:        engine::cycles_t predicted_cycles =  mode_selector_->predict_cycle_count(signature);
simulators/tasksim/runtime/OmpSs.cpp:490:        bool ok = thread_buffers_[thread_id]->burst_.push_event(event.u.phase);
simulators/tasksim/runtime/OmpSs.cpp:495:        if (get_burst_module(thread_id)->drain()) {
simulators/tasksim/runtime/OmpSs.cpp:496:            get_memory_module(thread_id)->drain_resume();
simulators/tasksim/runtime/OmpSs.cpp:498:        // on new detailed phase, tell the mem-aware cpu module about the stack pointer (if it changes)
simulators/tasksim/runtime/OmpSs.cpp:500:        if (memory_subtraces_[thread_id] == NULL or memory_subtraces_[thread_id]->stack != task_stack_ptr) {
simulators/tasksim/runtime/OmpSs.cpp:501:            get_memory_module(thread_id)->context_switch(reinterpret_cast<engine::addr_t>(task_stack_ptr));
simulators/tasksim/runtime/OmpSs.cpp:507:        fill_mem_buffer(thread_buffers_[thread_id]->mem_);
simulators/tasksim/runtime/OmpSs.cpp:510:    get_memory_module(thread_id)->set_current_wd_id(signature.task_id_);
simulators/tasksim/runtime/OmpSs.cpp:591:            thread_states_[thread_id]->getThread()->getThread())->set_lock(locks, address);
simulators/tasksim/runtime/OmpSs.cpp:601:            thread_states_[thread_id]->getThread()->getThread())->unset_lock(locks, address);
simulators/tasksim/runtime/OmpSs.cpp:615:            get_burst_module(thread_id)->drain();
simulators/tasksim/runtime/OmpSs.cpp:618:            get_memory_module(thread_id)->drain();
simulators/tasksim/runtime/OmpSs.cpp:626:    mode_selector_->task_start(task_id, thread_id, task_type);
simulators/tasksim/runtime/OmpSs.cpp:629:    get_burst_module(thread_id)->print_hardware_counters(sim_.get_clock());
simulators/tasksim/runtime/OmpSs.cpp:631:        get_memory_module(thread_id)->print_hardware_counters(sim_.get_clock(), true);
simulators/tasksim/runtime/OmpSs.cpp:641:    mode_selector_->task_end(task_id, thread_id, task_type);
simulators/tasksim/runtime/OmpSs.cpp:645:        get_memory_module(thread_id)->print_hardware_counters(sim_.get_clock(), true);
simulators/tasksim/runtime/OmpSs.cpp:648:    burst_cpu->print_hardware_counters(sim_.get_clock());
simulators/tasksim/runtime/OmpSs.cpp:652:            burst_cpu->get_instrumentation_id(),
simulators/tasksim/runtime/OmpSs.cpp:663:            thread_states_[thread_id]->getThread()->getThread())->schedule_delay();
simulators/tasksim/runtime/OmpSs.cpp:675:        return dynamic_cast<memory_cpu_t*>(buffer.get_remote_module())->get_drain_state();
simulators/tasksim/runtime/OmpSs.cpp:684:        return dynamic_cast<burst_cpu_t*>(buffer.get_remote_module())->get_drain_state();
simulators/tasksim/runtime/OmpSs.cpp:692:    unsigned int new_thread_id = nanos::myThread->getId();
simulators/tasksim/runtime/OmpSs.cpp:695:        thread_states_[thread_id]->thread_migration_delay();
simulators/tasksim/runtime/OmpSs.cpp:723:            get_burst_module(thread_id)->get_instrumentation_id(),
simulators/tasksim/runtime/OmpSs.cpp:731:            get_burst_module(thread_id)->get_instrumentation_id(),
simulators/tasksim/runtime/smp/SimSmpProcessor.cpp:95:    std::cout << Sim::cycle << ": Cpu " << _cpuModule->getTaskCpu()->cpu().tid()
simulators/tasksim/runtime/smp/SimSmpProcessor.cpp:107://    unsigned int cache_level = _cpuModule->getTaskCpu()->numprefetched(inputDeps,sizeBytes);
simulators/tasksim/runtime/smp/SimSmpProcessor.cpp:115:////            std::cout << "----------copyDataIn (prefetch)  data from wd " << wd.getId() << std::endl;
simulators/tasksim/runtime/smp/SimSmpProcessor.cpp:116://            _cpuModule->getTaskCpu()->prefetchData(cd.getAddress(), cd.getSize(),cache_level);
simulators/tasksim/runtime/smp/SimSmpProcessor.cpp:130://            _cpuModule->getTaskCpu()->flushData(cd.getAddress(), cd.getSize());
simulators/tasksim/runtime/smp/SimSmpThread.cpp:58:    self->run();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:99:    reinterpret_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToHalted();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:116:    dynamic_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToIdle();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:117:    sim::runtime::bridge.getRuntimeThread(getId())->restoreSimState();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:118:    dynamic_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToRunning();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:123:    dynamic_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToIdle();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:124:    sim::runtime::bridge.getRuntimeThread(getId())->restoreSimState();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:125:    dynamic_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToRunning();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:131:    SimSmpDD & dd = dynamic_cast<SimSmpDD&>(oldWD->getActiveDevice());
simulators/tasksim/runtime/smp/SimSmpThread.cpp:142:    Log::debug() << "(" << myThread->getId() << "): inlineWork task "
simulators/tasksim/runtime/smp/SimSmpThread.cpp:145:    unsigned int task_id = ((SimSmpDD&)getCurrentWD()->getActiveDevice()).getTaskId();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:152:    Log::debug() << "(" << myThread->getId() << "): switchTo task "
simulators/tasksim/runtime/smp/SimSmpThread.cpp:153:                 << ((SimSmpDD&)wd->getActiveDevice()).getTaskId();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:155:    ensure(wd->hasActiveDevice(), "WD has no active SMP device");
simulators/tasksim/runtime/smp/SimSmpThread.cpp:156:    SimSmpDD &dd = (SimSmpDD&)wd->getActiveDevice();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:168:    Log::debug() << "(" << myThread->getId() << "): exitTo task "
simulators/tasksim/runtime/smp/SimSmpThread.cpp:169:                 << ((SimSmpDD&)wd->getActiveDevice()).getTaskId();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:171:    ensure(wd->hasActiveDevice(), "WD has no active SMP device");
simulators/tasksim/runtime/smp/SimSmpThread.cpp:172:    SimSmpDD &dd = (SimSmpDD&)wd->getActiveDevice();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:197:    Log::debug() << "(" << tsth->getId() << "): start task " << task_id;
simulators/tasksim/runtime/smp/SimSmpThread.cpp:198:    sim::runtime::bridge.getSimRuntime()->task_start(task_id, tsth->getId());
simulators/tasksim/runtime/smp/SimSmpThread.cpp:200:        stillHasEvents = sim::runtime::bridge.getSimRuntime()->process_next_event(task_id, tsth->getId());
simulators/tasksim/runtime/smp/SimSmpThread.cpp:204:            sim::runtime::bridge.getRuntimeThread(tsth->getId())->restoreSimState();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:207:    Log::debug() << "(" << tsth->getId() << "): finished task " << task_id;
simulators/tasksim/runtime/smp/SimSmpThread.cpp:208:    sim::runtime::bridge.getSimRuntime()->task_end(task_id, tsth->getId());
simulators/tasksim/runtime/smp/SimSmpThread.cpp:216:        reinterpret_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToLockWait();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:217:        sim::runtime::bridge.getRuntimeThread(getId())->restoreSimState();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:218:        reinterpret_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToRunning();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:220:    locks[address] = tsth->getId() + 1;
simulators/tasksim/runtime/smp/SimSmpThread.cpp:227:    assert(locks.at(address) == static_cast<unsigned>(tsth->getId() + 1));
simulators/tasksim/runtime/smp/SimSmpThread.cpp:235:    reinterpret_cast<SimSmpProcessor*>(runningOn())->getThreadState()->thread_migration_delay();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:236:    sim::runtime::bridge.getRuntimeThread(getId())->restoreSimState();
simulators/tasksim/runtime/smp/SimSmpThread.cpp:237:    reinterpret_cast<SimSmpProcessor*>(runningOn())->getThreadState()->setToRunning();
simulators/tasksim/runtime/smp/SimSmpPlugin.h:58:#include "simulators/tasksim/runtime/smp/SimSmpPlugin-impl.h"
simulators/tasksim/runtime/smp/SimSmpDD.h:74:    // self-assignment: ok
simulators/tasksim/runtime/smp/SimSmpPlugin.cpp:36:#include "arch/unix-os/osallocator_decl.hpp"
simulators/tasksim/runtime/smp/SimSmpPlugin.cpp:37:#include "arch/unix-os/os.hpp"
simulators/tasksim/runtime/smp/SimSmpPlugin.cpp:113:            _cpuActiveMask.set(cpu->getBindingId());
simulators/tasksim/runtime/smp/SimSmpPlugin.cpp:115:        // cpu->setNUMANode( getNodeOfPE( cpu->getId() ) );
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.cpp:71:        exit(-1);
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.cpp:142:    sim::engine::cycles_t cycle_count = sim_.get_clock() - start_cycle_detailed_[thread_id];
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.cpp:221:    PhaseSignature sig(0, task_type_id, thread_id, -1, 0, ipc, task_id);
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.cpp:377:            std::cout << pair.first << " - " << pair.second << std::endl;
simulators/tasksim/runtime/mode_selector_policies/SampleHistory.cpp:72:           if (it->inst_count_ > 0) {
simulators/tasksim/runtime/mode_selector_policies/SampleHistory.cpp:73:               ipc_samples.push_back(it->ipc_);
simulators/tasksim/runtime/mode_selector_policies/SampleHistory.cpp:87:            if (it->inst_count_ > 0) {
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.h:136:    // Switch all non-idle threads to state
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.h:142:    // Check if cut-off condition is fulfilled and we start fast forwarding with the task instances we have so far
simulators/tasksim/runtime/mode_selector_policies/TaskPoint.h:148:    // Read per-task IPCs from IPC input file
simulators/tasksim/runtime/mode_selector_policies/Memory.cpp:73:    last_cycle_count_[task_type] = sim_.get_clock() -
simulators/tasksim/runtime/NanoxBridge.cpp:104:    // arico DEBUG: std::cout << Sim::cycle << ": waiting for task group" << ((WD*)nanos_current_wd())->getId() << "\n";
simulators/tasksim/runtime/NanoxBridge.cpp:123:    for (std::vector<sim::runtime::ThreadState*>::iterator it = thread_states_->begin();
simulators/tasksim/runtime/NanoxBridge.cpp:124:        it != thread_states_->end(); ++it) {
simulators/tasksim/runtime/NanoxBridge.cpp:126:        assert((*it)->getThread() != static_cast<RuntimeThread*>(0));
simulators/tasksim/runtime/NanoxBridge.cpp:128:        // TG         << (*it)->getThread(0) << std::endl;
simulators/tasksim/runtime/NanoxBridge.cpp:129:        runtime_threads_.push_back((*it)->getThread());
simulators/tasksim/runtime/NanoxBridge.cpp:146:    assert(i < thread_states_->size());
simulators/tasksim/runtime/NanoxBridge.cpp:154:    runtime_threads_[i]->start();
simulators/tasksim/runtime/NanoxBridge.cpp:163:    runtime_threads_[i]->setRuntimeThread(reinterpret_cast<void*>(tsth));
simulators/tasksim/runtime/RuntimeThread.h:63:    RuntimeThread(): _id(-1), _thread(NULL), _started(false), _masterState(0), _masterStateSaved(false) { }
simulators/tasksim/runtime/Makefile.in:4:# Copyright (C) 1994-2013 Free Software Foundation, Inc.
simulators/tasksim/runtime/Makefile.in:19:am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
simulators/tasksim/runtime/Makefile.in:21:  case $${target_option-} in \
simulators/tasksim/runtime/Makefile.in:24:              "target option '$${target_option-}' specified" >&2; \
simulators/tasksim/runtime/Makefile.in:47:      *=*|--*) continue;; \
simulators/tasksim/runtime/Makefile.in:48:        -*I) strip_trailopt 'I'; skip_next=yes;; \
simulators/tasksim/runtime/Makefile.in:49:      -*I?*) strip_trailopt 'I';; \
simulators/tasksim/runtime/Makefile.in:50:        -*O) strip_trailopt 'O'; skip_next=yes;; \
simulators/tasksim/runtime/Makefile.in:51:      -*O?*) strip_trailopt 'O';; \
simulators/tasksim/runtime/Makefile.in:52:        -*l) strip_trailopt 'l'; skip_next=yes;; \
simulators/tasksim/runtime/Makefile.in:53:      -*l?*) strip_trailopt 'l';; \
simulators/tasksim/runtime/Makefile.in:54:      -[dEDm]) skip_next=yes;; \
simulators/tasksim/runtime/Makefile.in:55:      -[JT]) skip_next=yes;; \
simulators/tasksim/runtime/Makefile.in:69:install_sh_DATA = $(install_sh) -c -m 644
simulators/tasksim/runtime/Makefile.in:70:install_sh_PROGRAM = $(install_sh) -c
simulators/tasksim/runtime/Makefile.in:71:install_sh_SCRIPT = $(install_sh) -c
simulators/tasksim/runtime/Makefile.in:83:@ENABLE_DEBUG_TRUE@@ENABLE_NANOX_TRUE@am__append_1 = -L$(nanox_lib_path)/debug -Wl,-rpath,$(nanox_lib_path)/debug -lnanox-c
simulators/tasksim/runtime/Makefile.in:84:@ENABLE_DEBUG_FALSE@@ENABLE_NANOX_TRUE@am__append_2 = -L$(nanox_lib_path)/performance -Wl,-rpath,$(nanox_lib_path)/performance -lnanox-c
simulators/tasksim/runtime/Makefile.in:97:mkinstalldirs = $(install_sh) -d
simulators/tasksim/runtime/Makefile.in:101:@ENABLE_NANOX_TRUE@libnextsim_modeselectorpolicies_la_DEPENDENCIES = $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:117:am__v_lt_0 = --silent
simulators/tasksim/runtime/Makefile.in:120:@ENABLE_NANOX_TRUE@libnextsim_runtime_tasksim_smp_la_DEPENDENCIES = $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:124:@ENABLE_NANOX_TRUE@am_libnextsim_runtime_tasksim_smp_la_OBJECTS = smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo \
simulators/tasksim/runtime/Makefile.in:125:@ENABLE_NANOX_TRUE@	smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo \
simulators/tasksim/runtime/Makefile.in:126:@ENABLE_NANOX_TRUE@	smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo \
simulators/tasksim/runtime/Makefile.in:127:@ENABLE_NANOX_TRUE@	smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo
simulators/tasksim/runtime/Makefile.in:131:	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
simulators/tasksim/runtime/Makefile.in:134:	$(LDFLAGS) -o $@
simulators/tasksim/runtime/Makefile.in:137:@ENABLE_NANOX_TRUE@	libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.in:138:@ENABLE_NANOX_TRUE@	libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.in:139:@ENABLE_NANOX_TRUE@	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.in:140:@ENABLE_NANOX_TRUE@	$(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:143:@ENABLE_NANOX_TRUE@am_libnextsim_runtime_tasksim_testing_la_OBJECTS = libnextsim_runtime_tasksim_testing_la-OmpSs.lo \
simulators/tasksim/runtime/Makefile.in:144:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_testing_la-ModeSelector.lo \
simulators/tasksim/runtime/Makefile.in:145:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo \
simulators/tasksim/runtime/Makefile.in:146:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo
simulators/tasksim/runtime/Makefile.in:150:	--tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link \
simulators/tasksim/runtime/Makefile.in:152:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/tasksim/runtime/Makefile.in:155:@ENABLE_NANOX_TRUE@	libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.in:156:@ENABLE_NANOX_TRUE@	libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.in:157:@ENABLE_NANOX_TRUE@	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.in:158:@ENABLE_NANOX_TRUE@	$(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:162:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_la-OmpSs.lo \
simulators/tasksim/runtime/Makefile.in:163:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_la-ModeSelector.lo \
simulators/tasksim/runtime/Makefile.in:164:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_la-NanoxBridge.lo \
simulators/tasksim/runtime/Makefile.in:165:@ENABLE_NANOX_TRUE@	libnextsim_runtime_tasksim_la-RuntimeThread.lo
simulators/tasksim/runtime/Makefile.in:168:libnextsim_runtime_tasksim_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
simulators/tasksim/runtime/Makefile.in:169:	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
simulators/tasksim/runtime/Makefile.in:171:	$(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/tasksim/runtime/Makefile.in:185:DEFAULT_INCLUDES = -I.@am__isrc@
simulators/tasksim/runtime/Makefile.in:188:am__mv = mv -f
simulators/tasksim/runtime/Makefile.in:191:LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/tasksim/runtime/Makefile.in:192:	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
simulators/tasksim/runtime/Makefile.in:200:CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/tasksim/runtime/Makefile.in:201:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
simulators/tasksim/runtime/Makefile.in:202:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/tasksim/runtime/Makefile.in:218:    *) (install-info --version) >/dev/null 2>&1;; \
simulators/tasksim/runtime/Makefile.in:226:am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
simulators/tasksim/runtime/Makefile.in:231:  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
simulators/tasksim/runtime/Makefile.in:243:  test -z "$$files" \
simulators/tasksim/runtime/Makefile.in:244:    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
simulators/tasksim/runtime/Makefile.in:245:    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
simulators/tasksim/runtime/Makefile.in:246:         $(am__cd) "$$dir" && rm -f $$files; }; \
simulators/tasksim/runtime/Makefile.in:251:# Read a list of newline-separated strings from the standard input,
simulators/tasksim/runtime/Makefile.in:265:    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
simulators/tasksim/runtime/Makefile.in:425:@ENABLE_NANOX_TRUE@	libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.in:426:@ENABLE_NANOX_TRUE@	libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.in:427:@ENABLE_NANOX_TRUE@	libnextsim-runtime-tasksim.la \
simulators/tasksim/runtime/Makefile.in:428:@ENABLE_NANOX_TRUE@	libnextsim-runtime-tasksim-testing.la
simulators/tasksim/runtime/Makefile.in:437:@ENABLE_NANOX_TRUE@libnextsim_runtime_tasksim_smp_la_CXXFLAGS = $(AM_CXXFLAGS) -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.in:439:@ENABLE_NANOX_TRUE@libnextsim_runtime_tasksim_smp_la_LIBADD = -lnanox-c -lnanox-ompss -lnanox-pe-smp \
simulators/tasksim/runtime/Makefile.in:440:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:450:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:456:@ENABLE_NANOX_TRUE@libnextsim_runtime_tasksim_la_CXXFLAGS = $(AM_CXXFLAGS) -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.in:464:@ENABLE_NANOX_TRUE@    libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.in:465:@ENABLE_NANOX_TRUE@    libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.in:466:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.in:467:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:469:@ENABLE_NANOX_TRUE@libnextsim_runtime_tasksim_testing_la_CXXFLAGS = $(AM_CXXFLAGS) -DTESTING_VERSION -DSMP_SUPPORTS_ULT
simulators/tasksim/runtime/Makefile.in:477:@ENABLE_NANOX_TRUE@    libnextsim-runtime-tasksim-smp.la \
simulators/tasksim/runtime/Makefile.in:478:@ENABLE_NANOX_TRUE@    libnextsim-modeselectorpolicies.la \
simulators/tasksim/runtime/Makefile.in:479:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/runtime/Makefile.in:480:@ENABLE_NANOX_TRUE@    $(top_builddir)/src/core/libnextsim-utils.la
simulators/tasksim/runtime/Makefile.in:482:all: all-am
simulators/tasksim/runtime/Makefile.in:490:	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
simulators/tasksim/runtime/Makefile.in:491:	        && { if test -f $@; then exit 0; else break; fi; }; \
simulators/tasksim/runtime/Makefile.in:495:	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/simulators/tasksim/runtime/Makefile'; \
simulators/tasksim/runtime/Makefile.in:497:	  $(AUTOMAKE) --gnu src/simulators/tasksim/runtime/Makefile
simulators/tasksim/runtime/Makefile.in:502:	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
simulators/tasksim/runtime/Makefile.in:509:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/runtime/Makefile.in:512:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/runtime/Makefile.in:514:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/runtime/Makefile.in:517:clean-noinstLTLIBRARIES:
simulators/tasksim/runtime/Makefile.in:518:	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
simulators/tasksim/runtime/Makefile.in:522:	      sort -u`; \
simulators/tasksim/runtime/Makefile.in:523:	test -z "$$locs" || { \
simulators/tasksim/runtime/Makefile.in:524:	  echo rm -f $${locs}; \
simulators/tasksim/runtime/Makefile.in:525:	  rm -f $${locs}; \
simulators/tasksim/runtime/Makefile.in:546:libnextsim-modeselectorpolicies.la: $(libnextsim_modeselectorpolicies_la_OBJECTS) $(libnextsim_modeselectorpolicies_la_DEPENDENCIES) $(EXTRA_libnextsim_modeselectorpolicies_la_DEPENDENCIES) 
simulators/tasksim/runtime/Makefile.in:554:smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo:  \
simulators/tasksim/runtime/Makefile.in:556:smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo:  \
simulators/tasksim/runtime/Makefile.in:558:smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo:  \
simulators/tasksim/runtime/Makefile.in:560:smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo:  \
simulators/tasksim/runtime/Makefile.in:563:libnextsim-runtime-tasksim-smp.la: $(libnextsim_runtime_tasksim_smp_la_OBJECTS) $(libnextsim_runtime_tasksim_smp_la_DEPENDENCIES) $(EXTRA_libnextsim_runtime_tasksim_smp_la_DEPENDENCIES) 
simulators/tasksim/runtime/Makefile.in:566:libnextsim-runtime-tasksim-testing.la: $(libnextsim_runtime_tasksim_testing_la_OBJECTS) $(libnextsim_runtime_tasksim_testing_la_DEPENDENCIES) $(EXTRA_libnextsim_runtime_tasksim_testing_la_DEPENDENCIES) 
simulators/tasksim/runtime/Makefile.in:569:libnextsim-runtime-tasksim.la: $(libnextsim_runtime_tasksim_la_OBJECTS) $(libnextsim_runtime_tasksim_la_DEPENDENCIES) $(EXTRA_libnextsim_runtime_tasksim_la_DEPENDENCIES) 
simulators/tasksim/runtime/Makefile.in:572:mostlyclean-compile:
simulators/tasksim/runtime/Makefile.in:573:	-rm -f *.$(OBJEXT)
simulators/tasksim/runtime/Makefile.in:574:	-rm -f mode_selector_policies/*.$(OBJEXT)
simulators/tasksim/runtime/Makefile.in:575:	-rm -f mode_selector_policies/*.lo
simulators/tasksim/runtime/Makefile.in:576:	-rm -f smp/*.$(OBJEXT)
simulators/tasksim/runtime/Makefile.in:577:	-rm -f smp/*.lo
simulators/tasksim/runtime/Makefile.in:579:distclean-compile:
simulators/tasksim/runtime/Makefile.in:580:	-rm -f *.tab.c
simulators/tasksim/runtime/Makefile.in:582:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_la-ModeSelector.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:583:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_la-NanoxBridge.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:584:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_la-OmpSs.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:585:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_la-RuntimeThread.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:586:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_testing_la-ModeSelector.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:587:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_testing_la-NanoxBridge.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:588:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_testing_la-OmpSs.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:589:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/libnextsim_runtime_tasksim_testing_la-RuntimeThread.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:594:@AMDEP_TRUE@@am__include@ @am__quote@smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpDD.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:595:@AMDEP_TRUE@@am__include@ @am__quote@smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:596:@AMDEP_TRUE@@am__include@ @am__quote@smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:597:@AMDEP_TRUE@@am__include@ @am__quote@smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpThread.Plo@am__quote@
simulators/tasksim/runtime/Makefile.in:601:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/tasksim/runtime/Makefile.in:605:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<
simulators/tasksim/runtime/Makefile.in:609:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
simulators/tasksim/runtime/Makefile.in:613:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
simulators/tasksim/runtime/Makefile.in:617:@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/tasksim/runtime/Makefile.in:621:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<
simulators/tasksim/runtime/Makefile.in:623:smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo: smp/SimSmpDD.cpp
simulators/tasksim/runtime/Makefile.in:624:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -MT smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo -MD -MP -MF smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpDD.Tpo -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo `test -f 'smp/SimSmpDD.cpp' || echo '$(srcdir)/'`smp/SimSmpDD.cpp
simulators/tasksim/runtime/Makefile.in:625:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpDD.Tpo smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpDD.Plo
simulators/tasksim/runtime/Makefile.in:626:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='smp/SimSmpDD.cpp' object='smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:628:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpDD.lo `test -f 'smp/SimSmpDD.cpp' || echo '$(srcdir)/'`smp/SimSmpDD.cpp
simulators/tasksim/runtime/Makefile.in:630:smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo: smp/SimSmpProcessor.cpp
simulators/tasksim/runtime/Makefile.in:631:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -MT smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo -MD -MP -MF smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.Tpo -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo `test -f 'smp/SimSmpProcessor.cpp' || echo '$(srcdir)/'`smp/SimSmpProcessor.cpp
simulators/tasksim/runtime/Makefile.in:632:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.Tpo smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.Plo
simulators/tasksim/runtime/Makefile.in:633:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='smp/SimSmpProcessor.cpp' object='smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:635:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpProcessor.lo `test -f 'smp/SimSmpProcessor.cpp' || echo '$(srcdir)/'`smp/SimSmpProcessor.cpp
simulators/tasksim/runtime/Makefile.in:637:smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo: smp/SimSmpThread.cpp
simulators/tasksim/runtime/Makefile.in:638:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -MT smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo -MD -MP -MF smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpThread.Tpo -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo `test -f 'smp/SimSmpThread.cpp' || echo '$(srcdir)/'`smp/SimSmpThread.cpp
simulators/tasksim/runtime/Makefile.in:639:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpThread.Tpo smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpThread.Plo
simulators/tasksim/runtime/Makefile.in:640:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='smp/SimSmpThread.cpp' object='smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:642:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpThread.lo `test -f 'smp/SimSmpThread.cpp' || echo '$(srcdir)/'`smp/SimSmpThread.cpp
simulators/tasksim/runtime/Makefile.in:644:smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo: smp/SimSmpPlugin.cpp
simulators/tasksim/runtime/Makefile.in:645:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -MT smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo -MD -MP -MF smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.Tpo -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo `test -f 'smp/SimSmpPlugin.cpp' || echo '$(srcdir)/'`smp/SimSmpPlugin.cpp
simulators/tasksim/runtime/Makefile.in:646:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.Tpo smp/$(DEPDIR)/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.Plo
simulators/tasksim/runtime/Makefile.in:647:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='smp/SimSmpPlugin.cpp' object='smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:649:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_smp_la_CXXFLAGS) $(CXXFLAGS) -c -o smp/libnextsim_runtime_tasksim_smp_la-SimSmpPlugin.lo `test -f 'smp/SimSmpPlugin.cpp' || echo '$(srcdir)/'`smp/SimSmpPlugin.cpp
simulators/tasksim/runtime/Makefile.in:651:libnextsim_runtime_tasksim_testing_la-OmpSs.lo: OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:652:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_testing_la-OmpSs.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-OmpSs.Tpo -c -o libnextsim_runtime_tasksim_testing_la-OmpSs.lo `test -f 'OmpSs.cpp' || echo '$(srcdir)/'`OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:653:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-OmpSs.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-OmpSs.Plo
simulators/tasksim/runtime/Makefile.in:654:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OmpSs.cpp' object='libnextsim_runtime_tasksim_testing_la-OmpSs.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:656:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_testing_la-OmpSs.lo `test -f 'OmpSs.cpp' || echo '$(srcdir)/'`OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:658:libnextsim_runtime_tasksim_testing_la-ModeSelector.lo: ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:659:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_testing_la-ModeSelector.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-ModeSelector.Tpo -c -o libnextsim_runtime_tasksim_testing_la-ModeSelector.lo `test -f 'ModeSelector.cpp' || echo '$(srcdir)/'`ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:660:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-ModeSelector.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-ModeSelector.Plo
simulators/tasksim/runtime/Makefile.in:661:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ModeSelector.cpp' object='libnextsim_runtime_tasksim_testing_la-ModeSelector.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:663:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_testing_la-ModeSelector.lo `test -f 'ModeSelector.cpp' || echo '$(srcdir)/'`ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:665:libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo: NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:666:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-NanoxBridge.Tpo -c -o libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo `test -f 'NanoxBridge.cpp' || echo '$(srcdir)/'`NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:667:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-NanoxBridge.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-NanoxBridge.Plo
simulators/tasksim/runtime/Makefile.in:668:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NanoxBridge.cpp' object='libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:670:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_testing_la-NanoxBridge.lo `test -f 'NanoxBridge.cpp' || echo '$(srcdir)/'`NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:672:libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo: RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:673:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-RuntimeThread.Tpo -c -o libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo `test -f 'RuntimeThread.cpp' || echo '$(srcdir)/'`RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:674:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-RuntimeThread.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_testing_la-RuntimeThread.Plo
simulators/tasksim/runtime/Makefile.in:675:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RuntimeThread.cpp' object='libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:677:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_testing_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_testing_la-RuntimeThread.lo `test -f 'RuntimeThread.cpp' || echo '$(srcdir)/'`RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:679:libnextsim_runtime_tasksim_la-OmpSs.lo: OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:680:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_la-OmpSs.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_la-OmpSs.Tpo -c -o libnextsim_runtime_tasksim_la-OmpSs.lo `test -f 'OmpSs.cpp' || echo '$(srcdir)/'`OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:681:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_la-OmpSs.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_la-OmpSs.Plo
simulators/tasksim/runtime/Makefile.in:682:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='OmpSs.cpp' object='libnextsim_runtime_tasksim_la-OmpSs.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:684:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_la-OmpSs.lo `test -f 'OmpSs.cpp' || echo '$(srcdir)/'`OmpSs.cpp
simulators/tasksim/runtime/Makefile.in:686:libnextsim_runtime_tasksim_la-ModeSelector.lo: ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:687:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_la-ModeSelector.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_la-ModeSelector.Tpo -c -o libnextsim_runtime_tasksim_la-ModeSelector.lo `test -f 'ModeSelector.cpp' || echo '$(srcdir)/'`ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:688:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_la-ModeSelector.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_la-ModeSelector.Plo
simulators/tasksim/runtime/Makefile.in:689:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='ModeSelector.cpp' object='libnextsim_runtime_tasksim_la-ModeSelector.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:691:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_la-ModeSelector.lo `test -f 'ModeSelector.cpp' || echo '$(srcdir)/'`ModeSelector.cpp
simulators/tasksim/runtime/Makefile.in:693:libnextsim_runtime_tasksim_la-NanoxBridge.lo: NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:694:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_la-NanoxBridge.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_la-NanoxBridge.Tpo -c -o libnextsim_runtime_tasksim_la-NanoxBridge.lo `test -f 'NanoxBridge.cpp' || echo '$(srcdir)/'`NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:695:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_la-NanoxBridge.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_la-NanoxBridge.Plo
simulators/tasksim/runtime/Makefile.in:696:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='NanoxBridge.cpp' object='libnextsim_runtime_tasksim_la-NanoxBridge.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:698:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_la-NanoxBridge.lo `test -f 'NanoxBridge.cpp' || echo '$(srcdir)/'`NanoxBridge.cpp
simulators/tasksim/runtime/Makefile.in:700:libnextsim_runtime_tasksim_la-RuntimeThread.lo: RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:701:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -MT libnextsim_runtime_tasksim_la-RuntimeThread.lo -MD -MP -MF $(DEPDIR)/libnextsim_runtime_tasksim_la-RuntimeThread.Tpo -c -o libnextsim_runtime_tasksim_la-RuntimeThread.lo `test -f 'RuntimeThread.cpp' || echo '$(srcdir)/'`RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:702:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/libnextsim_runtime_tasksim_la-RuntimeThread.Tpo $(DEPDIR)/libnextsim_runtime_tasksim_la-RuntimeThread.Plo
simulators/tasksim/runtime/Makefile.in:703:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='RuntimeThread.cpp' object='libnextsim_runtime_tasksim_la-RuntimeThread.lo' libtool=yes @AMDEPBACKSLASH@
simulators/tasksim/runtime/Makefile.in:705:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libnextsim_runtime_tasksim_la_CXXFLAGS) $(CXXFLAGS) -c -o libnextsim_runtime_tasksim_la-RuntimeThread.lo `test -f 'RuntimeThread.cpp' || echo '$(srcdir)/'`RuntimeThread.cpp
simulators/tasksim/runtime/Makefile.in:707:mostlyclean-libtool:
simulators/tasksim/runtime/Makefile.in:708:	-rm -f *.lo
simulators/tasksim/runtime/Makefile.in:710:clean-libtool:
simulators/tasksim/runtime/Makefile.in:711:	-rm -rf .libs _libs
simulators/tasksim/runtime/Makefile.in:712:	-rm -rf mode_selector_policies/.libs mode_selector_policies/_libs
simulators/tasksim/runtime/Makefile.in:713:	-rm -rf smp/.libs smp/_libs
simulators/tasksim/runtime/Makefile.in:714:install-nobase_libnextsim_runtime_tasksim_laHEADERS: $(nobase_libnextsim_runtime_tasksim_la_HEADERS)
simulators/tasksim/runtime/Makefile.in:716:	@list='$(nobase_libnextsim_runtime_tasksim_la_HEADERS)'; test -n "$(libnextsim_runtime_tasksim_ladir)" || list=; \
simulators/tasksim/runtime/Makefile.in:717:	if test -n "$$list"; then \
simulators/tasksim/runtime/Makefile.in:723:	    if test -f "$$file"; then xfiles="$$xfiles $$file"; \
simulators/tasksim/runtime/Makefile.in:725:	  test -z "$$xfiles" || { \
simulators/tasksim/runtime/Makefile.in:733:uninstall-nobase_libnextsim_runtime_tasksim_laHEADERS:
simulators/tasksim/runtime/Makefile.in:735:	@list='$(nobase_libnextsim_runtime_tasksim_la_HEADERS)'; test -n "$(libnextsim_runtime_tasksim_ladir)" || list=; \
simulators/tasksim/runtime/Makefile.in:740:	$(am__define_uniq_tagged_files); mkid -fID $$unique
simulators/tasksim/runtime/Makefile.in:741:tags: tags-am
simulators/tasksim/runtime/Makefile.in:744:tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/tasksim/runtime/Makefile.in:749:	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
simulators/tasksim/runtime/Makefile.in:750:	  test -n "$$unique" || unique=$$empty_fix; \
simulators/tasksim/runtime/Makefile.in:751:	  if test $$# -gt 0; then \
simulators/tasksim/runtime/Makefile.in:759:ctags: ctags-am
simulators/tasksim/runtime/Makefile.in:762:ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/tasksim/runtime/Makefile.in:764:	test -z "$(CTAGS_ARGS)$$unique" \
simulators/tasksim/runtime/Makefile.in:771:	  && gtags -i $(GTAGS_ARGS) "$$here"
simulators/tasksim/runtime/Makefile.in:772:cscopelist: cscopelist-am
simulators/tasksim/runtime/Makefile.in:774:cscopelist-am: $(am__tagged_files)
simulators/tasksim/runtime/Makefile.in:781:	  if test -f "$$i"; then \
simulators/tasksim/runtime/Makefile.in:788:distclean-tags:
simulators/tasksim/runtime/Makefile.in:789:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
simulators/tasksim/runtime/Makefile.in:796:	  sed -e "s|^$$srcdirstrip/||;t" \
simulators/tasksim/runtime/Makefile.in:797:	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
simulators/tasksim/runtime/Makefile.in:801:			   sort -u` ;; \
simulators/tasksim/runtime/Makefile.in:804:	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
simulators/tasksim/runtime/Makefile.in:805:	  if test -d $$d/$$file; then \
simulators/tasksim/runtime/Makefile.in:806:	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
simulators/tasksim/runtime/Makefile.in:807:	    if test -d "$(distdir)/$$file"; then \
simulators/tasksim/runtime/Makefile.in:808:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/tasksim/runtime/Makefile.in:810:	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
simulators/tasksim/runtime/Makefile.in:811:	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
simulators/tasksim/runtime/Makefile.in:812:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/tasksim/runtime/Makefile.in:814:	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
simulators/tasksim/runtime/Makefile.in:816:	    test -f "$(distdir)/$$file" \
simulators/tasksim/runtime/Makefile.in:817:	    || cp -p $$d/$$file "$(distdir)/$$file" \
simulators/tasksim/runtime/Makefile.in:821:check-am: all-am
simulators/tasksim/runtime/Makefile.in:822:check: check-am
simulators/tasksim/runtime/Makefile.in:823:all-am: Makefile $(LTLIBRARIES) $(HEADERS)
simulators/tasksim/runtime/Makefile.in:826:	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
simulators/tasksim/runtime/Makefile.in:828:install: install-am
simulators/tasksim/runtime/Makefile.in:829:install-exec: install-exec-am
simulators/tasksim/runtime/Makefile.in:830:install-data: install-data-am
simulators/tasksim/runtime/Makefile.in:831:uninstall: uninstall-am
simulators/tasksim/runtime/Makefile.in:833:install-am: all-am
simulators/tasksim/runtime/Makefile.in:834:	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
simulators/tasksim/runtime/Makefile.in:836:installcheck: installcheck-am
simulators/tasksim/runtime/Makefile.in:837:install-strip:
simulators/tasksim/runtime/Makefile.in:838:	if test -z '$(STRIP)'; then \
simulators/tasksim/runtime/Makefile.in:840:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/tasksim/runtime/Makefile.in:844:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/tasksim/runtime/Makefile.in:847:mostlyclean-generic:
simulators/tasksim/runtime/Makefile.in:849:clean-generic:
simulators/tasksim/runtime/Makefile.in:851:distclean-generic:
simulators/tasksim/runtime/Makefile.in:852:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
simulators/tasksim/runtime/Makefile.in:853:	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
simulators/tasksim/runtime/Makefile.in:854:	-rm -f mode_selector_policies/$(DEPDIR)/$(am__dirstamp)
simulators/tasksim/runtime/Makefile.in:855:	-rm -f mode_selector_policies/$(am__dirstamp)
simulators/tasksim/runtime/Makefile.in:856:	-rm -f smp/$(DEPDIR)/$(am__dirstamp)
simulators/tasksim/runtime/Makefile.in:857:	-rm -f smp/$(am__dirstamp)
simulators/tasksim/runtime/Makefile.in:859:maintainer-clean-generic:
simulators/tasksim/runtime/Makefile.in:862:clean: clean-am
simulators/tasksim/runtime/Makefile.in:864:clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
simulators/tasksim/runtime/Makefile.in:865:	mostlyclean-am
simulators/tasksim/runtime/Makefile.in:867:distclean: distclean-am
simulators/tasksim/runtime/Makefile.in:868:	-rm -rf ./$(DEPDIR) mode_selector_policies/$(DEPDIR) smp/$(DEPDIR)
simulators/tasksim/runtime/Makefile.in:869:	-rm -f Makefile
simulators/tasksim/runtime/Makefile.in:870:distclean-am: clean-am distclean-compile distclean-generic \
simulators/tasksim/runtime/Makefile.in:871:	distclean-tags
simulators/tasksim/runtime/Makefile.in:873:dvi: dvi-am
simulators/tasksim/runtime/Makefile.in:875:dvi-am:
simulators/tasksim/runtime/Makefile.in:877:html: html-am
simulators/tasksim/runtime/Makefile.in:879:html-am:
simulators/tasksim/runtime/Makefile.in:881:info: info-am
simulators/tasksim/runtime/Makefile.in:883:info-am:
simulators/tasksim/runtime/Makefile.in:885:install-data-am: install-nobase_libnextsim_runtime_tasksim_laHEADERS
simulators/tasksim/runtime/Makefile.in:887:install-dvi: install-dvi-am
simulators/tasksim/runtime/Makefile.in:889:install-dvi-am:
simulators/tasksim/runtime/Makefile.in:891:install-exec-am:
simulators/tasksim/runtime/Makefile.in:893:install-html: install-html-am
simulators/tasksim/runtime/Makefile.in:895:install-html-am:
simulators/tasksim/runtime/Makefile.in:897:install-info: install-info-am
simulators/tasksim/runtime/Makefile.in:899:install-info-am:
simulators/tasksim/runtime/Makefile.in:901:install-man:
simulators/tasksim/runtime/Makefile.in:903:install-pdf: install-pdf-am
simulators/tasksim/runtime/Makefile.in:905:install-pdf-am:
simulators/tasksim/runtime/Makefile.in:907:install-ps: install-ps-am
simulators/tasksim/runtime/Makefile.in:909:install-ps-am:
simulators/tasksim/runtime/Makefile.in:911:installcheck-am:
simulators/tasksim/runtime/Makefile.in:913:maintainer-clean: maintainer-clean-am
simulators/tasksim/runtime/Makefile.in:914:	-rm -rf ./$(DEPDIR) mode_selector_policies/$(DEPDIR) smp/$(DEPDIR)
simulators/tasksim/runtime/Makefile.in:915:	-rm -f Makefile
simulators/tasksim/runtime/Makefile.in:916:maintainer-clean-am: distclean-am maintainer-clean-generic
simulators/tasksim/runtime/Makefile.in:918:mostlyclean: mostlyclean-am
simulators/tasksim/runtime/Makefile.in:920:mostlyclean-am: mostlyclean-compile mostlyclean-generic \
simulators/tasksim/runtime/Makefile.in:921:	mostlyclean-libtool
simulators/tasksim/runtime/Makefile.in:923:pdf: pdf-am
simulators/tasksim/runtime/Makefile.in:925:pdf-am:
simulators/tasksim/runtime/Makefile.in:927:ps: ps-am
simulators/tasksim/runtime/Makefile.in:929:ps-am:
simulators/tasksim/runtime/Makefile.in:931:uninstall-am: uninstall-nobase_libnextsim_runtime_tasksim_laHEADERS
simulators/tasksim/runtime/Makefile.in:933:.MAKE: install-am install-strip
simulators/tasksim/runtime/Makefile.in:935:.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
simulators/tasksim/runtime/Makefile.in:936:	clean-libtool clean-noinstLTLIBRARIES cscopelist-am ctags \
simulators/tasksim/runtime/Makefile.in:937:	ctags-am distclean distclean-compile distclean-generic \
simulators/tasksim/runtime/Makefile.in:938:	distclean-libtool distclean-tags distdir dvi dvi-am html \
simulators/tasksim/runtime/Makefile.in:939:	html-am info info-am install install-am install-data \
simulators/tasksim/runtime/Makefile.in:940:	install-data-am install-dvi install-dvi-am install-exec \
simulators/tasksim/runtime/Makefile.in:941:	install-exec-am install-html install-html-am install-info \
simulators/tasksim/runtime/Makefile.in:942:	install-info-am install-man \
simulators/tasksim/runtime/Makefile.in:943:	install-nobase_libnextsim_runtime_tasksim_laHEADERS \
simulators/tasksim/runtime/Makefile.in:944:	install-pdf install-pdf-am install-ps install-ps-am \
simulators/tasksim/runtime/Makefile.in:945:	install-strip installcheck installcheck-am installdirs \
simulators/tasksim/runtime/Makefile.in:946:	maintainer-clean maintainer-clean-generic mostlyclean \
simulators/tasksim/runtime/Makefile.in:947:	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
simulators/tasksim/runtime/Makefile.in:948:	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
simulators/tasksim/runtime/Makefile.in:949:	uninstall-nobase_libnextsim_runtime_tasksim_laHEADERS
simulators/tasksim/runtime/ThreadState.h:118:    /** Action taken at start of cycle. It switches to the user-level thread in RuntimeThread */
simulators/tasksim/runtime/NanoxAPI-impl.h:49:    return ( void * )new nanos::ext::SimSmpDD( tasksim->task_id );
simulators/tasksim/runtime/NanoxAPI-impl.h:58:        num_dimensions += it->dimensions.size();
simulators/tasksim/runtime/NanoxAPI-impl.h:164:    // The next if-else is done because Nanos++ expects a null-pointer if there
simulators/tasksim/runtime/NanoxAPI-impl.h:272:    return reinterpret_cast<void*>(new ext::SimSmpDD(tasksim->task_id));
simulators/tasksim/runtime/NanoxAPI-impl.h:397:    std::cout << "----\nWaiting for num_deps = " << num_deps << ", at array " << task_deps << std::endl;
simulators/tasksim/runtime/NanoxAPI-impl.h:400:        std::cout << "address " << *(task_deps[i].address) << " <- " << task_deps[i].address << std::endl;
simulators/tasksim/runtime/NanoxAPI-impl.h:421:        return ( void * )new (prealloc) ext::SimSmpDD( tasksim->task_id );
simulators/tasksim/runtime/NanoxAPI-impl.h:423:        return ( void * )new ext::SimSmpDD( tasksim->task_id );
simulators/tasksim/runtime/NanoxAPI-impl.h:537:    std::cout << "----\nWaiting for num_deps = " << num_deps << ", at array " << task_deps << std::endl;
simulators/tasksim/runtime/NanoxAPI-impl.h:540:        std::cout << "address " << *(task_deps[i].address) << " <- " << task_deps[i].address << std::endl;
simulators/tasksim/runtime/types.h:119:        return policy_map.find(policy_name)->second;
simulators/tasksim/runtime/types.h:125:            std::cerr << it->first << std::endl;
simulators/tasksim/runtime/types.h:134:        return measures_map.find(timing_name)->second;
simulators/tasksim/runtime/types.h:140:            std::cerr << it->first << std::endl;
simulators/tasksim/runtime/NanoxAPI.h:51:#include "NanoxAPI-impl.h"
simulators/tasksim/runtime/ModeSelector.cpp:60:    return policy_->get_mode(signature);
simulators/tasksim/runtime/ModeSelector.cpp:65:    policy_->start_detailed_phase(signature);
simulators/tasksim/runtime/ModeSelector.cpp:70:    policy_->end_detailed_phase(signature);
simulators/tasksim/runtime/ModeSelector.cpp:75:    policy_->start_burst_phase(signature);
simulators/tasksim/runtime/ModeSelector.cpp:80:    policy_->end_burst_phase(signature);
simulators/tasksim/runtime/ModeSelector.cpp:85:    return policy_->predict_cycle_count(signature);
simulators/tasksim/runtime/ModeSelector.cpp:90:    policy_->task_start(task_id, thread_id, type_id);
simulators/tasksim/runtime/ModeSelector.cpp:95:    policy_->task_end(task_id, thread_id, type_id);
simulators/tasksim/tasksim_arm.cpp:158:        mem_cpus[i]->dl1_ >> dl1_caches[i]->in_[0];
simulators/tasksim/tasksim_arm.cpp:159:        dl1_caches[i]->out_ >> L2_bus.input(0);
Binary file simulators/tasksim/.tasksim.cpp.swp matches
simulators/tasksim/Makefile.in:4:# Copyright (C) 1994-2013 Free Software Foundation, Inc.
simulators/tasksim/Makefile.in:18:am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
simulators/tasksim/Makefile.in:20:  case $${target_option-} in \
simulators/tasksim/Makefile.in:23:              "target option '$${target_option-}' specified" >&2; \
simulators/tasksim/Makefile.in:46:      *=*|--*) continue;; \
simulators/tasksim/Makefile.in:47:        -*I) strip_trailopt 'I'; skip_next=yes;; \
simulators/tasksim/Makefile.in:48:      -*I?*) strip_trailopt 'I';; \
simulators/tasksim/Makefile.in:49:        -*O) strip_trailopt 'O'; skip_next=yes;; \
simulators/tasksim/Makefile.in:50:      -*O?*) strip_trailopt 'O';; \
simulators/tasksim/Makefile.in:51:        -*l) strip_trailopt 'l'; skip_next=yes;; \
simulators/tasksim/Makefile.in:52:      -*l?*) strip_trailopt 'l';; \
simulators/tasksim/Makefile.in:53:      -[dEDm]) skip_next=yes;; \
simulators/tasksim/Makefile.in:54:      -[JT]) skip_next=yes;; \
simulators/tasksim/Makefile.in:68:install_sh_DATA = $(install_sh) -c -m 644
simulators/tasksim/Makefile.in:69:install_sh_PROGRAM = $(install_sh) -c
simulators/tasksim/Makefile.in:70:install_sh_SCRIPT = $(install_sh) -c
simulators/tasksim/Makefile.in:97:mkinstalldirs = $(install_sh) -d
simulators/tasksim/Makefile.in:102:am_burstsim_OBJECTS = burstsim-burstsim.$(OBJEXT)
simulators/tasksim/Makefile.in:107:am__v_lt_0 = --silent
simulators/tasksim/Makefile.in:109:am_tasksim_OBJECTS = tasksim-tasksim.$(OBJEXT)
simulators/tasksim/Makefile.in:111:tasksim_DEPENDENCIES = $(top_builddir)/src/core/libnextsim-engine.la \
simulators/tasksim/Makefile.in:112:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/Makefile.in:113:	$(top_builddir)/src/core/libnextsim-stats.la \
simulators/tasksim/Makefile.in:114:	$(top_builddir)/src/core/libnextsim-utils.la \
simulators/tasksim/Makefile.in:115:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/tasksim/Makefile.in:116:	$(top_builddir)/src/simulators/tasksim/runtime/libnextsim-runtime-tasksim.la \
simulators/tasksim/Makefile.in:118:am_tasksim_arm_OBJECTS = tasksim_arm-tasksim_arm.$(OBJEXT)
simulators/tasksim/Makefile.in:121:am_tasksim_sumway_OBJECTS = tasksim_sumway-tasksim_sumway.$(OBJEXT)
simulators/tasksim/Makefile.in:124:am_testing_OBJECTS = testing-tasksim.$(OBJEXT)
simulators/tasksim/Makefile.in:127:testing_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/tasksim/Makefile.in:128:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(testing_CXXFLAGS) \
simulators/tasksim/Makefile.in:129:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/tasksim/Makefile.in:142:DEFAULT_INCLUDES = -I.@am__isrc@
simulators/tasksim/Makefile.in:145:am__mv = mv -f
simulators/tasksim/Makefile.in:148:LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/tasksim/Makefile.in:149:	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
simulators/tasksim/Makefile.in:157:CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
simulators/tasksim/Makefile.in:158:	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
simulators/tasksim/Makefile.in:159:	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
simulators/tasksim/Makefile.in:170:RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
simulators/tasksim/Makefile.in:171:	ctags-recursive dvi-recursive html-recursive info-recursive \
simulators/tasksim/Makefile.in:172:	install-data-recursive install-dvi-recursive \
simulators/tasksim/Makefile.in:173:	install-exec-recursive install-html-recursive \
simulators/tasksim/Makefile.in:174:	install-info-recursive install-pdf-recursive \
simulators/tasksim/Makefile.in:175:	install-ps-recursive install-recursive installcheck-recursive \
simulators/tasksim/Makefile.in:176:	installdirs-recursive pdf-recursive ps-recursive \
simulators/tasksim/Makefile.in:177:	tags-recursive uninstall-recursive
simulators/tasksim/Makefile.in:181:    *) (install-info --version) >/dev/null 2>&1;; \
simulators/tasksim/Makefile.in:183:RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
simulators/tasksim/Makefile.in:184:  distclean-recursive maintainer-clean-recursive
simulators/tasksim/Makefile.in:189:AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
simulators/tasksim/Makefile.in:192:# Read a list of newline-separated strings from the standard input,
simulators/tasksim/Makefile.in:206:    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
simulators/tasksim/Makefile.in:218:  while test -n "$$dir1"; do \
simulators/tasksim/Makefile.in:219:    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
simulators/tasksim/Makefile.in:222:        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
simulators/tasksim/Makefile.in:223:        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
simulators/tasksim/Makefile.in:225:        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
simulators/tasksim/Makefile.in:227:          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
simulators/tasksim/Makefile.in:234:    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
simulators/tasksim/Makefile.in:387:tasksim_LDADD = $(top_builddir)/src/core/libnextsim-engine.la \
simulators/tasksim/Makefile.in:388:	$(top_builddir)/src/core/libnextsim-cpu.la \
simulators/tasksim/Makefile.in:389:	$(top_builddir)/src/core/libnextsim-stats.la \
simulators/tasksim/Makefile.in:390:	$(top_builddir)/src/core/libnextsim-utils.la \
simulators/tasksim/Makefile.in:391:	$(top_builddir)/src/core/libnextsim-logic-memory.la \
simulators/tasksim/Makefile.in:392:	$(top_builddir)/src/simulators/tasksim/runtime/libnextsim-runtime-tasksim.la \
simulators/tasksim/Makefile.in:405:testing_CXXFLAGS = -DTESTING_VERSION $(AM_CXXFLAGS)
simulators/tasksim/Makefile.in:408:all: all-recursive
simulators/tasksim/Makefile.in:416:	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
simulators/tasksim/Makefile.in:417:	        && { if test -f $@; then exit 0; else break; fi; }; \
simulators/tasksim/Makefile.in:421:	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/simulators/tasksim/Makefile'; \
simulators/tasksim/Makefile.in:423:	  $(AUTOMAKE) --gnu src/simulators/tasksim/Makefile
simulators/tasksim/Makefile.in:428:	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
simulators/tasksim/Makefile.in:435:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/Makefile.in:438:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/Makefile.in:440:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
simulators/tasksim/Makefile.in:442:install-binPROGRAMS: $(bin_PROGRAMS)
simulators/tasksim/Makefile.in:444:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
simulators/tasksim/Makefile.in:445:	if test -n "$$list"; then \
simulators/tasksim/Makefile.in:451:	while read p p1; do if test -f $$p \
simulators/tasksim/Makefile.in:452:	 || test -f $$p1 \
simulators/tasksim/Makefile.in:455:	sed -e 'p;s,.*/,,;n;h' \
simulators/tasksim/Makefile.in:456:	    -e 's|.*|.|' \
simulators/tasksim/Makefile.in:457:	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
simulators/tasksim/Makefile.in:466:	    test -z "$$files" || { \
simulators/tasksim/Makefile.in:467:	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
simulators/tasksim/Makefile.in:468:	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
simulators/tasksim/Makefile.in:472:uninstall-binPROGRAMS:
simulators/tasksim/Makefile.in:474:	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
simulators/tasksim/Makefile.in:476:	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
simulators/tasksim/Makefile.in:477:	      -e 's/$$/$(EXEEXT)/' \
simulators/tasksim/Makefile.in:479:	test -n "$$list" || exit 0; \
simulators/tasksim/Makefile.in:480:	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
simulators/tasksim/Makefile.in:481:	cd "$(DESTDIR)$(bindir)" && rm -f $$files
simulators/tasksim/Makefile.in:483:clean-binPROGRAMS:
simulators/tasksim/Makefile.in:484:	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
simulators/tasksim/Makefile.in:485:	echo " rm -f" $$list; \
simulators/tasksim/Makefile.in:486:	rm -f $$list || exit $$?; \
simulators/tasksim/Makefile.in:487:	test -n "$(EXEEXT)" || exit 0; \
simulators/tasksim/Makefile.in:489:	echo " rm -f" $$list; \
simulators/tasksim/Makefile.in:490:	rm -f $$list
simulators/tasksim/Makefile.in:493:	@rm -f burstsim$(EXEEXT)
simulators/tasksim/Makefile.in:497:	@rm -f tasksim$(EXEEXT)
simulators/tasksim/Makefile.in:501:	@rm -f tasksim_arm$(EXEEXT)
simulators/tasksim/Makefile.in:505:	@rm -f tasksim_sumway$(EXEEXT)
simulators/tasksim/Makefile.in:509:	@rm -f testing$(EXEEXT)
simulators/tasksim/Makefile.in:512:mostlyclean-compile:
simulators/tasksim/Makefile.in:513:	-rm -f *.$(OBJEXT)
simulators/tasksim/Makefile.in:515:distclean-compile:
simulators/tasksim/Makefile.in:516:	-rm -f *.tab.c
simulators/tasksim/Makefile.in:518:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/burstsim-burstsim.Po@am__quote@
simulators/tasksim/Makefile.in:519:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasksim-tasksim.Po@am__quote@
simulators/tasksim/Makefile.in:520:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasksim_arm-tasksim_arm.Po@am__quote@
simulators/tasksim/Makefile.in:521:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tasksim_sumway-tasksim_sumway.Po@am__quote@
simulators/tasksim/Makefile.in:522:@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/testing-tasksim.Po@am__quote@
simulators/tasksim/Makefile.in:526:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/tasksim/Makefile.in:530:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ $<
simulators/tasksim/Makefile.in:534:@am__fastdepCXX_TRUE@	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
simulators/tasksim/Makefile.in:538:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`
simulators/tasksim/Makefile.in:542:@am__fastdepCXX_TRUE@	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
simulators/tasksim/Makefile.in:546:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(LTCXXCOMPILE) -c -o $@ $<
simulators/tasksim/Makefile.in:548:burstsim-burstsim.o: burstsim.cpp
simulators/tasksim/Makefile.in:549:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(burstsim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT burstsim-burstsim.o -MD -MP -MF $(DEPDIR)/burstsim-burstsim.Tpo -c -o burstsim-burstsim.o `test -f 'burstsim.cpp' || echo '$(srcdir)/'`burstsim.cpp
simulators/tasksim/Makefile.in:550:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/burstsim-burstsim.Tpo $(DEPDIR)/burstsim-burstsim.Po
simulators/tasksim/Makefile.in:551:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='burstsim.cpp' object='burstsim-burstsim.o' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:553:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(burstsim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o burstsim-burstsim.o `test -f 'burstsim.cpp' || echo '$(srcdir)/'`burstsim.cpp
simulators/tasksim/Makefile.in:555:burstsim-burstsim.obj: burstsim.cpp
simulators/tasksim/Makefile.in:556:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(burstsim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT burstsim-burstsim.obj -MD -MP -MF $(DEPDIR)/burstsim-burstsim.Tpo -c -o burstsim-burstsim.obj `if test -f 'burstsim.cpp'; then $(CYGPATH_W) 'burstsim.cpp'; else $(CYGPATH_W) '$(srcdir)/burstsim.cpp'; fi`
simulators/tasksim/Makefile.in:557:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/burstsim-burstsim.Tpo $(DEPDIR)/burstsim-burstsim.Po
simulators/tasksim/Makefile.in:558:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='burstsim.cpp' object='burstsim-burstsim.obj' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:560:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(burstsim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o burstsim-burstsim.obj `if test -f 'burstsim.cpp'; then $(CYGPATH_W) 'burstsim.cpp'; else $(CYGPATH_W) '$(srcdir)/burstsim.cpp'; fi`
simulators/tasksim/Makefile.in:562:tasksim-tasksim.o: tasksim.cpp
simulators/tasksim/Makefile.in:563:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim-tasksim.o -MD -MP -MF $(DEPDIR)/tasksim-tasksim.Tpo -c -o tasksim-tasksim.o `test -f 'tasksim.cpp' || echo '$(srcdir)/'`tasksim.cpp
simulators/tasksim/Makefile.in:564:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim-tasksim.Tpo $(DEPDIR)/tasksim-tasksim.Po
simulators/tasksim/Makefile.in:565:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim.cpp' object='tasksim-tasksim.o' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:567:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim-tasksim.o `test -f 'tasksim.cpp' || echo '$(srcdir)/'`tasksim.cpp
simulators/tasksim/Makefile.in:569:tasksim-tasksim.obj: tasksim.cpp
simulators/tasksim/Makefile.in:570:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim-tasksim.obj -MD -MP -MF $(DEPDIR)/tasksim-tasksim.Tpo -c -o tasksim-tasksim.obj `if test -f 'tasksim.cpp'; then $(CYGPATH_W) 'tasksim.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim.cpp'; fi`
simulators/tasksim/Makefile.in:571:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim-tasksim.Tpo $(DEPDIR)/tasksim-tasksim.Po
simulators/tasksim/Makefile.in:572:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim.cpp' object='tasksim-tasksim.obj' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:574:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim-tasksim.obj `if test -f 'tasksim.cpp'; then $(CYGPATH_W) 'tasksim.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim.cpp'; fi`
simulators/tasksim/Makefile.in:576:tasksim_arm-tasksim_arm.o: tasksim_arm.cpp
simulators/tasksim/Makefile.in:577:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_arm_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim_arm-tasksim_arm.o -MD -MP -MF $(DEPDIR)/tasksim_arm-tasksim_arm.Tpo -c -o tasksim_arm-tasksim_arm.o `test -f 'tasksim_arm.cpp' || echo '$(srcdir)/'`tasksim_arm.cpp
simulators/tasksim/Makefile.in:578:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim_arm-tasksim_arm.Tpo $(DEPDIR)/tasksim_arm-tasksim_arm.Po
simulators/tasksim/Makefile.in:579:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim_arm.cpp' object='tasksim_arm-tasksim_arm.o' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:581:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_arm_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim_arm-tasksim_arm.o `test -f 'tasksim_arm.cpp' || echo '$(srcdir)/'`tasksim_arm.cpp
simulators/tasksim/Makefile.in:583:tasksim_arm-tasksim_arm.obj: tasksim_arm.cpp
simulators/tasksim/Makefile.in:584:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_arm_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim_arm-tasksim_arm.obj -MD -MP -MF $(DEPDIR)/tasksim_arm-tasksim_arm.Tpo -c -o tasksim_arm-tasksim_arm.obj `if test -f 'tasksim_arm.cpp'; then $(CYGPATH_W) 'tasksim_arm.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim_arm.cpp'; fi`
simulators/tasksim/Makefile.in:585:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim_arm-tasksim_arm.Tpo $(DEPDIR)/tasksim_arm-tasksim_arm.Po
simulators/tasksim/Makefile.in:586:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim_arm.cpp' object='tasksim_arm-tasksim_arm.obj' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:588:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_arm_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim_arm-tasksim_arm.obj `if test -f 'tasksim_arm.cpp'; then $(CYGPATH_W) 'tasksim_arm.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim_arm.cpp'; fi`
simulators/tasksim/Makefile.in:590:tasksim_sumway-tasksim_sumway.o: tasksim_sumway.cpp
simulators/tasksim/Makefile.in:591:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_sumway_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim_sumway-tasksim_sumway.o -MD -MP -MF $(DEPDIR)/tasksim_sumway-tasksim_sumway.Tpo -c -o tasksim_sumway-tasksim_sumway.o `test -f 'tasksim_sumway.cpp' || echo '$(srcdir)/'`tasksim_sumway.cpp
simulators/tasksim/Makefile.in:592:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim_sumway-tasksim_sumway.Tpo $(DEPDIR)/tasksim_sumway-tasksim_sumway.Po
simulators/tasksim/Makefile.in:593:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim_sumway.cpp' object='tasksim_sumway-tasksim_sumway.o' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:595:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_sumway_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim_sumway-tasksim_sumway.o `test -f 'tasksim_sumway.cpp' || echo '$(srcdir)/'`tasksim_sumway.cpp
simulators/tasksim/Makefile.in:597:tasksim_sumway-tasksim_sumway.obj: tasksim_sumway.cpp
simulators/tasksim/Makefile.in:598:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_sumway_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT tasksim_sumway-tasksim_sumway.obj -MD -MP -MF $(DEPDIR)/tasksim_sumway-tasksim_sumway.Tpo -c -o tasksim_sumway-tasksim_sumway.obj `if test -f 'tasksim_sumway.cpp'; then $(CYGPATH_W) 'tasksim_sumway.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim_sumway.cpp'; fi`
simulators/tasksim/Makefile.in:599:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/tasksim_sumway-tasksim_sumway.Tpo $(DEPDIR)/tasksim_sumway-tasksim_sumway.Po
simulators/tasksim/Makefile.in:600:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim_sumway.cpp' object='tasksim_sumway-tasksim_sumway.obj' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:602:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(tasksim_sumway_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tasksim_sumway-tasksim_sumway.obj `if test -f 'tasksim_sumway.cpp'; then $(CYGPATH_W) 'tasksim_sumway.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim_sumway.cpp'; fi`
simulators/tasksim/Makefile.in:604:testing-tasksim.o: tasksim.cpp
simulators/tasksim/Makefile.in:605:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testing_CPPFLAGS) $(CPPFLAGS) $(testing_CXXFLAGS) $(CXXFLAGS) -MT testing-tasksim.o -MD -MP -MF $(DEPDIR)/testing-tasksim.Tpo -c -o testing-tasksim.o `test -f 'tasksim.cpp' || echo '$(srcdir)/'`tasksim.cpp
simulators/tasksim/Makefile.in:606:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/testing-tasksim.Tpo $(DEPDIR)/testing-tasksim.Po
simulators/tasksim/Makefile.in:607:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim.cpp' object='testing-tasksim.o' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:609:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testing_CPPFLAGS) $(CPPFLAGS) $(testing_CXXFLAGS) $(CXXFLAGS) -c -o testing-tasksim.o `test -f 'tasksim.cpp' || echo '$(srcdir)/'`tasksim.cpp
simulators/tasksim/Makefile.in:611:testing-tasksim.obj: tasksim.cpp
simulators/tasksim/Makefile.in:612:@am__fastdepCXX_TRUE@	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testing_CPPFLAGS) $(CPPFLAGS) $(testing_CXXFLAGS) $(CXXFLAGS) -MT testing-tasksim.obj -MD -MP -MF $(DEPDIR)/testing-tasksim.Tpo -c -o testing-tasksim.obj `if test -f 'tasksim.cpp'; then $(CYGPATH_W) 'tasksim.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim.cpp'; fi`
simulators/tasksim/Makefile.in:613:@am__fastdepCXX_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/testing-tasksim.Tpo $(DEPDIR)/testing-tasksim.Po
simulators/tasksim/Makefile.in:614:@AMDEP_TRUE@@am__fastdepCXX_FALSE@	$(AM_V_CXX)source='tasksim.cpp' object='testing-tasksim.obj' libtool=no @AMDEPBACKSLASH@
simulators/tasksim/Makefile.in:616:@am__fastdepCXX_FALSE@	$(AM_V_CXX@am__nodep@)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(testing_CPPFLAGS) $(CPPFLAGS) $(testing_CXXFLAGS) $(CXXFLAGS) -c -o testing-tasksim.obj `if test -f 'tasksim.cpp'; then $(CYGPATH_W) 'tasksim.cpp'; else $(CYGPATH_W) '$(srcdir)/tasksim.cpp'; fi`
simulators/tasksim/Makefile.in:618:mostlyclean-libtool:
simulators/tasksim/Makefile.in:619:	-rm -f *.lo
simulators/tasksim/Makefile.in:621:clean-libtool:
simulators/tasksim/Makefile.in:622:	-rm -rf .libs _libs
simulators/tasksim/Makefile.in:638:	target=`echo $@ | sed s/-recursive//`; \
simulators/tasksim/Makefile.in:640:	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
simulators/tasksim/Makefile.in:647:	    local_target="$$target-am"; \
simulators/tasksim/Makefile.in:655:	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
simulators/tasksim/Makefile.in:656:	fi; test -z "$$fail"
simulators/tasksim/Makefile.in:659:	$(am__define_uniq_tagged_files); mkid -fID $$unique
simulators/tasksim/Makefile.in:660:tags: tags-recursive
simulators/tasksim/Makefile.in:663:tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/tasksim/Makefile.in:666:	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
simulators/tasksim/Makefile.in:667:	  include_option=--etags-include; \
simulators/tasksim/Makefile.in:670:	  include_option=--include; \
simulators/tasksim/Makefile.in:675:	    test ! -f $$subdir/TAGS || \
simulators/tasksim/Makefile.in:681:	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
simulators/tasksim/Makefile.in:682:	  test -n "$$unique" || unique=$$empty_fix; \
simulators/tasksim/Makefile.in:683:	  if test $$# -gt 0; then \
simulators/tasksim/Makefile.in:691:ctags: ctags-recursive
simulators/tasksim/Makefile.in:694:ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
simulators/tasksim/Makefile.in:696:	test -z "$(CTAGS_ARGS)$$unique" \
simulators/tasksim/Makefile.in:703:	  && gtags -i $(GTAGS_ARGS) "$$here"
simulators/tasksim/Makefile.in:704:cscopelist: cscopelist-recursive
simulators/tasksim/Makefile.in:706:cscopelist-am: $(am__tagged_files)
simulators/tasksim/Makefile.in:713:	  if test -f "$$i"; then \
simulators/tasksim/Makefile.in:720:distclean-tags:
simulators/tasksim/Makefile.in:721:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
simulators/tasksim/Makefile.in:728:	  sed -e "s|^$$srcdirstrip/||;t" \
simulators/tasksim/Makefile.in:729:	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
simulators/tasksim/Makefile.in:733:			   sort -u` ;; \
simulators/tasksim/Makefile.in:736:	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
simulators/tasksim/Makefile.in:737:	  if test -d $$d/$$file; then \
simulators/tasksim/Makefile.in:738:	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
simulators/tasksim/Makefile.in:739:	    if test -d "$(distdir)/$$file"; then \
simulators/tasksim/Makefile.in:740:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/tasksim/Makefile.in:742:	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
simulators/tasksim/Makefile.in:743:	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
simulators/tasksim/Makefile.in:744:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
simulators/tasksim/Makefile.in:746:	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
simulators/tasksim/Makefile.in:748:	    test -f "$(distdir)/$$file" \
simulators/tasksim/Makefile.in:749:	    || cp -p $$d/$$file "$(distdir)/$$file" \
simulators/tasksim/Makefile.in:756:	      || test -d "$(distdir)/$$subdir" \
simulators/tasksim/Makefile.in:778:check-am: all-am
simulators/tasksim/Makefile.in:779:check: check-recursive
simulators/tasksim/Makefile.in:780:all-am: Makefile $(PROGRAMS)
simulators/tasksim/Makefile.in:781:installdirs: installdirs-recursive
simulators/tasksim/Makefile.in:782:installdirs-am:
simulators/tasksim/Makefile.in:784:	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
simulators/tasksim/Makefile.in:786:install: install-recursive
simulators/tasksim/Makefile.in:787:install-exec: install-exec-recursive
simulators/tasksim/Makefile.in:788:install-data: install-data-recursive
simulators/tasksim/Makefile.in:789:uninstall: uninstall-recursive
simulators/tasksim/Makefile.in:791:install-am: all-am
simulators/tasksim/Makefile.in:792:	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
simulators/tasksim/Makefile.in:794:installcheck: installcheck-recursive
simulators/tasksim/Makefile.in:795:install-strip:
simulators/tasksim/Makefile.in:796:	if test -z '$(STRIP)'; then \
simulators/tasksim/Makefile.in:798:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/tasksim/Makefile.in:802:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
simulators/tasksim/Makefile.in:805:mostlyclean-generic:
simulators/tasksim/Makefile.in:807:clean-generic:
simulators/tasksim/Makefile.in:809:distclean-generic:
simulators/tasksim/Makefile.in:810:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
simulators/tasksim/Makefile.in:811:	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
simulators/tasksim/Makefile.in:813:maintainer-clean-generic:
simulators/tasksim/Makefile.in:816:clean: clean-recursive
simulators/tasksim/Makefile.in:818:clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am
simulators/tasksim/Makefile.in:820:distclean: distclean-recursive
simulators/tasksim/Makefile.in:821:	-rm -rf ./$(DEPDIR)
simulators/tasksim/Makefile.in:822:	-rm -f Makefile
simulators/tasksim/Makefile.in:823:distclean-am: clean-am distclean-compile distclean-generic \
simulators/tasksim/Makefile.in:824:	distclean-tags
simulators/tasksim/Makefile.in:826:dvi: dvi-recursive
simulators/tasksim/Makefile.in:828:dvi-am:
simulators/tasksim/Makefile.in:830:html: html-recursive
simulators/tasksim/Makefile.in:832:html-am:
simulators/tasksim/Makefile.in:834:info: info-recursive
simulators/tasksim/Makefile.in:836:info-am:
simulators/tasksim/Makefile.in:838:install-data-am:
simulators/tasksim/Makefile.in:840:install-dvi: install-dvi-recursive
simulators/tasksim/Makefile.in:842:install-dvi-am:
simulators/tasksim/Makefile.in:844:install-exec-am: install-binPROGRAMS
simulators/tasksim/Makefile.in:846:install-html: install-html-recursive
simulators/tasksim/Makefile.in:848:install-html-am:
simulators/tasksim/Makefile.in:850:install-info: install-info-recursive
simulators/tasksim/Makefile.in:852:install-info-am:
simulators/tasksim/Makefile.in:854:install-man:
simulators/tasksim/Makefile.in:856:install-pdf: install-pdf-recursive
simulators/tasksim/Makefile.in:858:install-pdf-am:
simulators/tasksim/Makefile.in:860:install-ps: install-ps-recursive
simulators/tasksim/Makefile.in:862:install-ps-am:
simulators/tasksim/Makefile.in:864:installcheck-am:
simulators/tasksim/Makefile.in:866:maintainer-clean: maintainer-clean-recursive
simulators/tasksim/Makefile.in:867:	-rm -rf ./$(DEPDIR)
simulators/tasksim/Makefile.in:868:	-rm -f Makefile
simulators/tasksim/Makefile.in:869:maintainer-clean-am: distclean-am maintainer-clean-generic
simulators/tasksim/Makefile.in:871:mostlyclean: mostlyclean-recursive
simulators/tasksim/Makefile.in:873:mostlyclean-am: mostlyclean-compile mostlyclean-generic \
simulators/tasksim/Makefile.in:874:	mostlyclean-libtool
simulators/tasksim/Makefile.in:876:pdf: pdf-recursive
simulators/tasksim/Makefile.in:878:pdf-am:
simulators/tasksim/Makefile.in:880:ps: ps-recursive
simulators/tasksim/Makefile.in:882:ps-am:
simulators/tasksim/Makefile.in:884:uninstall-am: uninstall-binPROGRAMS
simulators/tasksim/Makefile.in:886:.MAKE: $(am__recursive_targets) install-am install-strip
simulators/tasksim/Makefile.in:888:.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
simulators/tasksim/Makefile.in:889:	check-am clean clean-binPROGRAMS clean-generic clean-libtool \
simulators/tasksim/Makefile.in:890:	cscopelist-am ctags ctags-am distclean distclean-compile \
simulators/tasksim/Makefile.in:891:	distclean-generic distclean-libtool distclean-tags distdir dvi \
simulators/tasksim/Makefile.in:892:	dvi-am html html-am info info-am install install-am \
simulators/tasksim/Makefile.in:893:	install-binPROGRAMS install-data install-data-am install-dvi \
simulators/tasksim/Makefile.in:894:	install-dvi-am install-exec install-exec-am install-html \
simulators/tasksim/Makefile.in:895:	install-html-am install-info install-info-am install-man \
simulators/tasksim/Makefile.in:896:	install-pdf install-pdf-am install-ps install-ps-am \
simulators/tasksim/Makefile.in:897:	install-strip installcheck installcheck-am installdirs \
simulators/tasksim/Makefile.in:898:	installdirs-am maintainer-clean maintainer-clean-generic \
simulators/tasksim/Makefile.in:899:	mostlyclean mostlyclean-compile mostlyclean-generic \
simulators/tasksim/Makefile.in:900:	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-am uninstall \
simulators/tasksim/Makefile.in:901:	uninstall-am uninstall-binPROGRAMS
simulators/tasksim/tasksim_sumway.cpp:147:                sim::engine::Config(conf, "LittleCache"), current_cpu - big_cores));
simulators/tasksim/tasksim_sumway.cpp:178:        mem_cpus[i]->dl1_ >> dl1_caches[i]->in_[0];
simulators/tasksim/tasksim_sumway.cpp:179:        dl1_caches[i]->out_ >> l2_caches[i]->in_[0];
simulators/tasksim/tasksim_sumway.cpp:180:        l2_caches[i]->out_ >> l2_bus.input(0);
simulators/tasksim/tasksim_sumway.cpp:184:        mem_cpus[big_cores + i]->dl1_ >> little_caches[i]->in_[0];
simulators/tasksim/tasksim_sumway.cpp:185:        little_caches[i]->out_ >> l2_bus.input(0);
simulators/examples/helloworldsim/helloworldsim.cpp:159:    if (this->get_simulator().get_clock() == 50)
simulators/examples/helloworldsim/helloworldsim.cpp:171:    if (this->get_simulator().get_clock() < 50)
simulators/examples/helloworldsim/helloworldsim.cpp:173:        this->set_module_activity(50 - this->get_simulator().get_clock());
simulators/examples/helloworldsim/helloworldsim.cpp:177:        this->set_module_activity(engine::NEVER);
simulators/examples/helloworldsim/helloworldsim.cpp:225:    std::cout << "Consumer end: " << this->get_simulator().get_clock() << std::endl;
simulators/fastmemsim/runtime/FastMem.cpp:66:    sim::trace::fastmem::TraceReader* tr = cpu_buffers_[buffer_id]->tr_;
simulators/fastmemsim/runtime/FastMem.cpp:68:    while ((buffer.space_left() > 0) && (!tr->eof())) {
simulators/fastmemsim/runtime/FastMem.cpp:69:        trace::fastmem::mem_t mem = tr->getNextMem();
simulators/fastmemsim/runtime/FastMem.cpp:70:        if ((!tr->eof()) && (!mem.eob_))
simulators/fastmemsim/modules/cpu/FastMem.h:88:#include "FastMem-impl.h"
simulators/fastmemsim/modules/cpu/FastMem-impl.h:39:        ldst_queue_size_(conf.get_value<std::size_t>("ldst-size")),
simulators/fastmemsim/modules/cpu/FastMem-impl.h:82:    delete i->second;
simulators/fastmemsim/modules/cpu/FastMem-impl.h:99:    if (!memory_in_->read(mem_request)) return;
simulators/fastmemsim/modules/cpu/FastMem-impl.h:110:    send_cycle_ = this->get_simulator().get_clock() + mem_request.delay_ + 1;
simulators/fastmemsim/modules/cpu/FastMem-impl.h:123:    if (this->get_simulator().get_clock() < send_cycle_) return;
simulators/fastmemsim/modules/cpu/FastMem-impl.h:138:    ldst_queue_.insert(typename ldst_queue_t::value_type(pending_request_->get_tag(), pending_request_));
simulators/fastmemsim/modules/cpu/FastMem-impl.h:160:        this->set_module_activity(engine::NEVER);
simulators/fastmemsim/modules/cpu/FastMem-impl.h:162:    else if (this->get_simulator().get_clock() < send_cycle_)
simulators/fastmemsim/modules/cpu/FastMem-impl.h:164:        this->set_module_activity(send_cycle_ - this->get_simulator().get_clock());
simulators/fastmemsim/modules/cpu/FastMem-impl.h:168:        this->set_module_activity(engine::NEXT);
Binary file simulators/fastmemsim/modules/cpu/.FastMem-impl.h.swp matches
simulators/fastmemsim/fastmemsim.cpp:57:    int number_of_drams = conf.get_value<unsigned>("dram-count");
simulators/fastmemsim/fastmemsim.cpp:58:    int number_of_cpus = conf.get_value<unsigned>("cpu-count");
simulators/fastmemsim/fastmemsim.cpp:81:    dma->out_ >> l2_bus->input(0);
simulators/fastmemsim/fastmemsim.cpp:87:                sim::engine::Config(conf, "DRAM-" + ss.str()), mmu);
simulators/fastmemsim/fastmemsim.cpp:89:                             sim::interconnect::Direct>::Output &bus_output = l2_bus->output(0);
simulators/fastmemsim/fastmemsim.cpp:90:        bus_output >> memory[i]->in_;
simulators/fastmemsim/fastmemsim.cpp:107:        cpu[i]->dl1_ >> tlb[i]->in_;
simulators/fastmemsim/fastmemsim.cpp:109:        tlb[i]->out_ >> dl1_cache[i]->in_[0];
simulators/fastmemsim/fastmemsim.cpp:110:        tlb[i]->out_.set_wake_up_on_read(false);
simulators/fastmemsim/fastmemsim.cpp:112:        dl1_cache[i]->out_ >> l2_cache[i]->in_[0];
simulators/fastmemsim/fastmemsim.cpp:113:        l2_cache[i]->out_ >> l2_bus->input(0);
simulators/fastmemsim/fastmemsim.cpp:118:    mmu->load_access_profile();
simulators/fastmemsim/fastmemsim.cpp:120:    // tlb[0]->clear_page(clear_page_address);
simulators/fastmemsim/fastmemsim.cpp:124:    if (mmu_config.key_exists("output-access-profile")) {
simulators/fastmemsim/fastmemsim.cpp:125:        mmu->dump_access_table(mmu_config.get_value<std::string>("output-access-profile"));
Makefile.in:4:# Copyright (C) 1994-2013 Free Software Foundation, Inc.
Makefile.in:17:am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
Makefile.in:19:  case $${target_option-} in \
Makefile.in:22:              "target option '$${target_option-}' specified" >&2; \
Makefile.in:45:      *=*|--*) continue;; \
Makefile.in:46:        -*I) strip_trailopt 'I'; skip_next=yes;; \
Makefile.in:47:      -*I?*) strip_trailopt 'I';; \
Makefile.in:48:        -*O) strip_trailopt 'O'; skip_next=yes;; \
Makefile.in:49:      -*O?*) strip_trailopt 'O';; \
Makefile.in:50:        -*l) strip_trailopt 'l'; skip_next=yes;; \
Makefile.in:51:      -*l?*) strip_trailopt 'l';; \
Makefile.in:52:      -[dEDm]) skip_next=yes;; \
Makefile.in:53:      -[JT]) skip_next=yes;; \
Makefile.in:67:install_sh_DATA = $(install_sh) -c -m 644
Makefile.in:68:install_sh_PROGRAM = $(install_sh) -c
Makefile.in:69:install_sh_SCRIPT = $(install_sh) -c
Makefile.in:90:mkinstalldirs = $(install_sh) -d
Makefile.in:107:RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
Makefile.in:108:	ctags-recursive dvi-recursive html-recursive info-recursive \
Makefile.in:109:	install-data-recursive install-dvi-recursive \
Makefile.in:110:	install-exec-recursive install-html-recursive \
Makefile.in:111:	install-info-recursive install-pdf-recursive \
Makefile.in:112:	install-ps-recursive install-recursive installcheck-recursive \
Makefile.in:113:	installdirs-recursive pdf-recursive ps-recursive \
Makefile.in:114:	tags-recursive uninstall-recursive
Makefile.in:118:    *) (install-info --version) >/dev/null 2>&1;; \
Makefile.in:120:RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
Makefile.in:121:  distclean-recursive maintainer-clean-recursive
Makefile.in:126:AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
Makefile.in:129:# Read a list of newline-separated strings from the standard input,
Makefile.in:143:    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
Makefile.in:155:  while test -n "$$dir1"; do \
Makefile.in:156:    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
Makefile.in:159:        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
Makefile.in:160:        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
Makefile.in:162:        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
Makefile.in:164:          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
Makefile.in:171:    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
Makefile.in:323:all: all-recursive
Makefile.in:330:	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
Makefile.in:331:	        && { if test -f $@; then exit 0; else break; fi; }; \
Makefile.in:335:	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
Makefile.in:337:	  $(AUTOMAKE) --gnu src/Makefile
Makefile.in:342:	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
Makefile.in:349:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
Makefile.in:352:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
Makefile.in:354:	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
Makefile.in:357:mostlyclean-libtool:
Makefile.in:358:	-rm -f *.lo
Makefile.in:360:clean-libtool:
Makefile.in:361:	-rm -rf .libs _libs
Makefile.in:377:	target=`echo $@ | sed s/-recursive//`; \
Makefile.in:379:	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
Makefile.in:386:	    local_target="$$target-am"; \
Makefile.in:394:	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
Makefile.in:395:	fi; test -z "$$fail"
Makefile.in:398:	$(am__define_uniq_tagged_files); mkid -fID $$unique
Makefile.in:399:tags: tags-recursive
Makefile.in:402:tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
Makefile.in:405:	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
Makefile.in:406:	  include_option=--etags-include; \
Makefile.in:409:	  include_option=--include; \
Makefile.in:414:	    test ! -f $$subdir/TAGS || \
Makefile.in:420:	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
Makefile.in:421:	  test -n "$$unique" || unique=$$empty_fix; \
Makefile.in:422:	  if test $$# -gt 0; then \
Makefile.in:430:ctags: ctags-recursive
Makefile.in:433:ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
Makefile.in:435:	test -z "$(CTAGS_ARGS)$$unique" \
Makefile.in:442:	  && gtags -i $(GTAGS_ARGS) "$$here"
Makefile.in:443:cscopelist: cscopelist-recursive
Makefile.in:445:cscopelist-am: $(am__tagged_files)
Makefile.in:452:	  if test -f "$$i"; then \
Makefile.in:459:distclean-tags:
Makefile.in:460:	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
Makefile.in:467:	  sed -e "s|^$$srcdirstrip/||;t" \
Makefile.in:468:	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
Makefile.in:472:			   sort -u` ;; \
Makefile.in:475:	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
Makefile.in:476:	  if test -d $$d/$$file; then \
Makefile.in:477:	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
Makefile.in:478:	    if test -d "$(distdir)/$$file"; then \
Makefile.in:479:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
Makefile.in:481:	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
Makefile.in:482:	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
Makefile.in:483:	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
Makefile.in:485:	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
Makefile.in:487:	    test -f "$(distdir)/$$file" \
Makefile.in:488:	    || cp -p $$d/$$file "$(distdir)/$$file" \
Makefile.in:495:	      || test -d "$(distdir)/$$subdir" \
Makefile.in:517:check-am: all-am
Makefile.in:518:check: check-recursive
Makefile.in:519:all-am: Makefile
Makefile.in:520:installdirs: installdirs-recursive
Makefile.in:521:installdirs-am:
Makefile.in:522:install: install-recursive
Makefile.in:523:install-exec: install-exec-recursive
Makefile.in:524:install-data: install-data-recursive
Makefile.in:525:uninstall: uninstall-recursive
Makefile.in:527:install-am: all-am
Makefile.in:528:	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
Makefile.in:530:installcheck: installcheck-recursive
Makefile.in:531:install-strip:
Makefile.in:532:	if test -z '$(STRIP)'; then \
Makefile.in:534:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
Makefile.in:538:	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
Makefile.in:541:mostlyclean-generic:
Makefile.in:543:clean-generic:
Makefile.in:545:distclean-generic:
Makefile.in:546:	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
Makefile.in:547:	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
Makefile.in:549:maintainer-clean-generic:
Makefile.in:552:clean: clean-recursive
Makefile.in:554:clean-am: clean-generic clean-libtool mostlyclean-am
Makefile.in:556:distclean: distclean-recursive
Makefile.in:557:	-rm -f Makefile
Makefile.in:558:distclean-am: clean-am distclean-generic distclean-tags
Makefile.in:560:dvi: dvi-recursive
Makefile.in:562:dvi-am:
Makefile.in:564:html: html-recursive
Makefile.in:566:html-am:
Makefile.in:568:info: info-recursive
Makefile.in:570:info-am:
Makefile.in:572:install-data-am:
Makefile.in:574:install-dvi: install-dvi-recursive
Makefile.in:576:install-dvi-am:
Makefile.in:578:install-exec-am:
Makefile.in:580:install-html: install-html-recursive
Makefile.in:582:install-html-am:
Makefile.in:584:install-info: install-info-recursive
Makefile.in:586:install-info-am:
Makefile.in:588:install-man:
Makefile.in:590:install-pdf: install-pdf-recursive
Makefile.in:592:install-pdf-am:
Makefile.in:594:install-ps: install-ps-recursive
Makefile.in:596:install-ps-am:
Makefile.in:598:installcheck-am:
Makefile.in:600:maintainer-clean: maintainer-clean-recursive
Makefile.in:601:	-rm -f Makefile
Makefile.in:602:maintainer-clean-am: distclean-am maintainer-clean-generic
Makefile.in:604:mostlyclean: mostlyclean-recursive
Makefile.in:606:mostlyclean-am: mostlyclean-generic mostlyclean-libtool
Makefile.in:608:pdf: pdf-recursive
Makefile.in:610:pdf-am:
Makefile.in:612:ps: ps-recursive
Makefile.in:614:ps-am:
Makefile.in:616:uninstall-am:
Makefile.in:618:.MAKE: $(am__recursive_targets) install-am install-strip
Makefile.in:620:.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am check \
Makefile.in:621:	check-am clean clean-generic clean-libtool cscopelist-am ctags \
Makefile.in:622:	ctags-am distclean distclean-generic distclean-libtool \
Makefile.in:623:	distclean-tags distdir dvi dvi-am html html-am info info-am \
Makefile.in:624:	install install-am install-data install-data-am install-dvi \
Makefile.in:625:	install-dvi-am install-exec install-exec-am install-html \
Makefile.in:626:	install-html-am install-info install-info-am install-man \
Makefile.in:627:	install-pdf install-pdf-am install-ps install-ps-am \
Makefile.in:628:	install-strip installcheck installcheck-am installdirs \
Makefile.in:629:	installdirs-am maintainer-clean maintainer-clean-generic \
Makefile.in:630:	mostlyclean mostlyclean-generic mostlyclean-libtool pdf pdf-am \
Makefile.in:631:	ps ps-am tags tags-am uninstall uninstall-am
Makefile.in:634:export AM_CPPFLAGS = $(global_cppflags) -I$(abs_top_builddir)/include -I$(abs_srcdir) -I$(abs_builddir)
Makefile.in:635:@ENABLE_NANOX_TRUE@  export AM_CPPFLAGS += -I@nanox_install_path@/include/nanox -I@nanox_install_path@/include -I@nanox_src_path@/src/apis/c -I@nanox_src_path@/src/support -I@nanox_src_path@/src/core -I@nanox_src_path@/src/arch/smp -I@nanox_src_path@/src/arch/unix-os -I@nanox_src_path@/src/arch/cluster -I@nanox_src_path@/src
Makefile.in:636:@ENABLE_NANOX_TRUE@  export AM_CXXFLAGS += -include "new_decl.hpp"
Makefile.in:637:@ENABLE_DRAMSIM_TRUE@  export AM_CPPFLAGS += -I@dramsim_src_path@
Makefile.in:638:@ENABLE_RAMULATOR_TRUE@  export AM_CPPFLAGS += -I@ramulator_src_path@
