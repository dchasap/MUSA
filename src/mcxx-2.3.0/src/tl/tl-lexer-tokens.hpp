#ifndef TL_LEXER_TOKENS_HPP
#define TL_LEXER_TOKENS_HPP
namespace TL {
namespace TokensC {
   enum yytokentype {
     END = 0,
     ADD_ASSIGN = 258,
     ANDAND = 259,
     AND_ASSIGN = 260,
     ASM = 261,
     TOKEN_AUTO_STORAGE = 262,
     TOKEN_BOOL = 263,
     BOOLEAN_LITERAL = 264,
     BREAK = 265,
     CASE = 266,
     TOKEN_CHAR = 267,
     CHARACTER_LITERAL = 268,
     TOKEN_CONST = 269,
     CONTINUE = 270,
     DECIMAL_LITERAL = 271,
     DEFAULT = 272,
     DIV_ASSIGN = 273,
     DO = 274,
     TOKEN_DOUBLE = 275,
     ELSE = 276,
     ENUM = 277,
     EQUAL = 278,
     EXTERN = 279,
     TOKEN_FLOAT = 280,
     FLOATING_LITERAL = 281,
     HEXADECIMAL_FLOAT = 282,
     FOR = 283,
     GOTO = 284,
     GREATER_OR_EQUAL = 285,
     BINARY_LITERAL = 286,
     HEXADECIMAL_LITERAL = 287,
     IDENTIFIER = 288,
     IF = 289,
     INLINE = 290,
     TOKEN_INT = 291,
     TOKEN_INT128 = 292,
     TOKEN_FLOAT128 = 293,
     LEFT = 294,
     LEFT_ASSIGN = 295,
     LESS_OR_EQUAL = 296,
     TOKEN_LONG = 297,
     MINUSMINUS = 298,
     MOD_ASSIGN = 299,
     MUL_ASSIGN = 300,
     NOT_EQUAL = 301,
     OCTAL_LITERAL = 302,
     OR_ASSIGN = 303,
     OROR = 304,
     PLUSPLUS = 305,
     PTR_OP = 306,
     REGISTER = 307,
     RETURN = 308,
     RIGHT = 309,
     RIGHT_ASSIGN = 310,
     TOKEN_SHORT = 311,
     TOKEN_SIGNED = 312,
     SIZEOF = 313,
     STATIC = 314,
     STRING_LITERAL = 315,
     STRUCT = 316,
     SUB_ASSIGN = 317,
     SWITCH = 318,
     ELLIPSIS = 319,
     TYPEDEF = 320,
     UNION = 321,
     TOKEN_UNSIGNED = 322,
     TOKEN_VOID = 323,
     TOKEN_VOLATILE = 324,
     WHILE = 325,
     XOR_ASSIGN = 326,
     PP_COMMENT = 327,
     PP_TOKEN = 328,
     MCC_REFERENCE = 329,
     MCC_REBINDABLE_REFERENCE = 330,
     TOKEN_ATOMIC = 331,
     TOKEN_GENERIC = 332,
     TOKEN_NORETURN = 333,
     STATIC_ASSERT = 334,
     TOKEN_THREAD_LOCAL = 335,
     BUILTIN_VA_ARG = 336,
     BUILTIN_OFFSETOF = 337,
     BUILTIN_CHOOSE_EXPR = 338,
     BUILTIN_TYPES_COMPATIBLE_P = 339,
     TOKEN_GCC_ALIGNOF = 340,
     EXTENSION = 341,
     REAL = 342,
     IMAG = 343,
     LABEL = 344,
     COMPLEX = 345,
     IMAGINARY = 346,
     TYPEOF = 347,
     RESTRICT = 348,
     TOKEN_GCC_ATTRIBUTE = 349,
     THREAD = 350,
     SUBPARSE_EXPRESSION = 351,
     SUBPARSE_EXPRESSION_LIST = 352,
     SUBPARSE_STATEMENT = 353,
     SUBPARSE_DECLARATION = 354,
     SUBPARSE_MEMBER = 355,
     SUBPARSE_TYPE = 356,
     SUBPARSE_TYPE_LIST = 357,
     SUBPARSE_ID_EXPRESSION = 358,
     NODECL_LITERAL_EXPR = 359,
     NODECL_LITERAL_STMT = 360,
     SYMBOL_LITERAL_REF = 361,
     TYPE_LITERAL_REF = 362,
     MCC_BYTE = 363,
     MCC_BOOL = 364,
     MCC_MASK = 365,
     MCC_ARRAY_SUBSCRIPT_CHECK = 366,
     MCC_CONST_VALUE_CHECK = 367,
     C_FORTRAN_ALLOCATE = 368,
     STATEMENT_PLACEHOLDER = 369,
     UNKNOWN_PRAGMA = 370,
     VERBATIM_PRAGMA = 371,
     VERBATIM_CONSTRUCT = 372,
     VERBATIM_TYPE = 373,
     VERBATIM_TEXT = 374,
     PRAGMA_CUSTOM = 375,
     PRAGMA_CUSTOM_NEWLINE = 376,
     PRAGMA_CUSTOM_DIRECTIVE = 377,
     PRAGMA_CUSTOM_CONSTRUCT = 378,
     PRAGMA_CUSTOM_END_CONSTRUCT = 379,
     PRAGMA_CUSTOM_CONSTRUCT_NOEND = 380,
     PRAGMA_CUSTOM_END_CONSTRUCT_NOEND = 381,
     PRAGMA_CUSTOM_CLAUSE = 382,
     PRAGMA_CLAUSE_ARG_TEXT = 383,
     SUBPARSE_OPENMP_DECLARE_REDUCTION = 384,
     SUBPARSE_OPENMP_DEPEND_ITEM = 385,
     SUBPARSE_OMPSS_DEPENDENCY_EXPRESSION = 386,
     TWO_DOTS = 387,
     SUBPARSE_SUPERSCALAR_DECLARATOR = 388,
     SUBPARSE_SUPERSCALAR_DECLARATOR_LIST = 389,
     SUBPARSE_SUPERSCALAR_EXPRESSION = 390,
     UPC_MYTHREAD = 391,
     UPC_RELAXED = 392,
     UPC_SHARED = 393,
     UPC_STRICT = 394,
     UPC_THREADS = 395,
     UPC_BARRIER = 396,
     UPC_BLOCKSIZEOF = 397,
     UPC_ELEMSIZEOF = 398,
     UPC_FENCE = 399,
     UPC_FORALL = 400,
     UPC_LOCALSIZEOF = 401,
     UPC_MAX_BLOCKSIZE = 402,
     UPC_NOTIFY = 403,
     UPC_WAIT = 404,
     CUDA_DEVICE = 405,
     CUDA_GLOBAL = 406,
     CUDA_HOST = 407,
     CUDA_CONSTANT = 408,
     CUDA_SHARED = 409,
     CUDA_KERNEL_LEFT = 410,
     CUDA_KERNEL_RIGHT = 411,
     OPENCL_GLOBAL = 412,
     OPENCL_KERNEL = 413,
     OPENCL_CONSTANT = 414,
     OPENCL_LOCAL = 415,
     XL_BUILTIN_SPEC = 416,
     TOKEN_DECLSPEC = 417,
     MS_INT8 = 418,
     MS_INT16 = 419,
     MS_INT32 = 420,
     MS_INT64 = 421,
     INTEL_ASSUME = 422,
     INTEL_ASSUME_ALIGNED = 423
   };
}
namespace TokensCXX {
   enum yytokentype {
     END = 0,
     ADD_ASSIGN = 258,
     ANDAND = 259,
     AND_ASSIGN = 260,
     ASM = 261,
     TOKEN_AUTO_STORAGE = 262,
     TOKEN_AUTO_TYPE = 263,
     TOKEN_BOOL = 264,
     BOOLEAN_LITERAL = 265,
     BREAK = 266,
     CASE = 267,
     CATCH = 268,
     TOKEN_CHAR = 269,
     CHARACTER_LITERAL = 270,
     CLASS = 271,
     TOKEN_CONST = 272,
     CONST_CAST = 273,
     CONTINUE = 274,
     DECIMAL_LITERAL = 275,
     DEFAULT = 276,
     TOKEN_DELETE = 277,
     TOKEN_DELETE_ARRAY = 278,
     DIV_ASSIGN = 279,
     DO = 280,
     TWO_COLONS = 281,
     TWO_COLONS_AND_STAR = 282,
     TOKEN_DOUBLE = 283,
     DYNAMIC_CAST = 284,
     ELSE = 285,
     ENUM = 286,
     EQUAL = 287,
     DECLTYPE = 288,
     EXPLICIT = 289,
     EXPORT = 290,
     EXTERN = 291,
     TOKEN_FLOAT = 292,
     FLOATING_LITERAL = 293,
     HEXADECIMAL_FLOAT = 294,
     FOR = 295,
     FRIEND = 296,
     GOTO = 297,
     BINARY_LITERAL = 298,
     HEXADECIMAL_LITERAL = 299,
     IDENTIFIER = 300,
     TOK_FINAL = 301,
     TOK_OVERRIDE = 302,
     IF = 303,
     INLINE = 304,
     TOKEN_INT = 305,
     TOKEN_INT128 = 306,
     TOKEN_FLOAT128 = 307,
     LEFT = 308,
     LEFT_ASSIGN = 309,
     LESS_OR_EQUAL = 310,
     TOKEN_LONG = 311,
     MINUSMINUS = 312,
     MOD_ASSIGN = 313,
     MUL_ASSIGN = 314,
     MUTABLE = 315,
     NAMESPACE = 316,
     TOKEN_NEW = 317,
     TOKEN_NEW_ARRAY = 318,
     NOT_EQUAL = 319,
     OCTAL_LITERAL = 320,
     OPERATOR = 321,
     OPERATOR_LITERAL = 322,
     OR_ASSIGN = 323,
     OROR = 324,
     PLUSPLUS = 325,
     PRIVATE = 326,
     PROTECTED = 327,
     PTR_OP = 328,
     PTR_OP_MUL = 329,
     PUBLIC = 330,
     REGISTER = 331,
     REINTERPRET_CAST = 332,
     RETURN = 333,
     TOKEN_SHORT = 334,
     TOKEN_SIGNED = 335,
     SIZEOF = 336,
     STATIC = 337,
     STATIC_CAST = 338,
     STRING_LITERAL = 339,
     STRUCT = 340,
     SUB_ASSIGN = 341,
     SWITCH = 342,
     TEMPLATE = 343,
     TOKEN_THIS = 344,
     THROW = 345,
     ELLIPSIS = 346,
     TRY = 347,
     TYPEDEF = 348,
     TYPEID = 349,
     TYPENAME = 350,
     UNION = 351,
     TOKEN_UNSIGNED = 352,
     USING = 353,
     VIRTUAL = 354,
     TOKEN_VOID = 355,
     TOKEN_VOLATILE = 356,
     TOKEN_WCHAR_T = 357,
     TOKEN_CHAR16_T = 358,
     TOKEN_CHAR32_T = 359,
     TOKEN_ALIGNOF = 360,
     TOKEN_ALIGNAS = 361,
     WHILE = 362,
     XOR_ASSIGN = 363,
     STATIC_ASSERT = 364,
     PP_COMMENT = 365,
     PP_TOKEN = 366,
     MCC_REBINDABLE_REFERENCE = 367,
     GXX_HAS_NOTHROW_ASSIGN = 368,
     GXX_HAS_NOTHROW_CONSTRUCTOR = 369,
     GXX_HAS_NOTHROW_COPY = 370,
     GXX_HAS_TRIVIAL_ASSIGN = 371,
     GXX_HAS_TRIVIAL_CONSTRUCTOR = 372,
     GXX_HAS_TRIVIAL_COPY = 373,
     GXX_HAS_TRIVIAL_DESTRUCTOR = 374,
     GXX_HAS_VIRTUAL_DESTRUCTOR = 375,
     GXX_IS_ABSTRACT = 376,
     GXX_IS_BASE_OF = 377,
     GXX_IS_CLASS = 378,
     GXX_IS_CONVERTIBLE_TO = 379,
     GXX_IS_EMPTY = 380,
     GXX_IS_ENUM = 381,
     GXX_IS_LITERAL_TYPE = 382,
     GXX_IS_POD = 383,
     GXX_IS_POLYMORPHIC = 384,
     GXX_IS_STANDARD_LAYOUT = 385,
     GXX_IS_TRIVIAL = 386,
     GXX_IS_UNION = 387,
     GXX_IS_FINAL = 388,
     GXX_UNDERLYING_TYPE = 389,
     GXX_IS_TRIVIALLY_ASSIGNABLE = 390,
     GXX_IS_TRIVIALLY_CONSTRUCTIBLE = 391,
     GXX_IS_TRIVIALLY_COPYABLE = 392,
     RIGHT = 393,
     RIGHT_ASSIGN = 394,
     GREATER_OR_EQUAL = 395,
     AB1 = 396,
     STD_ATTRIBUTE_START = 397,
     STD_ATTRIBUTE_END = 398,
     STD_ATTRIBUTE_TEXT = 399,
     TOKEN_CONSTEXPR = 400,
     TOKEN_THREAD_LOCAL = 401,
     TOKEN_NULLPTR = 402,
     TOKEN_NOEXCEPT = 403,
     TOKEN_NOEXCEPT_ALONE = 404,
     BUILTIN_VA_ARG = 405,
     BUILTIN_OFFSETOF = 406,
     BUILTIN_ADDRESSOF = 407,
     TOKEN_GCC_ALIGNOF = 408,
     EXTENSION = 409,
     REAL = 410,
     IMAG = 411,
     LABEL = 412,
     COMPLEX = 413,
     TYPEOF = 414,
     RESTRICT = 415,
     TOKEN_GCC_ATTRIBUTE = 416,
     THREAD = 417,
     SUBPARSE_EXPRESSION = 418,
     SUBPARSE_EXPRESSION_LIST = 419,
     SUBPARSE_STATEMENT = 420,
     SUBPARSE_DECLARATION = 421,
     SUBPARSE_MEMBER = 422,
     SUBPARSE_TYPE = 423,
     SUBPARSE_TYPE_LIST = 424,
     SUBPARSE_ID_EXPRESSION = 425,
     NODECL_LITERAL_EXPR = 426,
     NODECL_LITERAL_STMT = 427,
     SYMBOL_LITERAL_REF = 428,
     TYPE_LITERAL_REF = 429,
     MCC_BYTE = 430,
     MCC_BOOL = 431,
     MCC_MASK = 432,
     MCC_ARRAY_SUBSCRIPT_CHECK = 433,
     MCC_CONST_VALUE_CHECK = 434,
     C_FORTRAN_ALLOCATE = 435,
     STATEMENT_PLACEHOLDER = 436,
     UNKNOWN_PRAGMA = 437,
     VERBATIM_PRAGMA = 438,
     VERBATIM_CONSTRUCT = 439,
     VERBATIM_TYPE = 440,
     VERBATIM_TEXT = 441,
     PRAGMA_CUSTOM = 442,
     PRAGMA_CUSTOM_NEWLINE = 443,
     PRAGMA_CUSTOM_DIRECTIVE = 444,
     PRAGMA_CUSTOM_CONSTRUCT = 445,
     PRAGMA_CUSTOM_END_CONSTRUCT = 446,
     PRAGMA_CUSTOM_CONSTRUCT_NOEND = 447,
     PRAGMA_CUSTOM_END_CONSTRUCT_NOEND = 448,
     PRAGMA_CUSTOM_CLAUSE = 449,
     PRAGMA_CLAUSE_ARG_TEXT = 450,
     SUBPARSE_OPENMP_DECLARE_REDUCTION = 451,
     SUBPARSE_OPENMP_DEPEND_ITEM = 452,
     SUBPARSE_OMPSS_DEPENDENCY_EXPRESSION = 453,
     TWO_DOTS = 454,
     SUBPARSE_SUPERSCALAR_DECLARATOR = 455,
     SUBPARSE_SUPERSCALAR_DECLARATOR_LIST = 456,
     SUBPARSE_SUPERSCALAR_EXPRESSION = 457,
     CUDA_DEVICE = 458,
     CUDA_GLOBAL = 459,
     CUDA_HOST = 460,
     CUDA_CONSTANT = 461,
     CUDA_SHARED = 462,
     CUDA_KERNEL_LEFT = 463,
     CUDA_KERNEL_RIGHT = 464,
     OPENCL_GLOBAL = 465,
     OPENCL_KERNEL = 466,
     OPENCL_CONSTANT = 467,
     OPENCL_LOCAL = 468,
     XL_BUILTIN_SPEC = 469,
     TOKEN_DECLSPEC = 470,
     MS_INT8 = 471,
     MS_INT16 = 472,
     MS_INT32 = 473,
     MS_INT64 = 474,
     INTEL_ASSUME = 475,
     INTEL_ASSUME_ALIGNED = 476
   };
}
namespace TokensFortran {
   enum yytokentype {
     END = 0,
     TOKEN_FORMAT = 258,
     TOKEN_GENERIC = 259,
     TOKEN_VOLATILE = 260,
     TOKEN_EQUIVALENCE = 261,
     TOKEN_EOR = 262,
     TOKEN_PROTECTED = 263,
     TOKEN_PAD = 264,
     TOKEN_FILE = 265,
     TOKEN_UNFORMATTED = 266,
     TOKEN_NAMED = 267,
     TOKEN_SUBROUTINE = 268,
     TOKEN_OPENED = 269,
     TOKEN_DELIM = 270,
     TOKEN_SOURCE = 271,
     TOKEN_CRITICAL = 272,
     TOKEN_ACTION = 273,
     TOKEN_IMPORT = 274,
     TOKEN_BLOCK = 275,
     TOKEN_ENUM = 276,
     TOKEN_OVERRIDABLE = 277,
     TOKEN_MODULE = 278,
     TOKEN_SIGN = 279,
     TOKEN_EXTENDS = 280,
     TOKEN_PASS = 281,
     TOKEN_GO = 282,
     TOKEN_ENTRY = 283,
     TOKEN_WHERE = 284,
     TOKEN_ENDWHERE = 285,
     TOKEN_PROCEDURE = 286,
     TOKEN_NAME = 287,
     TOKEN_DOUBLE = 288,
     TOKEN_CONTAINS = 289,
     TOKEN_LOGICAL = 290,
     TOKEN_NEWUNIT = 291,
     TOKEN_NULLIFY = 292,
     TOKEN_DEFERRED = 293,
     TOKEN_ONLY = 294,
     TOKEN_EXIST = 295,
     TOKEN_INTERFACE = 296,
     TOKEN_SAVE = 297,
     TOKEN_ADVANCE = 298,
     TOKEN_STAT = 299,
     TOKEN_RETURN = 300,
     TOKEN_READWRITE = 301,
     TOKEN_ASSIGNMENT = 302,
     TOKEN_ASSIGN = 303,
     TOKEN_PRINT = 304,
     TOKEN_IOSTAT = 305,
     TOKEN_SYNC = 306,
     TOKEN_COMPLEX = 307,
     TOKEN_ASYNCHRONOUS = 308,
     TOKEN_IMAGES = 309,
     TOKEN_END = 310,
     TOKEN_FINAL = 311,
     TOKEN_INOUT = 312,
     TOKEN_NEXTREC = 313,
     TOKEN_KIND = 314,
     TOKEN_COMMON = 315,
     TOKEN_BLANK = 316,
     TOKEN_IOLENGTH = 317,
     TOKEN_INTEGER = 318,
     TOKEN_DEALLOCATE = 319,
     TOKEN_FUNCTION = 320,
     TOKEN_C = 321,
     TOKEN_OPENCL = 322,
     TOKEN_ENUMERATOR = 323,
     TOKEN_RECURSIVE = 324,
     TOKEN_SEQUENCE = 325,
     TOKEN_INQUIRE = 326,
     TOKEN_FLUSH = 327,
     TOKEN_ELSE = 328,
     TOKEN_INTENT = 329,
     TOKEN_EXTERNAL = 330,
     TOKEN_OPERATOR = 331,
     TOKEN_OPTIONAL = 332,
     TOKEN_UNIT = 333,
     TOKEN_SIZE = 334,
     TOKEN_NOPASS = 335,
     TOKEN_TYPE = 336,
     TOKEN_MOLD = 337,
     TOKEN_PRECISION = 338,
     TOKEN_PENDING = 339,
     TOKEN_CONTINUE = 340,
     TOKEN_RESULT = 341,
     TOKEN_REAL = 342,
     TOKEN_THEN = 343,
     TOKEN_STREAM = 344,
     TOKEN_DO = 345,
     TOKEN_DEFAULT = 346,
     TOKEN_CONTIGUOUS = 347,
     TOKEN_STOP = 348,
     TOKEN_PAUSE = 349,
     TOKEN_WHILE = 350,
     TOKEN_PROGRAM = 351,
     TOKEN_REC = 352,
     TOKEN_OPEN = 353,
     TOKEN_CASE = 354,
     TOKEN_RECL = 355,
     TOKEN_DIMENSION = 356,
     TOKEN_ELEMENTAL = 357,
     TOKEN_FORALL = 358,
     TOKEN_POSITION = 359,
     TOKEN_FMT = 360,
     TOKEN_READ = 361,
     TOKEN_OUT = 362,
     TOKEN_LOCK = 363,
     TOKEN_DECIMAL = 364,
     TOKEN_SELECT = 365,
     TOKEN_SELECTCASE = 366,
     TOKEN_DIRECT = 367,
     TOKEN_WRITE = 368,
     TOKEN_CODIMENSION = 369,
     TOKEN_CLOSE = 370,
     TOKEN_ID = 371,
     TOKEN_WAIT = 372,
     TOKEN_ALL = 373,
     TOKEN_ELSEWHERE = 374,
     TOKEN_LEN = 375,
     TOKEN_IMPURE = 376,
     TOKEN_EXIT = 377,
     TOKEN_REWIND = 378,
     TOKEN_BACKSPACE = 379,
     TOKEN_NML = 380,
     TOKEN_INTRINSIC = 381,
     TOKEN_PUBLIC = 382,
     TOKEN_ERRMSG = 383,
     TOKEN_NAMELIST = 384,
     TOKEN_USE = 385,
     TOKEN_SUBMODULE = 386,
     TOKEN_ERR = 387,
     TOKEN_ENCODING = 388,
     TOKEN_ACQUIRED = 389,
     TOKEN_ABSTRACT = 390,
     TOKEN_CHARACTER = 391,
     TOKEN_NUMBER = 392,
     TOKEN_CONCURRENT = 393,
     TOKEN_ENDFILE = 394,
     TOKEN_PARAMETER = 395,
     TOKEN_DATA = 396,
     TOKEN_POS = 397,
     TOKEN_PRIVATE = 398,
     TOKEN_ROUND = 399,
     TOKEN_TO = 400,
     TOKEN_SEQUENTIAL = 401,
     TOKEN_ALLOCATE = 402,
     TOKEN_TARGET = 403,
     TOKEN_CLASS = 404,
     TOKEN_CYCLE = 405,
     TOKEN_STATUS = 406,
     TOKEN_IOMSG = 407,
     TOKEN_FORM = 408,
     TOKEN_IS = 409,
     TOKEN_NONE = 410,
     TOKEN_VALUE = 411,
     TOKEN_UNLOCK = 412,
     TOKEN_FORMATTED = 413,
     TOKEN_IN = 414,
     TOKEN_IMPLICIT = 415,
     TOKEN_IF = 416,
     TOKEN_ASSOCIATE = 417,
     TOKEN_BIND = 418,
     TOKEN_ALLOCATABLE = 419,
     TOKEN_ACCESS = 420,
     TOKEN_CALL = 421,
     TOKEN_CONVERT = 422,
     TOKEN_BUFFERED = 423,
     TOKEN_PURE = 424,
     TOKEN_MEMORY = 425,
     TOKEN_POINTER = 426,
     TOKEN_VECTOR = 427,
     TOKEN_PIXEL = 428,
     TOKEN_NON_OVERRIDABLE = 429,
     TOKEN_NON_INTRINSIC = 430,
     TOKEN_HOLLERITH_CONSTANT = 431,
     TOKEN_ALLSTOP = 432,
     TOKEN_ENDDO = 433,
     TOKEN_ENDIF = 434,
     TOKEN_ENDFUNCTION = 435,
     TOKEN_BLOCKDATA = 436,
     TOKEN_ENDMODULE = 437,
     TOKEN_DOUBLEPRECISION = 438,
     TOKEN_ENDINTERFACE = 439,
     TOKEN_ELSEIF = 440,
     TOKEN_ENDPROCEDURE = 441,
     TOKEN_ENDPROGRAM = 442,
     TOKEN_ENDASSOCIATE = 443,
     TOKEN_ENDSELECT = 444,
     TOKEN_ENDBLOCK = 445,
     TOKEN_ENDSUBMODULE = 446,
     TOKEN_ENDBLOCKDATA = 447,
     TOKEN_ENDSUBROUTINE = 448,
     TOKEN_ENDCRITICAL = 449,
     TOKEN_ENDTYPE = 450,
     TOKEN_DOUBLECOMPLEX = 451,
     TOKEN_GOTO = 452,
     TOKEN_LOGICAL_NOT_EQUIVALENT = 453,
     TOKEN_POINTER_ACCESS = 454,
     TOKEN_GREATER_THAN = 455,
     TOKEN_EQUAL = 456,
     TOKEN_LOGICAL_AND = 457,
     TOKEN_LOWER_THAN = 458,
     TOKEN_LOGICAL_NOT = 459,
     TOKEN_LOGICAL_EQUIVALENT = 460,
     TOKEN_GREATER_OR_EQUAL_THAN = 461,
     TOKEN_LOGICAL_OR = 462,
     TOKEN_LOWER_OR_EQUAL_THAN = 464,
     TOKEN_NOT_EQUAL = 465,
     TOKEN_RAISE = 466,
     TOKEN_DOUBLE_SLASH = 467,
     TOKEN_LPARENT_SLASH = 468,
     TOKEN_SLASH_RPARENT = 469,
     TOKEN_TRUE = 470,
     TOKEN_FALSE = 471,
     DECIMAL_LITERAL = 472,
     FORMAT_SPEC = 473,
     IDENTIFIER = 474,
     EOS = 475,
     BINARY_LITERAL = 476,
     OCTAL_LITERAL = 477,
     REAL_LITERAL = 478,
     CHAR_LITERAL = 479,
     HEX_LITERAL = 480,
     USER_DEFINED_OPERATOR = 481,
     TOKEN_END_NONBLOCK_DO = 482,
     TOKEN_SHARED_LABEL = 483,
     GLOBAL = 484,
     END_GLOBAL = 485,
     TYPEDEF = 486,
     TOKEN_IS_VARIABLE = 487,
     SUBPARSE_PROGRAM_UNIT = 488,
     SUBPARSE_EXPRESSION = 489,
     SUBPARSE_STATEMENT = 490,
     NODECL_LITERAL_EXPR = 491,
     NODECL_LITERAL_STMT = 492,
     SYMBOL_LITERAL_REF = 493,
     TYPE_LITERAL_REF = 494,
     UNKNOWN_PRAGMA = 495,
     PRAGMA_CUSTOM = 496,
     PRAGMA_CUSTOM_NEWLINE = 497,
     PRAGMA_CUSTOM_DIRECTIVE = 498,
     PRAGMA_CUSTOM_CONSTRUCT = 499,
     PRAGMA_CUSTOM_END_CONSTRUCT = 500,
     PRAGMA_CUSTOM_CONSTRUCT_NOEND = 501,
     PRAGMA_CUSTOM_END_CONSTRUCT_NOEND = 502,
     PRAGMA_CUSTOM_CLAUSE = 503,
     PRAGMA_CLAUSE_ARG_TEXT = 504,
     STATEMENT_PLACEHOLDER = 505,
     SUBPARSE_OPENMP_DECLARE_REDUCTION = 506,
     SUBPARSE_OPENMP_DEPEND_ITEM = 507,
     SUBPARSE_OMPSS_DEPENDENCY_EXPRESSION = 508
   };
}
}
#endif // TL_LEXER_TOKENS_HPP
